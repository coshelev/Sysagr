&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОбъектОснование") Тогда
		РедактируемыйОбъект = Параметры.ОбъектОснование;
	КонецЕсли;
	
	ОтображатьТолькоЗаполненныеДвижения = Истина;
	
	Если ЗначениеЗаполнено(РедактируемыйОбъект) Тогда
		ПрочитатьРедактируемыйОбъектНаСервере();
		Элементы.РедактируемыйОбъект.ТолькоПросмотр=Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФорму()
	
	МассивУдаляемыхРеквизитов = Новый Массив;
	ДанныеРеквизитов = ПолучитьРеквизиты();
	Для Каждого Реквизит Из ДанныеРеквизитов Цикл
		Если Лев(Реквизит.Имя, 1) = "_" Тогда
			МассивУдаляемыхРеквизитов.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);
	
	МассивУдаляемыхРеквизитов.Очистить();
	
	Для Каждого ЭлементФормы из Элементы Цикл
		Если Лев(ЭлементФормы.Имя, 1) = "_" и
				(ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") И ТипЗнч(ЭлементФормы.Родитель) <> Тип("ТаблицаФормы") ИЛИ
					ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") и (ЭлементФормы.Родитель = Элементы.ТабличныеЧастиСтраницы
																ИЛИ ЭлементФормы.Родитель = Элементы.РегистрыНакопленияСтраницы
																ИЛИ ЭлементФормы.Родитель = Элементы.РегистрыСведенийСтраницы
																ИЛИ ЭлементФормы.Родитель = Элементы.РегистрыБухгалтерииСтраницы
																ИЛИ ЭлементФормы.Родитель = Элементы.РегистрыРасчетаСтраницы)) Тогда
			МассивУдаляемыхРеквизитов.Добавить(ЭлементФормы);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Эл_МассивУдаляемыхРеквизитов из МассивУдаляемыхРеквизитов Цикл
		Элементы.Удалить(Эл_МассивУдаляемыхРеквизитов);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРедактируемыйОбъектНаСервере()
	
	ПодготовитьФорму();
	
	Элементы.ЗаписатьИзмененияДвижений.Видимость = Ложь;
	Элементы.ОтображатьТолькоЗаполненныеДвижения.Видимость = Ложь;
		
	Метаданные_Объекта = РедактируемыйОбъект.Метаданные();
	
	Если Метаданные.Справочники.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <Справочник." + Метаданные_Объекта.Имя + ">";
		
	ИначеЕсли Метаданные.Документы.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <Документ." + Метаданные_Объекта.Имя + ">";
		Элементы.ЗаписатьИзмененияДвижений.Видимость = Истина;
		Элементы.ОтображатьТолькоЗаполненныеДвижения.Видимость = Истина;
		
		Форма_Вывести_Движения();
		
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <ПланВидовХарактеристик." + Метаданные_Объекта.Имя + ">";
		
	ИначеЕсли Метаданные.ПланыСчетов.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <Счёт." + Метаданные_Объекта.Имя + ">";
		
	ИначеЕсли Метаданные.ПланыВидовРасчета.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <ВидРасчёта." + Метаданные_Объекта.Имя + ">";
		
	ИначеЕсли Метаданные.ПланыОбмена.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <ПланОбмена." + Метаданные_Объекта.Имя + ">";
		
	ИначеЕсли Метаданные.БизнесПроцессы.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <БизнесПроцесс." + Метаданные_Объекта.Имя + ">";
		
	ИначеЕсли Метаданные.Задачи.Индекс(Метаданные_Объекта) >= 0 Тогда
		Элементы.РедактируемыйОбъект.Заголовок = "Тип объекта <Задача." + Метаданные_Объекта.Имя + ">";
		
	КонецЕсли;
	
	МассивРеквизитов = Новый Массив;
	Для Каждого _Реквизит из Метаданные.ОбщиеРеквизиты Цикл
		ЭлементСоставаОбщегоРеквизита = _Реквизит.Состав.Найти(Метаданные_Объекта);
		Если ЭлементСоставаОбщегоРеквизита.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать или
			ЭлементСоставаОбщегоРеквизита.Использование = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита.Использовать
			и _Реквизит.АвтоИспользование = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита.Использовать Тогда
			МассивРеквизитов.Добавить(_Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	Форма_Вывести_Реквизиты(МассивРеквизитов, "ОбщиеРеквизиты");
	
	Форма_Вывести_Реквизиты(Метаданные_Объекта.СтандартныеРеквизиты, "СтандартныеРеквизиты");
	
	Если Метаданные.Справочники.Индекс(Метаданные_Объекта) >= 0 ИЛИ Метаданные.ПланыВидовХарактеристик.Индекс(Метаданные_Объекта) >= 0 Тогда
		МассивРеквизитов = Новый Массив;
		Для Каждого _Реквизит из Метаданные_Объекта.Реквизиты Цикл
			Если _Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента ИЛИ
					РедактируемыйОбъект.ЭтоГруппа И _Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы ИЛИ
					Не РедактируемыйОбъект.ЭтоГруппа И _Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				МассивРеквизитов.Добавить(_Реквизит);
			КонецЕсли;
		КонецЦикла;
		Форма_Вывести_Реквизиты(МассивРеквизитов, "РеквизитыОбъекта");
	Иначе
		Форма_Вывести_Реквизиты(Метаданные_Объекта.Реквизиты, "РеквизитыОбъекта");
	КонецЕсли;
	
	Если Метаданные.ПланыСчетов.Индекс(Метаданные_Объекта) >= 0 Тогда
		Форма_Вывести_Реквизиты(Метаданные_Объекта.ПризнакиУчета, "ПризнакиУчёта");
	КонецЕсли;
	
	Для Каждого _ТабличнаяЧасть из Метаданные_Объекта.ТабличныеЧасти Цикл
		Если Метаданные.Справочники.Индекс(Метаданные_Объекта) >= 0 ИЛИ Метаданные.ПланыВидовХарактеристик.Индекс(Метаданные_Объекта) >= 0 Тогда
			Если _ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента ИЛИ
					РедактируемыйОбъект.ЭтоГруппа И _ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы ИЛИ
					Не РедактируемыйОбъект.ЭтоГруппа И _ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				Форма_Вывести_ТабличнуюЧасть(_ТабличнаяЧасть);
			КонецЕсли;
		Иначе
			Форма_Вывести_ТабличнуюЧасть(_ТабличнаяЧасть);
		КонецЕсли;
	КонецЦикла;
	
	Если Метаданные.ПланыСчетов.Индекс(Метаданные_Объекта) >= 0 или Метаданные.ПланыВидовРасчета.Индекс(Метаданные_Объекта) >= 0 Тогда
		Для Каждого _ТабличнаяЧасть из Метаданные_Объекта.СтандартныеТабличныеЧасти Цикл
			Форма_Вывести_ТабличнуюЧасть(_ТабличнаяЧасть);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйОбъектПриИзменении(Элемент)
	
	ПрочитатьРедактируемыйОбъектНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиСтрокуТабличнойЧасти(СтрокаТЗ, СтрокаТЧ, _ТабличнаяЧасть)
	
	Для каждого _Реквизит Из _ТабличнаяЧасть.СтандартныеРеквизиты Цикл
		_Объект = РедактируемыйОбъект.Метаданные();
		Если Метаданные.ПланыСчетов.Индекс(_Объект) >= 0 И СтрокаТЗ.Предопределенное
			Или Метаданные.ПланыВидовРасчета.Индекс(_Объект) >= 0  И СтрокаТЗ.Предопределенный Тогда
			Прервать;
		КонецЕсли;
		Если _Реквизит.Имя <> "Предопределенное" И _Реквизит.Имя <> "Предопределенный" И _Реквизит.Имя <> "Predefined"
			И _Реквизит.Имя <> "НомерСтроки" И _Реквизит.Имя <> "LineNumber" Тогда
			СтрокаТЧ[_Реквизит.Имя] = СтрокаТЗ[_Реквизит.Имя];
		КонецЕсли; 
	КонецЦикла; 
	
	Если НЕ ТипЗнч(_ТабличнаяЧасть) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда
		Для каждого _Реквизит Из _ТабличнаяЧасть.Реквизиты Цикл
			Если Не _Реквизит.Тип.СодержитТип(Тип("ХранилищеЗначения"))
				И _Реквизит.Имя <> "НомерСтроки" И _Реквизит.Имя <> "LineNumber" Тогда
				СтрокаТЧ[_Реквизит.Имя] = СтрокаТЗ[_Реквизит.Имя];
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиТабличнуюЧастьВОбъектНаСервере(РедактируемыйОбъект_Об, _ТабличнаяЧасть)
	
	ТЗ = РеквизитФормыВЗначение("_ТабличнаяЧасть" + _ТабличнаяЧасть.Имя);
	ТЧ = РедактируемыйОбъект_Об[_ТабличнаяЧасть.Имя];
	
	ОставляемыеСтроки = Новый Соответствие;
	Для каждого Стр_ТЗ Из ТЗ Цикл
		Если Стр_ТЗ.НомерСтроки > 0 Тогда
			ОставляемыеСтроки.Вставить(ТЧ[Стр_ТЗ.НомерСтроки - 1], Стр_ТЗ.НомерСтроки);
		КонецЕсли; 
	КонецЦикла;
	
	Ёж = 0;
	Пока Ёж < ТЧ.Количество() Цикл
		Если ОставляемыеСтроки[ТЧ[Ёж]] = Неопределено Тогда
			ТЧ.Удалить(ТЧ[Ёж]);
		Иначе
			Ёж = Ёж + 1;
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого Эл_ОставляемыеСтроки Из ОставляемыеСтроки Цикл
		СтрокаТЗ = ТЗ.Найти(Эл_ОставляемыеСтроки.Значение, "НомерСтроки");
		ПеренестиСтрокуТабличнойЧасти(СтрокаТЗ, Эл_ОставляемыеСтроки.Ключ, _ТабличнаяЧасть);
	КонецЦикла; 
	
	НС_ТЗ = ТЗ.НайтиСтроки(Новый Структура("НомерСтроки", 0));
	Для каждого Строка_НС_ТЗ Из НС_ТЗ Цикл
		НовСтр_ТЧ = ТЧ.Добавить();
		ПеренестиСтрокуТабличнойЧасти(Строка_НС_ТЗ, НовСтр_ТЧ, _ТабличнаяЧасть);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРедактируемыйОбъектНаСервере()
	
	_Объект = РедактируемыйОбъект.Метаданные();
	
	РедактируемыйОбъект_Об = РедактируемыйОбъект.ПолучитьОбъект();
	
	Для Каждого _Реквизит из Метаданные.ОбщиеРеквизиты Цикл
		ЭлементСоставаОбщегоРеквизита = _Реквизит.Состав.Найти(_Объект);
		Если ЭлементСоставаОбщегоРеквизита.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать или
			ЭлементСоставаОбщегоРеквизита.Использование = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита.Использовать
			и _Реквизит.АвтоИспользование = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита.Использовать Тогда
			РедактируемыйОбъект_Об[_Реквизит.Имя] = ЭтаФорма["_" + _Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого _Реквизит из _Объект.СтандартныеРеквизиты Цикл
		Если НЕ (_Реквизит.Имя = "Ссылка" или _Реквизит.Имя = "Ref" ИЛИ _Реквизит.Имя = "Предопределенный" или _Реквизит.Имя = "Predefined"
			 ИЛИ _Реквизит.Имя = "Проведен" ИЛИ _Реквизит.Имя = "Posted" ИЛИ _Реквизит.Имя = "ЭтоГруппа"  ИЛИ _Реквизит.Имя = "IsFolder") Тогда
			РедактируемыйОбъект_Об[_Реквизит.Имя] = ЭтаФорма["_" + _Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;

	Если Метаданные.Справочники.Индекс(_Объект) >= 0 ИЛИ Метаданные.ПланыВидовХарактеристик.Индекс(_Объект) >= 0 Тогда
		Для Каждого _Реквизит из _Объект.Реквизиты Цикл
			Если Не _Реквизит.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда
				Если _Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента ИЛИ
						РедактируемыйОбъект.ЭтоГруппа И _Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы ИЛИ
						Не РедактируемыйОбъект.ЭтоГруппа И _Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
					РедактируемыйОбъект_Об[_Реквизит.Имя] = ЭтаФорма["_" + _Реквизит.Имя];
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Для Каждого _Реквизит из _Объект.Реквизиты Цикл
			Если Не _Реквизит.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда
				РедактируемыйОбъект_Об[_Реквизит.Имя] = ЭтаФорма["_" + _Реквизит.Имя];
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Метаданные.ПланыСчетов.Индекс(_Объект) >= 0 Тогда
		Для Каждого _Реквизит из _Объект.ПризнакиУчета Цикл
			РедактируемыйОбъект_Об[_Реквизит.Имя] = ЭтаФорма["_" + _Реквизит.Имя];
		КонецЦикла;
	КонецЕсли;
	
	Если Метаданные.ПланыСчетов.Индекс(_Объект) >= 0 или Метаданные.ПланыВидовРасчета.Индекс(_Объект) >= 0 Тогда
		Для Каждого _ТабличнаяЧасть из _Объект.СтандартныеТабличныеЧасти Цикл
			ПеренестиТабличнуюЧастьВОбъектНаСервере(РедактируемыйОбъект_Об, _ТабличнаяЧасть);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого _ТабличнаяЧасть из _Объект.ТабличныеЧасти Цикл
		Если Метаданные.Справочники.Индекс(_Объект) >= 0 ИЛИ Метаданные.ПланыВидовХарактеристик.Индекс(_Объект) >= 0 Тогда
			Если _ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента ИЛИ
					РедактируемыйОбъект.ЭтоГруппа И _ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы ИЛИ
					Не РедактируемыйОбъект.ЭтоГруппа И _ТабличнаяЧасть.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				ПеренестиТабличнуюЧастьВОбъектНаСервере(РедактируемыйОбъект_Об, _ТабличнаяЧасть);
			КонецЕсли;
		Иначе
			ПеренестиТабличнуюЧастьВОбъектНаСервере(РедактируемыйОбъект_Об, _ТабличнаяЧасть);
		КонецЕсли;
	КонецЦикла;
	
	Если ЭтаФорма.ВыполнитьЗаписьБезПроверок=Истина Тогда
		РедактируемыйОбъект_Об.ДополнительныеСвойства.Вставить("Обслуживание", Истина);
	КонецЕсли; 
	
	Если (Конвертация.ЭтоДокумент(РедактируемыйОбъект_Об.Ссылка)=Истина) И (РедактируемыйОбъект_Об.Ссылка.Метаданные().Проведение=Метаданные.СвойстваОбъектов.Проведение.Разрешить) И (РедактируемыйОбъект_Об.Проведен=Истина) Тогда
		РедактируемыйОбъект_Об.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		РедактируемыйОбъект_Об.Записать();
	КонецЕсли; 
	
	ПрочитатьРедактируемыйОбъектНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДвиженияДокументаНаСервере()
	
	_Объект = РедактируемыйОбъект.Метаданные();
	
	РедактируемыйОбъект_Об = РедактируемыйОбъект.ПолучитьОбъект();
	
	Для каждого _Регистр Из _Объект.Движения Цикл
		Если Метаданные.РегистрыБухгалтерии.Содержит(_Регистр) Тогда
			ИмяРеквизитаФормы = "_РБ" + _Регистр.Имя;
		ИначеЕсли Метаданные.РегистрыНакопления.Содержит(_Регистр) Тогда
			ИмяРеквизитаФормы = "_РН" + _Регистр.Имя;
		ИначеЕсли Метаданные.РегистрыРасчета.Содержит(_Регистр) Тогда
			ИмяРеквизитаФормы = "_РР" + _Регистр.Имя;
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(_Регистр) Тогда
			ИмяРеквизитаФормы = "_РС" + _Регистр.Имя;
		КонецЕсли; 
		
		НаборЗаписей = РедактируемыйОбъект_Об.Движения[_Регистр.Имя];
		НаборЗаписей.Прочитать();
		Если ОтображатьТолькоЗаполненныеДвижения И НаборЗаписей.Количество() = 0 Тогда
			Продолжить
		КонецЕсли; 
		//НаборЗаписей.ОбменДанными.Загрузка = ВыполнитьЗаписьБезПроверок;
		НаборЗаписей.Очистить();
		тзРеквизитФормы = РеквизитФормыВЗначение(ИмяРеквизитаФормы);
		НаборЗаписей.Загрузить(тзРеквизитФормы);
		
		Если _Регистр.Имя = "Хозрасчетный" Тогда
			
			Валюта_ПустаяСсылка = Справочники.Валюты.ПустаяСсылка();
			Подразделение_ПустаяСсылка = Справочники.СтруктураПредприятия.ПустаяСсылка();
			НаправлениеДеятельности_ПустаяСсылка = Справочники.НаправленияДеятельности.ПустаяСсылка();
			
			Для Каждого Запись_НЗ Из НаборЗаписей Цикл
				Если НЕ Запись_НЗ.СчетДт.Валютный
					И Запись_НЗ.ВалютаДт = Валюта_ПустаяСсылка Тогда
					Запись_НЗ.ВалютаДт = NULL;
				КонецЕсли;
				
				Если НЕ Запись_НЗ.СчетКт.Валютный
					И Запись_НЗ.ВалютаКт = Валюта_ПустаяСсылка Тогда
					Запись_НЗ.ВалютаКт = NULL;
				КонецЕсли;
				
				Если НЕ Запись_НЗ.СчетДт.УчетПоПодразделениям
					И Запись_НЗ.ПодразделениеДт = Подразделение_ПустаяСсылка Тогда
					Запись_НЗ.ПодразделениеДт = NULL;
				КонецЕсли;
				
				Если НЕ Запись_НЗ.СчетКт.УчетПоПодразделениям
					И Запись_НЗ.ПодразделениеКт = Подразделение_ПустаяСсылка Тогда
					Запись_НЗ.ПодразделениеКт = NULL;
				КонецЕсли;
				
				Если НЕ Запись_НЗ.СчетДт.УчетПоНаправлениямДеятельности
					И Запись_НЗ.НаправлениеДеятельностиДт = НаправлениеДеятельности_ПустаяСсылка Тогда
					Запись_НЗ.НаправлениеДеятельностиДт = NULL;
				КонецЕсли;
				
				Если НЕ Запись_НЗ.СчетКт.УчетПоНаправлениямДеятельности
					И Запись_НЗ.НаправлениеДеятельностиКт = НаправлениеДеятельности_ПустаяСсылка Тогда
					Запись_НЗ.НаправлениеДеятельностиКт = NULL;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		НаборЗаписей.Записать();
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзмененияОбъекта(Команда)
	
	ЗаписатьРедактируемыйОбъектНаСервере();
	
	Если ТипЗнч(ЭтаФорма.ВладелецФормы)=Тип("ФормаКлиентскогоПриложения") Тогда
		ЭтаФорма.ВладелецФормы.ОбновитьОтображениеДанных();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзмененияДвижений(Команда)
	
	ЗаписатьДвиженияДокументаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломИзмененияТаблицыФормы(Элемент, Отказ)
	
	Предопределенное = Ложь;
	Если Элемент.ТекущиеДанные.Свойство("Предопределенное", Предопределенное) ИЛИ
		Элемент.ТекущиеДанные.Свойство("Предопределенный", Предопределенное) ИЛИ
		Элемент.ТекущиеДанные.Свойство("Predefined", Предопределенное) Тогда
		Отказ = Предопределенное = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Отказ = Прав(Элемент.ТекущийЭлемент.Имя, 16) = "Предопределенный" ИЛИ Прав(Элемент.ТекущийЭлемент.Имя, 16) = "Предопределенное" ИЛИ Прав(Элемент.ТекущийЭлемент.Имя, 10) = "Predefined";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломДобавленияСтрокиВТаблицуФормы(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Если Элемент.ТекущиеДанные.Свойство("НомерСтроки") Тогда
			Элемент.ТекущиеДанные.НомерСтроки = 0;
		КонецЕсли;
		Если Элемент.ТекущиеДанные.Свойство("Предопределенное") Тогда
			Элемент.ТекущиеДанные.Предопределенное = Ложь;
		ИначеЕсли Элемент.ТекущиеДанные.Свойство("Предопределенный") Тогда
			Элемент.ТекущиеДанные.Предопределенный = Ложь;
		ИначеЕсли Элемент.ТекущиеДанные.Свойство("Predefined") Тогда
			Элемент.ТекущиеДанные.Predefined = Ложь;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьДвиженияПриИзменении(Элемент)
	
	ПрочитатьРедактируемыйОбъектНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьТолькоЗаполненныеДвиженияПриИзменении(Элемент)
	
	ПрочитатьРедактируемыйОбъектНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура Форма_Вывести_КолонкиТаблицы(НаборРеквизитов, ЭлементФормы, ИмяРеквизитаФормы)
	
	Если ТипЗнч(НаборРеквизитов) = Тип("КоллекцияКолонокТаблицыЗначений") Тогда
		Для каждого КолонкаРекв Из НаборРеквизитов Цикл
			Если КолонкаРекв.Имя = "МоментВремени" Тогда
				Продолжить
			КонецЕсли; 
			Колонка = Элементы.Добавить(ЭлементФормы.Имя + КолонкаРекв.Имя, Тип("ПолеФормы"), ЭлементФормы);
			Колонка.Вид = ?(КолонкаРекв.ТипЗначения.Типы().Количество() = 1 И КолонкаРекв.ТипЗначения.Типы()[0] = Тип("Булево"), ВидПоляФормы.ПолеФлажка, ВидПоляФормы.ПолеВвода);
			Колонка.ПутьКДанным = ИмяРеквизитаФормы + "." + КолонкаРекв.Имя;
			Колонка.Подсказка = КолонкаРекв.Заголовок;
			Колонка.ТолькоПросмотр = КолонкаРекв.Имя = "НомерСтроки" или КолонкаРекв.Имя = "LineNumber";
		КонецЦикла; 
	Иначе 
		Для каждого _Реквизит Из НаборРеквизитов Цикл
			Колонка = Элементы.Добавить(ЭлементФормы.Имя + _Реквизит.Имя, Тип("ПолеФормы"), ЭлементФормы);
			Колонка.Вид = ?(_Реквизит.Тип.Типы().Количество() = 1 И _Реквизит.Тип.Типы()[0] = Тип("Булево"), ВидПоляФормы.ПолеФлажка, ВидПоляФормы.ПолеВвода);
			Колонка.ПутьКДанным = ИмяРеквизитаФормы + "." + _Реквизит.Имя;
			Колонка.Подсказка = _Реквизит.Синоним;
			Колонка.ТолькоПросмотр = _Реквизит.Имя = "НомерСтроки" или _Реквизит.Имя = "LineNumber";
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура Форма_Вывести_Колонки(ДобавляемыеРеквизиты, НаборРеквизитов, ИмяРеквизитаФормы)
	
	Если ТипЗнч(НаборРеквизитов) = Тип("КоллекцияКолонокТаблицыЗначений") Тогда
		Для каждого Колонка Из НаборРеквизитов Цикл
			Если Колонка.Имя = "МоментВремени" Тогда
				Продолжить
			КонецЕсли; 
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя,
											?(Колонка.ТипЗначения.СодержитТип(Тип("ХранилищеЗначения")), Новый ОписаниеТипов("Строка"), Колонка.ТипЗначения),
											ИмяРеквизитаФормы,
											Колонка.Имя + ?(Колонка.Заголовок = Колонка.Имя, "", " (" + Колонка.Заголовок + ")"),
											Истина));
		КонецЦикла; 
	Иначе 
		Для каждого _Реквизит Из НаборРеквизитов Цикл
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(_Реквизит.Имя,
											?(_Реквизит.Тип.СодержитТип(Тип("ХранилищеЗначения")), Новый ОписаниеТипов("Строка"), _Реквизит.Тип),
											ИмяРеквизитаФормы,
											_Реквизит.Имя + ?(ПустаяСтрока(_Реквизит.Синоним), "", " (" + _Реквизит.Синоним + ")"),
											Истина));
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Форма_Вывести_Движения()
	
	_Объект = РедактируемыйОбъект.Метаданные();
	
	РедактируемыйОбъект_Об = РедактируемыйОбъект.ПолучитьОбъект();
	ДобавляемыеРеквизиты = Новый Массив;
	
	ДвиженияДокумента = Новый Соответствие;
	
	СписокДвижений = Новый СписокЗначений;
	Для Каждого _Регистр Из _Объект.Движения Цикл
		 СписокДвижений.Добавить(_Регистр.Имя, _Регистр.Синоним);
	КонецЦикла;
	СписокДвижений.СортироватьПоПредставлению();
	
	Для Каждого Эл_СписокДвижений Из СписокДвижений Цикл
		НаборЗаписей = РедактируемыйОбъект_Об.Движения[Эл_СписокДвижений.Значение];
		НаборЗаписей.Прочитать();
		Если ОтображатьТолькоЗаполненныеДвижения И НаборЗаписей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		Если Метаданные.РегистрыБухгалтерии.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РБ" + Эл_СписокДвижений.Значение;
		ИначеЕсли Метаданные.РегистрыНакопления.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РН" + Эл_СписокДвижений.Значение;
		ИначеЕсли Метаданные.РегистрыРасчета.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РР" + Эл_СписокДвижений.Значение;
		ИначеЕсли Метаданные.РегистрыСведений.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РС" + Эл_СписокДвижений.Значение;
		КонецЕсли; 
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы,
										Новый ОписаниеТипов("ТаблицаЗначений"),
										,
										Эл_СписокДвижений.Представление + " (" + Эл_СписокДвижений.Значение + ")",
										Истина));
		
		тзДвижений = НаборЗаписей.Выгрузить();
		ДвиженияДокумента.Вставить(ИмяРеквизитаФормы, тзДвижений);
		
		Форма_Вывести_Колонки(ДобавляемыеРеквизиты, тзДвижений.Колонки, ИмяРеквизитаФормы);
		
	КонецЦикла; 
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для каждого Эл_СписокДвижений Из СписокДвижений Цикл
		Если Метаданные.РегистрыБухгалтерии.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РБ" + Эл_СписокДвижений.Значение;
			ИмяРодительскойЗакладки = "РегистрыБухгалтерииСтраницы";
		ИначеЕсли Метаданные.РегистрыНакопления.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РН" + Эл_СписокДвижений.Значение;
			ИмяРодительскойЗакладки = "РегистрыНакопленияСтраницы";
		ИначеЕсли Метаданные.РегистрыРасчета.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РР" + Эл_СписокДвижений.Значение;
			ИмяРодительскойЗакладки = "РегистрыРасчетаСтраницы";
		ИначеЕсли Метаданные.РегистрыСведений.Найти(Эл_СписокДвижений.Значение) <> Неопределено Тогда
			ИмяРеквизитаФормы = "_РС" + Эл_СписокДвижений.Значение;
			ИмяРодительскойЗакладки = "РегистрыСведенийСтраницы";
		КонецЕсли; 
		
		тзДвижений = ДвиженияДокумента.Получить(ИмяРеквизитаФормы);
		Если тзДвижений = Неопределено Тогда
			Продолжить
		КонецЕсли; 
		
		ЭлементЗакладка = Элементы.Добавить("_" + ИмяРодительскойЗакладки + Эл_СписокДвижений.Значение, Тип("ГруппаФормы"), Элементы[ИмяРодительскойЗакладки]);
		ЭлементЗакладка.Вид = ВидГруппыФормы.Страница;
		ЭлементЗакладка.Заголовок = Эл_СписокДвижений.Представление;
		ЭлементЗакладка.Подсказка = Эл_СписокДвижений.Значение;
		
		ЭлементФормы = Элементы.Добавить(ИмяРеквизитаФормы, Тип("ТаблицаФормы"), Элементы["_" + ИмяРодительскойЗакладки + Эл_СписокДвижений.Значение]);
		ЭлементФормы.ПутьКДанным = ИмяРеквизитаФормы;
		ЭлементФормы.Подсказка = Эл_СписокДвижений.Значение;
		ЭлементФормы.Заголовок = Эл_СписокДвижений.Представление;
		
		Форма_Вывести_КолонкиТаблицы(тзДвижений.Колонки, ЭлементФормы, ИмяРеквизитаФормы);
		
		Для каждого СтрокаДвижений Из тзДвижений Цикл
			тзРеквизитФормы = ЭтаФорма[ИмяРеквизитаФормы];
			СтрокаТЗРеквизита = тзРеквизитФормы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЗРеквизита, СтрокаДвижений);
		КонецЦикла;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура Форма_Вывести_Реквизиты(НаборРеквизитов, ИмяГруппыКудаДобавлять)
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для каждого Эл_НаборРеквизитов Из НаборРеквизитов Цикл
		ИмяРеквизитаФормы = "_" + Эл_НаборРеквизитов.Имя;
		Если Эл_НаборРеквизитов.Имя = "Ссылка" ИЛИ Эл_НаборРеквизитов.Имя = "Ref" ИЛИ Эл_НаборРеквизитов.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы,
											Новый ОписаниеТипов("Строка"),
											,
											Эл_НаборРеквизитов.Имя,
											Истина));
		Иначе
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы,
											Эл_НаборРеквизитов.Тип,
											,
											?(ПустаяСтрока(Эл_НаборРеквизитов.Синоним), Эл_НаборРеквизитов.Имя, Эл_НаборРеквизитов.Синоним + " (" + Эл_НаборРеквизитов.Имя + ")"),
											Истина));
		КонецЕсли;
	КонецЦикла; 
	
	Если СортироватьРеквизиты = 1 Тогда
		СписокЗначенийДляСортировки = Новый СписокЗначений;
		Для Каждого Эл_ДобавляемыеРеквизиты Из ДобавляемыеРеквизиты Цикл
			СписокЗначенийДляСортировки.Добавить(Эл_ДобавляемыеРеквизиты, Эл_ДобавляемыеРеквизиты.Заголовок);
		КонецЦикла;	
		СписокЗначенийДляСортировки.СортироватьПоПредставлению();
		ДобавляемыеРеквизиты = СписокЗначенийДляСортировки.ВыгрузитьЗначения();
	КонецЕсли;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для каждого Эл_ДобавляемыеРеквизиты Из ДобавляемыеРеквизиты Цикл
		
		Элемент = Элементы.Добавить(Эл_ДобавляемыеРеквизиты.Имя, Тип("ПолеФормы"), Элементы[ИмяГруппыКудаДобавлять]);
		
		Если Эл_ДобавляемыеРеквизиты.Имя = "_Ссылка" или Эл_ДобавляемыеРеквизиты.Имя = "_Ref" Тогда
			Элемент.ТолькоПросмотр = Истина;
			ЭтаФорма[Эл_ДобавляемыеРеквизиты.Имя] = Строка(РедактируемыйОбъект.УникальныйИдентификатор());
		Иначе
			Если Эл_ДобавляемыеРеквизиты.ТипЗначения.СодержитТип(Тип("ХранилищеЗначения")) Тогда
				Элемент.ТолькоПросмотр = Истина;
				ЭтаФорма[Эл_ДобавляемыеРеквизиты.Имя] = "Хранилище значения";
			Иначе
				Элемент.ТолькоПросмотр = Эл_ДобавляемыеРеквизиты.Имя = "_Предопределенный" ИЛИ Эл_ДобавляемыеРеквизиты.Имя = "_Predefined" ИЛИ
											Эл_ДобавляемыеРеквизиты.Имя = "_Проведен" ИЛИ Эл_ДобавляемыеРеквизиты.Имя = "_Posted" ИЛИ
											Эл_ДобавляемыеРеквизиты.Имя = "_ЭтоГруппа" ИЛИ Эл_ДобавляемыеРеквизиты.Имя = "_IsFolder";
				ЭтаФорма[Эл_ДобавляемыеРеквизиты.Имя] = РедактируемыйОбъект[Сред(Эл_ДобавляемыеРеквизиты.Имя, 2)];
			КонецЕсли; 
		КонецЕсли;
		
		Если Эл_ДобавляемыеРеквизиты.ТипЗначения.Типы().Количество() = 1 И Эл_ДобавляемыеРеквизиты.ТипЗначения.Типы()[0] = Тип("Булево") Тогда
			Элемент.Вид = ВидПоляФормы.ПолеФлажка
		Иначе
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
		
		Элемент.ПутьКДанным = Эл_ДобавляемыеРеквизиты.Имя;
		Элемент.Подсказка = Эл_ДобавляемыеРеквизиты.Заголовок;
		
		Если Эл_ДобавляемыеРеквизиты.ТипЗначения.СодержитТип(Тип("Строка")) И Эл_ДобавляемыеРеквизиты.ТипЗначения.КвалификаторыСтроки.Длина = 0 Тогда
			Элемент.МногострочныйРежим = Истина;
			Элемент.Высота = 5;
		КонецЕсли
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура Форма_Вывести_ТабличнуюЧасть(_ТабличнаяЧасть)
	
	ИмяРеквизитаФормыТЧ = "_ТабличнаяЧасть" + _ТабличнаяЧасть.Имя;
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормыТЧ,
									Новый ОписаниеТипов("ТаблицаЗначений"),
									,
									_ТабличнаяЧасть.Имя + ?(_ТабличнаяЧасть.Имя = _ТабличнаяЧасть.Представление(), "", " (" + _ТабличнаяЧасть.Представление() + ")"),
									Истина));
									
	Форма_Вывести_Колонки(ДобавляемыеРеквизиты, _ТабличнаяЧасть.СтандартныеРеквизиты, ИмяРеквизитаФормыТЧ);
	
	Если НЕ ТипЗнч(_ТабличнаяЧасть) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда
		Форма_Вывести_Колонки(ДобавляемыеРеквизиты, _ТабличнаяЧасть.Реквизиты, ИмяРеквизитаФормыТЧ);
	КонецЕсли; 
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	тз = ЭтаФорма[ИмяРеквизитаФормыТЧ];
	Для каждого стр Из РедактируемыйОбъект[_ТабличнаяЧасть.Имя] Цикл
		СтрокаТаблицыНаФорме = тз.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыНаФорме, стр);
	КонецЦикла; 
	
	ЭлементЗакладкаТЧ = Элементы.Добавить("_ТабличныеЧастиСтраницы" + _ТабличнаяЧасть.Имя, Тип("ГруппаФормы"), Элементы.ТабличныеЧастиСтраницы);
	ЭлементЗакладкаТЧ.Вид = ВидГруппыФормы.Страница;
	ЭлементЗакладкаТЧ.Заголовок = _ТабличнаяЧасть.Имя;
	ЭлементЗакладкаТЧ.Подсказка = _ТабличнаяЧасть.Синоним;
	
	ЭлементФормыТЧ = Элементы.Добавить(ИмяРеквизитаФормыТЧ, Тип("ТаблицаФормы"), Элементы["_ТабличныеЧастиСтраницы" + _ТабличнаяЧасть.Имя]);
	ЭлементФормыТЧ.ПутьКДанным = ИмяРеквизитаФормыТЧ;
	ЭлементФормыТЧ.Подсказка = _ТабличнаяЧасть.Комментарий;
	ЭлементФормыТЧ.Заголовок = _ТабличнаяЧасть.Синоним;
	
	Форма_Вывести_КолонкиТаблицы(_ТабличнаяЧасть.СтандартныеРеквизиты , ЭлементФормыТЧ, ИмяРеквизитаФормыТЧ);
	
	Если НЕ ТипЗнч(_ТабличнаяЧасть) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда
		Форма_Вывести_КолонкиТаблицы(_ТабличнаяЧасть.Реквизиты , ЭлементФормыТЧ, ИмяРеквизитаФормыТЧ);
	Иначе
		ЭлементФормыТЧ.УстановитьДействие("ПередНачаломИзменения", "ПередНачаломИзмененияТаблицыФормы");
	КонецЕсли;
	
	ЭлементФормыТЧ.УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияСтрокиВТаблицуФормы");
			
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьРедактируемыйОбъект(Команда)
	
	ПрочитатьРедактируемыйОбъектНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьРеквизитыПриИзменении(Элемент)
	
	ПрочитатьРедактируемыйОбъектНаСервере();
	
КонецПроцедуры
