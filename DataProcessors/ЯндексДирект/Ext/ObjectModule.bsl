Функция УстановитьНастройки() Экспорт
	
	ТекстДок = ЭтотОбъект.ПолучитьМакет("ТекстЗапроса");
	ЭтотОбъект.ТекстЗапроса = ТекстДок.ПолучитьТекст();  
	
	//Заполнение табличной части УчетныеЗаписи
	//-----------------------------------------
	
	//Получи параметры
	Парам = Новый Структура("ЯндексДиректУчетныеЗаписи");
	РегистрыСведений.УчетнаяПолитика.Получи(Парам);	
	Если Не ЗначениеЗаполнено(Парам.ЯндексДиректУчетныеЗаписи) Тогда
		ЗаписьЖурналаРегистрации("ЯндексДирект.УстановитьНастройки", УровеньЖурналаРегистрации.Ошибка,,, "Не найдены параметры в учетной политике");
		Возврат "ошибка"; 
	КонецЕсли;
	
	Аккаунты 	= ОбщегоНазначенияКлиентСервер.ПрочитатьЗначениеJSON(Парам.ЯндексДиректУчетныеЗаписи);	
	Доступно = ТипЗнч(Аккаунты) = Тип("Массив") И Аккаунты.Количество()>0;
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("ЯндексДирект.УстановитьНастройки", УровеньЖурналаРегистрации.Ошибка,,, "Ошибка чтения учетных данных");
		Возврат "ошибка";
	КонецЕсли;
	
	Для Каждого i Из Аккаунты Цикл
		
		// Отбрось не активные учетки
		Если i.isActive = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		// Отбрось учетки без токена OAuth
		Если i.token ="" Тогда 
			Продолжить;
		КонецЕсли;
		
		Новая = УчетныеЗаписи.Добавить();
		Новая.Логин = i.login;
		Новая.Токен = i.token;
	КонецЦикла;     
	
КонецФункции


Функция ЗагрузитьДанныеПоВсемУчетнымЗаписям(ДатаНач='20180101', ДатаОконч='20180131') Экспорт
	
	Если ЭтотОбъект.УчетныеЗаписи.Количество()=0 Тогда
		Возврат "Ошибка: "+"нет активных учетных записей или записей с токеном"
	КонецЕсли;
	
	Для Каждого Учетка Из УчетныеЗаписи Цикл
		ЗагрузитьДанныеПоОднойУчетнойЗаписи(ДатаНач, ДатаОконч, Учетка.Токен, Учетка.Логин); 	
	КонецЦикла;
	
	Возврат "ок"
КонецФункции
 
Функция ЗагрузитьДанныеПоОднойУчетнойЗаписи	
	//(ДатаНачала = '20180101', ДатаОкончания = '20180131', Токен ="AQAAAAAoIh7bAATRlDr7ldQ-_k09hx_AbaQzY-o", УчетнаяЗапись = "kuzovnoi-MSK") Экспорт  		// работает
	(ДатаНачала = '20191028', ДатаОкончания = '20191029', Токен ="AgAAAAA1cOpoAATRlGCnXQb7D0_rt_owjDpkKf4", УчетнаяЗапись = "e-16484070") Экспорт			// работает
	//(ДатаНачала = '20191028', ДатаОкончания = '20191029', Токен ="AgAAAAA1cbZiAATRlKM6wE4obUxEn4tTLlLbUiI", УчетнаяЗапись = "e-16484202") Экспорт	// работает
		
	Перем ТекстЗапроса;
	
	Возврат "отмена";
		
	Сервер 		= "api.direct.yandex.com";  
	HttpСоед 	= Новый HTTPСоединение(Сервер,443,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	HttpЗапрос 	= Новый HTTPЗапрос();
	HttpЗапрос.АдресРесурса = "/json/v5/reports";
	
	// Сформируй заголовок HTTP запроса. Для авторизации по OAuth укажи токен
	//-------------------------------------------------------------------------
	//Токен = "AQAAAAAcMUM4AATRlOrRNU7IPUCqrAVf_PQl96M";  
	HttpЗапрос.Заголовки.Вставить("Authorization","Bearer " + Токен);
	
	ТекстЗапроса = ЭтотОбъект.ТекстЗапроса;
	
	//Замени даты по умолчанию из шаблона запроса на требуемые
	//---------------------------------------------------------   
	ДатаНачалаJSON 		= ЗаписатьДатуJSON(ДатаНачала, ФорматДатыJSON.ISO);
	ДатаНачалаJSON		= Лев(ДатаНачалаJSON,10);
	
	ДатаОкончанияJSON 	= ЗаписатьДатуJSON(ДатаОкончания, ФорматДатыJSON.ISO);
	ДатаОкончанияJSON	= Лев(ДатаОкончанияJSON,10);

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "2018-02-01", ДатаНачалаJSON);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "2018-02-18", ДатаОкончанияJSON);
	
	//Сформируй уникальное имя отчета, иначе может вернуть ошибку
	//-----------------------------------------------------------
	
	//Сформируй тело HTTP POST запроса
	//---------------------------------
	HttpЗапрос.УстановитьТелоИзСтроки(ТекстЗапроса); 
	
   //Пример тела запроса
   //  {
   //  "params": {
   //    "SelectionCriteria": {
   //          "DateFrom": "2018-02-01",
   //          "DateTo": "2018-02-18"
   //    },
   //    "FieldNames": [ "Date","CampaignId", "Clicks", "Cost" ], 
   //    "OrderBy": [{
   //      "Field": "Date"
   //    }],
   //    "ReportName": "Actual Data",
   //    "ReportType": "CAMPAIGN_PERFORMANCE_REPORT",
   //    "DateRangeType": "CUSTOM_DATE",
   //    "Format": "TSV",
   //    "IncludeVAT": "YES",
   //    "IncludeDiscount": "YES"
   //  }
   //}
	
	//Получи ответ на запрос
	//-------------------------
	//ИмяТемпФайла = ПолучитьИмяВременногоФайла();	
	Ответ = HttpСоед.ВызватьHTTPМетод("POST",HttpЗапрос);
	
	
	кмд = СтрШаблон("curl -X POST https://api.direct.yandex.com/json/v5/report:443 -H ""Authorization"":""Bearer %1"" -d %2", Token, ТекстЗапроса) ;
	Авито.CURL_HttpResponse(кмд);
	
	
	Если ТипЗнч(Ответ) = Тип("HTTPОтвет") Тогда // Это условие введено, потому что иногда платформа ошибочно возвращает ответ как строку		
		//Если некоректный ответ, тогда возврат
		//-------------------------------------
		Если Ответ.КодСостояния <> 200 Тогда
			Данные = "ТекстЗапроса="+ТекстЗапроса;
			Комментарий = "Вэб сервер вернул ошибку"+Ответ.КодСостояния;
			ОбслуживаниеСервер.ЗарегистрироватьСобытие("Неожиданный ответ веб-сервера", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);
			Возврат "Ошибка: "+Ответ.КодСостояния;
		КонецЕсли;
		Строка = Ответ.ПолучитьТелоКакСтроку();
	КонецЕсли;
	
	//	Пример ответа на запрос
	//	"Actual Data (2018-02-01 - 2018-02-18)"
	//	Date	CampaignId	Clicks	Cost
	//	2018-02-01	25848595	1077	25333950000
	//	2018-02-01	25848610	3	81180000
	//	2018-02-01	25848735	14	1570540000
	//	2018-02-18	27663784	88	1515510000
	//	2018-02-18	32219634	7	90530000
	//	Total rows: 482
	
	Если Строка = "" Тогда
		Возврат "Ошибка: пустой ответ вэб-сервера на запрос";
	КонецЕсли;
		
	ТекстОтвета = Новый ТекстовыйДокумент();
	ТекстОтвета.УстановитьТекст(Строка);
	
	КоличествоСтрок = ТекстОтвета.КоличествоСтрок();
	Если КоличествоСтрок <= 1 Тогда
		Возврат "Ошибка: пустой ответ вэб-сервера на запрос";
	КонецЕсли;
	
	ТипСтр = Новый ОписаниеТипов("Строка");
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("Date", 			ТипСтр);
	ТЗ.Колонки.Добавить("CampaignId", 		ТипСтр);
	ТЗ.Колонки.Добавить("Clicks");
	ТЗ.Колонки.Добавить("Cost");
	ТЗ.Колонки.Добавить("AdGroupName");	
	ТЗ.Колонки.Добавить("Impressions");
	ТЗ.Колонки.Добавить("AvgImpressionPosition");
	ТЗ.Колонки.Добавить("AvgTrafficVolume");
	ТЗ.Колонки.Добавить("AvgClickPosition");
	ТЗ.Колонки.Добавить("Conversions");
	
	Значения = Новый Массив();
	
	//Игнорируем первую и последнюю строки, т.к. они не содержат данные
	//------------------------------------------------------------------
	Для Сч = 3 По КоличествоСтрок - 1 Цикл
		
		Стр = ТекстОтвета.ПолучитьСтроку(Сч);
		
		Значения.Очистить();
		Значения=СтрРазделить(Стр, Символы.Таб, Ложь);
		
		Стоимость = Значения[3];
		Если Стоимость = "0" Тогда
			Продолжить;
		КонецЕсли;
		
		Новая = ТЗ.Добавить();
		Новая["Date"] 		 			= Значения[0];
		Новая["CampaignId"]  			= Значения[1];
		Новая["Clicks"] 	 			= Значения[2];
		Новая["Cost"] 		 			= Значения[3];
		
		//Новая["AdGroupName"] 			= Значения[4]; 
		//Новая["Impressions"]			= Значения[5];
		//Новая["AvgImpressionPosition"]	= Значения[6];
		//Новая["AvgTrafficVolume"]		= Значения[7];
		//Новая["AvgClickPosition"]		= Значения[8];
		//Новая["Conversions"]			= Значения[9];
		
	КонецЦикла;
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		
		Date = СтрокаТЗ["Date"];		
		Период = ПрочитатьДатуJSON(Date, ФорматДатыJSON.ISO);
		
		ИдДомпании = СтрокаТЗ["CampaignId"];
		Клики = Число(СтрокаТЗ["Clicks"]);
		Стоимость = Число(СтрокаТЗ["Cost"]) / 1000000;
		
		ИдКомпанииСсылка 	= Справочники.ИдентификаторыСтрокИнтернетЗаявок.УстановиИдентификаторСтроки(ИдДомпании,			"Яндекс Директ");
		СервисСсылка 		= Справочники.ИдентификаторыСтрокИнтернетЗаявок.УстановиИдентификаторСтроки("direct.yandex.ru", "Яндекс Директ");
		УчетнаяЗаписьСсылка = Справочники.ИдентификаторыСтрокИнтернетЗаявок.УстановиИдентификаторСтроки(УчетнаяЗапись, 		"Яндекс Директ");
	
		МЗ = РегистрыСведений.ИнтернетЗаявкиСтоимость.СоздатьМенеджерЗаписи();
		МЗ.ПериодЗаявки 	= Период;
		МЗ.ИдКомпании 		= ИдКомпанииСсылка;
		МЗ.Сервис 			= СервисСсылка;
		МЗ.УчетнаяЗапись 	= УчетнаяЗаписьСсылка;
		МЗ.Клики 			= Клики;
		МЗ.Стоимость 		= Стоимость;	
		ЗаполнитьЗначенияСвойств(МЗ, СтрокаТЗ, "AdGroupName, Impressions, AvgImpressionPosition, AvgTrafficVolume, AvgClickPosition, Conversions");

		Попытка
			МЗ.Записать()
		Исключение
			Данные = "ПериодЗаявки = "+Период+"; ИдКомпании = "+ИдКомпанииСсылка+"; Сервис = "+ СервисСсылка+"; УчетнаяЗапись = "+УчетнаяЗаписьСсылка+"; Клики = "+Клики+"; Стоимость = "+Стоимость;
			Комментарий = ОписаниеОшибки();
			ОбслуживаниеСервер.ЗарегистрироватьСобытие("", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ИнтернетЗаявкиСвойства, Данные, Комментарий);
			Возврат "Ошикба: неудалось записать данные в регистр сведений";
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат "ок";
КонецФункции

