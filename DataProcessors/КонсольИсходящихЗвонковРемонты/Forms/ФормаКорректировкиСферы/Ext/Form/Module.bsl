&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИмяАктивногоДинамичСписка 		= "ЗадачиСписокЛояльностьРемонта";
	ВопросСфераНегатива				=  Справочники.ИдентификаторыСтрок.НайтиПоНаименованию("Сфера негатива");	
	
	Если Не ЗначениеЗаполнено(Параметры.СигнатураПродажи) Тогда
		Сообщить("Не передан параметр: сигнатура продажи");
	КонецЕсли;
	ЗаполниТаблицуВопросовТребующихВводОтветов(ЭтаФорма.ИмяАктивногоДинамичСписка, Параметры.СигнатураПродажи, ВопросСфераНегатива);
КонецПроцедуры

&НаСервере
Процедура ЗаполниТаблицуВопросовТребующихВводОтветов(ИмяАктивногоДинамическогоСписка, СигнатураПродажи, Вопрос);
	//Используется для звонков и почты
	
	Если Не ЗначениеЗаполнено(ИмяАктивногоДинамическогоСписка) Тогда
		Возврат
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СигнатураПродажи) Тогда
		Возврат
	КонецЕсли;

	Если ЭтаФорма.ТаблицаВведенныхОтветов.Количество()>0 Тогда
		ЭтаФорма.ТаблицаВведенныхОтветов.Очистить();
	КонецЕсли;
	
	Если ЭтаФорма.ТаблицаВопросОтвет.Количество()>0 Тогда
		ЭтаФорма.ТаблицаВопросОтвет.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Анкеты.Ссылка КАК Вопрос,
	|	Анкеты.Наименование КАК ВопросСтрокой,
	|	Анкеты.Порядок КАК Порядок,
	|	ЕСТЬNULL(ИдентификаторыВопросов.Ссылка, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК ИдВопроса
	|ПОМЕСТИТЬ ВТ00_ТекущиеВопросыАнкеты
	|ИЗ
	|	Справочник.Анкеты КАК Анкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыСтрок КАК ИдентификаторыВопросов
	|		ПО (ИдентификаторыВопросов.МодифицированнаяСтрока = Анкеты.МодифицированнаяСтрока)
	|ГДЕ
	|	Анкеты.ПометкаУдаления = ЛОЖЬ
	|	И Анкеты.ЭтоГруппа = ЛОЖЬ
	|	И Анкеты.Родитель.Наименование = &НаименованиеГруппы
	|	И Анкеты.НеПоказыватьПредыдущийОтвет = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыОтветов.Ссылка КАК Вопрос
	|ПОМЕСТИТЬ ВТ01_ВопросыСВыборомОтвета
	|ИЗ
	|	Справочник.Анкеты.ВариантыОтветов КАК ВариантыОтветов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ВариантыОтветов.Ссылка = Анкеты.Вопрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.Вопрос КАК Вопрос,
	|	ВТ00.ВопросСтрокой КАК ВопросСтрокой,
	|	ВТ00.ИдВопроса КАК ИдВопроса,
	|	ВТ00.Порядок КАК Порядок,
	|	ВЫБОР
	|		КОГДА ВТ00.Вопрос = ЕСТЬNULL(ВТ01.Вопрос, ЗНАЧЕНИЕ(Справочник.Анкеты.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВопросТребуетВыбораОтвета,
	|	ЕСТЬNULL(АнкетыРасш.Ответ, """") КАК ОтветСтрокой,
	|	ЕСТЬNULL(АнкетыРасш.Номер, 0) КАК Номер,
	|	ЕСТЬNULL(АнкетыРасш.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период
	|ИЗ
	|	ВТ00_ТекущиеВопросыАнкеты КАК ВТ00
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ01_ВопросыСВыборомОтвета КАК ВТ01
	|		ПО (ВТ01.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, СигнатураЗадачQ = &СигнатураПродажи) КАК АнкетыРасш
	|		ПО (АнкетыРасш.Вопрос = ВТ00.ИдВопроса)
	|ГДЕ
	|	ВТ00.ИдВопроса = &Вопрос";
	Запрос.УстановитьПараметр("СигнатураПродажи", СигнатураПродажи);
	Запрос.УстановитьПараметр("Вопрос",			  Вопрос);
	
	Если ИмяАктивногоДинамическогоСписка = "ЗадачиСписокЛояльностьРемонта" Тогда
		 Запрос.УстановитьПараметр("НаименованиеГруппы", "ЛОЯЛЬНОСТЬ_РЕМОНТА");
	КонецЕсли;

	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	Вопр = "";
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл	
		Если Вопр <> Выборка.ИдВопроса Тогда	
			//Заполни таблицу ТаблицаВведенныхОтветов
			//----------------------------------------------------------------------------
			НоваяСтрока = ЭтаФорма.ТаблицаВведенныхОтветов.Добавить();
			НоваяСтрока.ВопросАнкеты 				= Выборка.Вопрос;
			НоваяСтрока.ВопросСтрокой 				= Выборка.ВопросСтрокой;
			НоваяСтрока.ВопросТребуетВыбораОтвета	= Выборка.ВопросТребуетВыбораОтвета;
			НоваяСтрока.ОтветСтрокой				= Выборка.ОтветСтрокой ;
			
			
			//Заполни кэш вопросов-ответов
			//----------------------------------------------------------------------------
			НовСтрока = ЭтаФорма.ТаблицаВопросОтвет.Добавить();
			НовСтрока.Вопрос 							= 	Выборка.Вопрос;
			НовСтрока.Ответ								=	"";
			НовСтрока.ПорядковыйНомерВопроса 			= 	Выборка.Порядок;
		Иначе
			//Сгруппируй ответы на один и тот же вопрос в одной строке
			//--------------------------------------------------------
			НоваяСтрока.ОтветСтрокой				= НоваяСтрока.ОтветСтрокой+"|"+ Выборка.ОтветСтрокой 
		КонецЕсли;
		Вопр = Выборка.ИдВопроса;		
	КонецЦикла;

КонецПроцедуры

#Область ТаблицаВведенныхОтветов

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВопросАнкеты 				= Элемент.Родитель.Родитель.ТекущиеДанные.ВопросАнкеты;
	СписокОтветов				= ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты);
	ВопросТребуетОбновитьОтвет  = Элемент.Родитель.Родитель.ТекущиеДанные.ВопросТребуетОбновитьОтвет;
	
	Если СписокОтветов.Количество()>0 Тогда
		
		Если ДопускаемоеЧислоОтветов(ВопросАнкеты) >= 2 Тогда
			СтандартнаяОбработка = Ложь;
			
			Парам = Новый Структура();
			Парам.Вставить("Вопрос", ВопросАнкеты);
			
			ДопПарамОбработчикаОповещения = Новый Структура("ВопросАнкеты", ВопросАнкеты); 
			Оп = Новый ОписаниеОповещения("ОбработкаОповещения_ФормаВыбораОтвета", ЭтотОбъект, ДопПарамОбработчикаОповещения);

			ОткрытьФорму("Справочник.Анкеты.Форма.ВыборОтвета_РежимПользователя", Парам,ЭтаФорма, Новый УникальныйИдентификатор(),,,Оп,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ДопПарамОбработчикаОповещения = Новый Структура("ВопросАнкеты", ВопросАнкеты); 
			Оп = Новый ОписаниеОповещения("ОбработкаОповещения_ТаблицаВведенныхОтветовОтветНачалоВыбора", ЭтотОбъект, ДопПарамОбработчикаОповещения);
			ПоказатьВыборИзСписка(Оп, СписокОтветов, Элемент);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДопускаемоеЧислоОтветов(Вопрос)
	
	ЗначениеПоУмолчанию = 0;

	Доступно = ТипЗнч(Вопрос)=Тип("СправочникСсылка.Анкеты");
	Доступно = Доступно И ЗначениеЗаполнено(Вопрос);
	Если Не Доступно Тогда
		Возврат ЗначениеПоУмолчанию ;
	КонецЕсли;
	
	Возврат Вопрос.ДопускаемоеЧислоОтветов;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения_ТаблицаВведенныхОтветовОтветНачалоВыбора(ВыбЗначОтвет, ДопПараметры) Экспорт	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	НайденныеСтроки = ЭтаФорма.ТаблицаВведенныхОтветов.НайтиСтроки(ДопПараметры); // должны найти одну строку
	Если НайденныеСтроки.Количество()<>1 Тогда
		Возврат
	КонецЕсли;

	НайденныеСтроки[0].ОтветСтрокой = ВыбЗначОтвет.Значение;
	ДобавитьЗаписьВТаблицуВопросОтвет(ДопПараметры.ВопросАнкеты, ВыбЗначОтвет.Значение);
	НайденныеСтроки[0].ФорматТекстаОтвета = 2;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения_ФормаВыбораОтвета(ВыбЗначОтвет, ДопПараметры)Экспорт
	
	Если ТипЗнч(ВыбЗначОтвет) <> Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоОтветов = ВыбЗначОтвет.Количество();
	Если ВыбЗначОтвет.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ТаблицаВведенныхОтветов.НайтиСтроки(ДопПараметры); // должны найти одну строку
	Если НайденныеСтроки.Количество()<>1 Тогда
		Возврат
	КонецЕсли;
	
	НайденнаяСтрока = НайденныеСтроки[0];
	
	Если КоличествоОтветов = 1 Тогда
		Для Каждого Ответ Из ВыбЗначОтвет Цикл // одна итерация
			НайденнаяСтрока.ОтветСтрокой = Ответ.Значение;	
		КонецЦикла;
		ДобавитьЗаписьВТаблицуВопросОтвет(ДопПараметры.ВопросАнкеты, НайденнаяСтрока.ОтветСтрокой);
		НайденнаяСтрока.ФорматТекстаОтвета = 2;		
		Возврат;
	КонецЕсли;
	
	Если КоличествоОтветов > 1 Тогда
		
		СчЭлементов = 0;
		
		//Удали старый ответ
		//--------------------
		НайденнаяСтрока.ОтветСтрокой = ""; 
		
		Для Каждого Ответ Из ВыбЗначОтвет Цикл
			СчЭлементов = СчЭлементов + 1;
			
			НайденнаяСтрока.ОтветСтрокой = НайденнаяСтрока.ОтветСтрокой + Ответ.Значение;
			Если СчЭлементов < КоличествоОтветов Тогда
				НайденнаяСтрока.ОтветСтрокой = НайденнаяСтрока.ОтветСтрокой+" | ";	 
			КонецЕсли;
			
		КонецЦикла;
		ДобавитьЗаписьВТаблицуВопросОтвет(ДопПараметры.ВопросАнкеты, НайденнаяСтрока.ОтветСтрокой);
		
	КонецЕсли;
	
	НайденнаяСтрока.ФорматТекстаОтвета = 2;	
КонецПроцедуры

&НаСервере
Функция ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты)
	сзОтветы = Новый СписокЗначений();

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыВариантыОтветов.Ответ КАК Ответ
	|ИЗ
	|	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
	|ГДЕ
	|	АнкетыВариантыОтветов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ВопросАнкеты);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат сзОтветы
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		сзОтветы.Добавить(Выборка.Ответ);
	КонецЦикла;
	Возврат сзОтветы;
		
КонецФункции

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ТекДанные = ЭтаФорма.Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;
	
	//Выход, если вопрос требует выбора, а не ввода ответа
	//----------------------------------------------------
	Если ТекДанные.ВопросТребуетВыбораОтвета Тогда 
		СтандартнаяОбработка=Ложь;
		Возврат
	КонецЕсли;
	ТекДанные.ФорматТекстаОтвета = 2;
	ДобавитьЗаписьВТаблицуВопросОтвет(ТекДанные.ВопросАнкеты, Текст);
	Элемент.СписокВыбора.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветКомментарийСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ТекДанные = ЭтаФорма.Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;	
	ТекДанные.ФорматТекстаОтвета = 2;
	ДобавитьЗаписьВТаблицуВопросОтвет(ТекДанные.ВопросАнкеты, ,Текст);	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойОчистка(Элемент, СтандартнаяОбработка)
	//Замени в кэше вопросов-ответов ответ на ""
	
	ТекДанные 		= Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;
	ВопросАнкеты 	= ТекДанные.ВопросАнкеты;
	ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, "");
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, Ответ="", ОтветКомментарий = "")
	
	Отбор 			= Новый Структура("Вопрос", ВопросАнкеты);
	НайденныеСтроки = ЭтаФорма.ТаблицаВопросОтвет.НайтиСтроки(Отбор);
	СтрокаТЧ 		= ?(НайденныеСтроки.Количество()>0, НайденныеСтроки[0], ТаблицаВопросОтвет.Добавить());
	СтрокаТЧ.Вопрос = ВопросАнкеты;
	
	Если ЗначениеЗаполнено(Ответ) Тогда //значит позльзователь ввел/выбрал значение для поля Ответ
		СтрокаТЧ.Ответ = Ответ;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтветКомментарий) Тогда //значит позльзователь ввел/выбрал значение для поля ОтветКомментарий
		СтрокаТЧ.ОтветКомментарий = ОтветКомментарий;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьАнкету(Команда)
	
	ТекДата = ТекущаяДата();
	ДатаАнкеты = ТекДата;;
	
	Доступно = ЗначениеЗаполнено(Параметры.СигнатураПродажи);
	Доступно = Доступно И  ТаблицаВопросОтвет.Количество()>0;
	Если Не Доступно Тогда
		ПоказатьПредупреждение(, "Запись анкеты невозможна. Не указана сигнатура продажи или не заполнена анкета", 3);
		Возврат
	КонецЕсли;
	
	Для Каждого Зап Из ТаблицаВопросОтвет Цикл
		Если Не ЗначениеЗаполнено(Зап.Ответ) Тогда
			ПоказатьПредупреждение(, "Запись анкеты невозможна. Анкета заполнена не полностью", 3);
			Возврат;
		КонецЕсли;
	КонецЦикла;
		
	// Запиши анкету
	//--------------
	Доступно = ЗаписатьВыбранныйОтвет_НаСервере(Параметры.СигнатураПродажи, ВопросСфераНегатива);
	Если Не Доступно Тогда	
		ПоказатьПредупреждение(, "Ошибка записи анкеты", 3);
	Иначе
		УдалитьСферыИзАнкетыОбратнойСвязи(Параметры.СигнатураПродажи);
	КонецЕсли;    
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Функция ЗаписатьВыбранныйОтвет_НаСервере(СигнатураЗадачи, Вопрос)
	//Эапись в регистр сведений АнкетыРасширенные
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(СигнатураЗадачи) = Тип("Строка");
	Доступно = Доступно И ТипЗнч(Вопрос) = Тип("СправочникСсылка.ИдентификаторыСтрок");
	Доступно = Доступно И ЗначениеЗаполнено(СигнатураЗадачи);
	Доступно = Доступно И ЗначениеЗаполнено(Вопрос);
	
	Если Не Доступно Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;
	
	ПустойИд = Справочники.ИдентификаторыСтрок.ПустаяСсылка();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Т.Период КАК Период,
	|	Т.Телефон КАК Телефон,
	|	Т.Вопрос КАК Вопрос
	|ИЗ РегистрСведений.АнкетыРасширенные.СрезПоследних(,СигнатураЗадачQ = &СигнатураЗадачи И Вопрос = &Вопрос) КАК Т";
	Запрос.УстановитьПараметр("СигнатураЗадачи", СигнатураЗадачи);
	Запрос.УстановитьПараметр("Вопрос", Вопрос);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ДатаАнкеты  = Выборка.Период;
	ТелАбонента = Выборка.Телефон;
	
	НЗ = РегистрыСведений.АнкетыРасширенные.СоздатьНаборЗаписей();
	НЗ.Отбор.СигнатураЗадачQ.Установить(СигнатураЗадачи);
	НЗ.Отбор.Вопрос.Установить(Вопрос);
	НЗ.Прочитать();
	Если НЗ.Количество()>0 Тогда
		НЗ.Очистить();
	КонецЕсли;
	
	Для Каждого Эл Из ТаблицаВопросОтвет Цикл
		
		//Не записываем, если ответ не заполнен
		//-----------------------------------------------------
		Если Не ЗначениеЗаполнено(Эл.Ответ) Тогда
			Продолжить;
		КонецЕсли;
		
		ИдСтрокиВопроса = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Строка(Эл.Вопрос), "вопрос", Строка(Эл.Вопрос));
		
		Если ИдСтрокиВопроса = ПустойИд Тогда
			Продолжить
		КонецЕсли;
		
		Если СтрЧислоВхождений(Эл.Ответ, "|") = 0 Тогда
			//На вопрос дается один ответ
			//----------------------------------
			
			ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Эл.Ответ, "ответ_комментарий", Эл.Ответ);
			
			//Если ответ не выбран или не введен,  тогда записываем пустую ссылку 
			//-------------------------------------------------------------------
			//Если ИдСтрокиОтвета = ПустойИд Тогда
			//	Продолжить
			//КонецЕсли;
			
			ИдСтрокиОтветКомментарий  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Эл.ОтветКомментарий, "ответ", Эл.ОтветКомментарий);
			
			НоваяЗапись = НЗ.Добавить();
			НоваяЗапись.Период								= ДатаАнкеты;
			НоваяЗапись.Телефон 							= ТелАбонента;
			НоваяЗапись.Вопрос								= ИдСтрокиВопроса;
			НоваяЗапись.СигнатураЗадачQ						= СигнатураЗадачи;
			НоваяЗапись.Ответ								= ИдСтрокиОтвета;
			НоваяЗапись.ОтветКомментарий					= ИдСтрокиОтветКомментарий;
			НоваяЗапись.ПорядковыйНомерВопроса 				= Эл.ПорядковыйНомерВопроса;
		Иначе
			//На вопрос дано более одного ответа
			//------------------------------------------
			МасСтрок = СтрРазделить(Эл.Ответ, "|",Ложь);
			Счетчик = 0;
			Для Каждого Стр Из МасСтрок Цикл
				Счетчик 		= Счетчик+1;
				Отв 			= СокрЛП(Стр);
				ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Стр, "ответ", Стр);
				
				Если ИдСтрокиОтвета = ПустойИд Тогда
					Продолжить
				КонецЕсли;
				
				НоваяЗапись					= НЗ.Добавить();
				НоваяЗапись.Период			= ДатаАнкеты;
				НоваяЗапись.Телефон			= ТелАбонента;
				НоваяЗапись.Вопрос			= ИдСтрокиВопроса;
				НоваяЗапись.СигнатураЗадачQ	= СигнатураЗадачи;
				НоваяЗапись.Номер			= Счетчик;
				НоваяЗапись.Ответ			= ИдСтрокиОтвета;
				
				Если Счетчик = 1 Тогда
					ИдСтрокиОтветКомментарий  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Эл.ОтветКомментарий, "ответ", Эл.ОтветКомментарий);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
	
	Если НЗ.Количество()>0 Тогда
		Попытка
			НЗ.Записать(Истина);
		Исключение
			ЗаписьЖурналаРегистрации("ЗаписатьВыбранныйОтвет_НаСервере()", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
			Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
		КонецПопытки
	КонецЕсли;	
	
	Возврат Истина;
КонецФункции

 &НаСервере
Функция УдалитьСферыИзАнкетыОбратнойСвязи(СигнатураПродажи)
	Доступно = 		ТипЗнч(СигнатураПродажи) = Тип("Строка")
				И 	ЗначениеЗаполнено(СигнатураПродажи);
	Если Не Доступно Тогда
		Возврат "ошибка"
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Телефон КАК Телефон,
	|	Т.Вопрос КАК Вопрос,
	|	Т.Номер КАК Номер,
	|	Т.СигнтраЗадачи КАК СигнтраЗадачи
	|ИЗ
	|	РегистрСведений.АнкетыОбратнойСвязи КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Анкеты.ВариантыОтветов КАК Д
	|		ПО Т.Вопрос.Наименование = Д.Ответ
	|			И (Д.Ссылка.Родитель.Наименование = ""ЛОЯЛЬНОСТЬ_РЕМОНТА"")
	|ГДЕ
	|	Т.СигнтраЗадачи = &СигнтраЗадачи";
	Запрос.УстановитьПараметр("СигнтраЗадачи", СигнатураПродажи); 
	РезультатЗапроса = Запрос.Выполнить(); 
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "предупреждение: не найдены ответы на сферы в анкете расширенной"
	КонецЕсли;    
	
	//Удали записи о сферах из анкеты обратной связи
	//------------------------------------------------
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НЗ = РегистрыСведений.АнкетыОбратнойСвязи.СоздатьНаборЗаписей();
		НЗ.Отбор.Телефон.Установить(Выборка.Телефон);
		НЗ.Отбор.Вопрос.Установить(Выборка.Вопрос);
		НЗ.Отбор.Номер.Установить(Выборка.Номер);
		НЗ.Отбор.СигнтраЗадачи.Установить(Выборка.СигнтраЗадачи);     
		НЗ.Отбор.СигнтраЗадачи.Установить(СигнатураПродажи);
		НЗ.Записать();
	КонецЦикла;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ТаблицаВведенныхОтветовОтветСтрокойАвтоПодбор_НаСервере(Текст)
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 10
	               |	ИдентификаторыСтрок.Наименование
	               |ИЗ
	               |	Справочник.ИдентификаторыСтрок КАК ИдентификаторыСтрок
	               |ГДЕ
	               |	ИдентификаторыСтрок.ПометкаУдаления = ЛОЖЬ
	               |	И ИдентификаторыСтрок.Наименование ПОДОБНО &Наименование";
	Запрос.УстановитьПараметр("Наименование", "%"+Текст+"%");
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	МассивОтветов = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
	СписокОтветов = Новый СписокЗначений();
	СписокОтветов.ЗагрузитьЗначения(МассивОтветов);
	
	Возврат СписокОтветов;
КонецФункции














