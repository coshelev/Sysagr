Функция УстановитьНастройки() Экспорт
	
	Если Не ЗначениеЗаполнено(РегистрСведений) Тогда
		РегистрСведений 		= "УчетнаяПолитика";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Измерение) Тогда
		Измерение 			= "Параметр";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ресурс) Тогда
		Ресурс 				= "Значение";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено (ЗначениеИзмерения) Тогда
		ЗначениеИзмерения 	= "БП_НегативныеАнкетыЛояльностиРемонта";
	КонецЕсли;
КонецФункции

Функция ПолучиТекст() Экспорт 
	
	Запрос = Новый Запрос("ВЫБРАТЬ Т.Значение ИЗ РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, ) КАК Т ГДЕ Т.Параметр = &Измерение1");
	Если РегистрСведений <> "УчетнаяПолитика" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УчетнаяПолитика", РегистрСведений);
	КонецЕсли;
	
	Если Измерение <> "Параметр" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Параметр", "Измерение");
	КонецЕсли;
	
	Если Ресурс <> "Значение" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Значение", "Ресурс");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период", 	ТекущаяДата());
	Запрос.УстановитьПараметр("Измерение1", ЗначениеИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	
	Рез = РезультатЗапроса.Выгрузить()[0][0];	
	Возврат Рез
	
КонецФункции

Процедура ЗаполниСписокXMLэлементовОписывающихСтруктуруТаблицы(Текст, СпЗач, КоличествоКолонок = 10) Экспорт
	// Заполняет список значений СпЗнач именами xml-элементов, соответствующих ряду и колонкам xml-таблицы, содержайся в Текст
	
	Если Текст  = "" Тогда
		Возврат
	КонецЕсли;
	
	ИмяXMLэлементаДляРяда = ИмяXMLэлементаДляРяда(Текст);
	
	Если ИмяXMLэлементаДляРяда = "" Тогда
		Возврат
	КонецЕсли;
	
	СпЗач.Очистить();
	СпЗач.Вставить(0, ИмяXMLэлементаДляРяда, ИмяXMLэлементаДляРяда);
	Для Сч=1 По КоличествоКолонок Цикл 
		ИмяЭлементаДляКолонки		=  ИмяXMLэлементаКолонкиN(Текст, ИмяXMLэлементаДляРяда , Сч);
		СпЗач.Вставить(Сч, ИмяЭлементаДляКолонки, ИмяЭлементаДляКолонки);
	КонецЦикла;
	
КонецПроцедуры
	
Функция ИмяXMLэлементаДляРяда(Текст)
	//Возвращает имя xml-элемента, представляющего ряд (запись) таблицы

	//Сч = 1 у корневого xml-элемента
	//Сч = 2 у следующего xml-элемента, т.е. элемента, обозначаюшего ряд
	
	Результат = "";
	
	Если Текст = "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	Чт= Новый ЧтениеXML();
	Чт.УстановитьСтроку(Текст);
	
	Сч = 0;
	Пока Чт.Прочитать() Цикл
		
		Если Чт.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;	
		КонецЕсли;
		
		Сч = Сч + 1;
		Если Сч = 2 Тогда
			Результат = Чт.Имя;
		    Прервать;
		КонецЕсли
		
	КонецЦикла;
	
	Возврат Результат 
	
КонецФункции

Функция ИмяXMLэлементаКолонкиN(Текст, ИмяXMLЭлементаДляРяда, ПорядковыйНомерКолонки=1) Экспорт
	//Возвращает имя xml элемента, представляющего колоноку 
	
	

	Результат = "";
	Если ПорядковыйНомерКолонки = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Чт= Новый ЧтениеXML();
	Чт.УстановитьСтроку(Текст);
	
	Сч = 0;  
	Пока Чт.Прочитать() Цикл
		
		Если Чт.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;	
		КонецЕсли;
		
		Сч = Сч + 1;
		
		//Сч = 1 у корневого xml-элемента
		//Сч = 2 у следующего xml-элемента, т.е. элемента, обозначаюшего ряд
    	//Сч = 3 у xml-элемента, обозначающего 1-ю колонку
		//Сч = 4 у xml-элемента, обозначающего 2-ю колонку
		//Сч = 5 у xml-элемента, обозначающего 2-ю колонку и т.д.

		Если Сч = 1 Тогда
			// это случай корневого элемента
			//-------------------------------
			Продолжить;
		КонецЕсли;
		
		Если Сч = 2 Тогда
			// это случай xml-элемента, обозначающего ряд
			//--------------------------------------------
			Продолжить;
		КонецЕсли;
		
		Если Чт.Имя = ИмяXMLЭлементаДляРяда Тогда
			// если оказались здесь, значит начался следующий ряд, т.е. все колонки первого ряда кончились
			Прервать;
		КонецЕсли;
		
		Если Сч = 2+ПорядковыйНомерКолонки Тогда
			Результат = Чт.Имя;
		    Прервать;
		КонецЕсли
		
	КонецЦикла;
	
	Возврат Результат 

КонецФункции

Функция Прочитать(Стр="") Экспорт
	// Если Стр="" тогда это неинтерактивный вызов (Эта обработка вызывается из другой обработки)
	// Если Стр<>"" тогда это интерактивный вызов
	
	ЭтотОбъект.ТЗ.Очистить();
	
	Если Стр="" Тогда //Неинтерактивный вызов обработки
		УстановитьНастройки();
		
		Стр = ПолучиТекст();
		Если Стр = "" Тогда
			Возврат ""
		КонецЕсли;
		
		ЗаполниСписокXMLэлементовОписывающихСтруктуруТаблицы(Стр, ЭтотОбъект.ИменаXMLЭлементов);
	КонецЕсли;
	
	Если Стр = "" Тогда
		Возврат ""
	КонецЕсли;
	
	Чт = Новый ЧтениеXML();
	Чт.УстановитьСтроку(Стр);
	Постр = Новый ПостроительDOM();
	Док = Постр.Прочитать(Чт);
	
	Корень = Док.ДочерниеУзлы[0];
	Для Каждого Ряд Из Корень.ДочерниеУзлы Цикл
			Новая = ЭтотОбъект.ТЗ.Добавить();
			Для Сч=1 По ЭтотОбъект.ИменаXMLЭлементов.Количество() Цикл
				Если  ЭтотОбъект.ИменаXMLЭлементов[Сч].Значение="" Тогда
					Прервать;
				КонецЕсли;
				Если Ряд.ДочерниеУзлы[Сч-1].ДочерниеУзлы.Количество() = 0 Тогда
					Прервать;
				КонецЕсли;
				Новая["Колонка"+Строка(Сч)] = Ряд.ДочерниеУзлы[Сч-1].ДочерниеУзлы[0].ТекстовоеСодержимое;
			КонецЦикла;	
	КонецЦикла;
	
КонецФункции
	
Процедура Записать() Экспорт
	
	Если ЭтотОбъект.ТЗ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Зап = Новый ЗаписьXML();
	Зап.УстановитьСтроку();
	Зап.ЗаписатьОбъявлениеXML();
	Зап.ЗаписатьНачалоЭлемента("root"); 											//<root>

	Для Каждого СтрТЗ Из ЭтотОбъект.ТЗ Цикл
		Зап.ЗаписатьНачалоЭлемента(ЭтотОбъект.ИменаXMLЭлементов[0].Значение);  		//<row>

		Для Сч=1 По ЭтотОбъект.ИменаXMLЭлементов.Количество() Цикл	
			ИмяXMLэлемента = ЭтотОбъект.ИменаXMLЭлементов[Сч].Значение;
			Если ИмяXMLэлемента="" Тогда
				Прервать;
			КонецЕсли;
			Зап.ЗаписатьНачалоЭлемента(ИмяXMLэлемента);	//<group> или <site>
			Зап.ЗаписатьТекст(СтрТЗ["Колонка"+Строка(Сч)]);
			Зап.ЗаписатьКонецЭлемента(); 											//</group> или </site>

		КонецЦикла;
	    Зап.ЗаписатьКонецЭлемента(); 												//</row>
	КонецЦикла;
	
	Зап.ЗаписатьКонецЭлемента(); 			 										//</root>

	Стр=Зап.Закрыть();
		
	ТекДата = ТекущаяДата();
	НЗ = РегистрыСведений.УчетнаяПолитика.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(ТекДата);
	НЗ.Отбор.Параметр.Установить(ЭтотОбъект.ЗначениеИзмерения);
	НЗ.Прочитать();
	
	Новая = НЗ.Добавить();
	Новая.Период 			= ТекДата;
	Новая.Параметр 			= ЭтотОбъект.ЗначениеИзмерения;
	Новая.ТипЗначения 		= "Строка";
	Новая.Значение 			= Стр;
	
	УстановитьПривилегированныйРежим(Истина);
	Попытка
		НЗ.Записать();
	Исключение
		Данные = "Стр = "+Стр;
		Комментарий = ОписаниеОшибки();
		ОбслуживаниеСервер.ЗарегистрироватьСобытие("Записать параметр учетной политики", УровеньЖурналаРегистрации.Ошибка, Данные, Комментарий,,,,ИмяКомпьютера());
	КонецПопытки;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

