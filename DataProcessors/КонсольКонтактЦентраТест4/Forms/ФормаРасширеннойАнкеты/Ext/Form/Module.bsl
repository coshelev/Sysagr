&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГрПредприятие.Скрыть();
	
	//Отображение телефона внешнего
	Элементы.Дисплей01.Заголовок = Параметры.Телефон + "   " + Параметры.Регион;

	//Отображение канала звонка (внешнего телефона Луидор)
	Если ЗначениеЗаполнено(Параметры.НомерИНазначениеВнешнегоТелефонаЛуидор) Тогда
		Элементы.Дисплей02.Заголовок = Параметры.НомерИНазначениеВнешнегоТелефонаЛуидор;
	ИначеЕсли (ЗначениеЗаполнено(ЭтаФорма.Параметры.КаналИнициатор)) Тогда
		Элементы.Дисплей02.Заголовок = СокрЛП(ЭтаФорма.Параметры.КаналИнициатор) + "  неизвестный канал";
	Иначе
		Элементы.Дисплей02.Заголовок = "Канал поступления звонка не определен";
	КонецЕсли;
	
	//отображение сайта-отправителя интернет-заявки
	Элементы.Дисплей03.Заголовок = ?(ЗначениеЗаполнено(Параметры.СайтИнтернетЗаявки), СокрЛП(ЭтаФорма.Параметры.СайтИнтернетЗаявки), "");	
	
	//отображение других сайтов
	ДисплейДругиеСайты = Параметры.ДругиеСайты;   
	
	//Отображение кнопки "Показать" для почтовой интернет-заявки
	Элементы.ДисплейСодержаниеИнтернетПочтовойЗаявки.Видимость=ЗначениеЗаполнено(Параметры.ИнтернетПочтоваяЗаявкаСодержание);
	
	// Первоначальное_заполнение_анкеты_маршрутизации
	ЗаполниТЧ_АнкетыРекурсивно();
	ЗаполниТЧ_ВыбираемыеОтветы();
		
	//Поиск первого вопроса только по каналу
	ПервыйВопрос = Справочники.Анкеты.ПустаяСсылка();

	//Для кнопки Домой: не зависимо от того определен/не определен автоматически регион, возвращаемся к вопросу выбора региона
	ПервыйВопросДляВозвратаДомой = ПервыйВопрос;
	
	Если ЗначениеЗаполнено (Параметры.КаналИнициатор) И ТипЗнч(Параметры.КаналИнициатор) = Тип("СправочникСсылка.ТелВнешние") Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = 	"ВЫБРАТЬ 	СледующийВопросИлиТелНомер ИЗ Справочник.Анкеты.ВариантыОтветов
						|ГДЕ 		НЕ Ссылка.ЭтоГруппа И Ссылка.Родитель.Наименование = &НаименованиеГруппы И Ответ ПОДОБНО &Ответ";
		Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");
		Запрос.УстановитьПараметр("Ответ", 				"%"+Параметры.КаналИнициатор.Код+"%");
	  	РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ПервыйВопрос = Выборка.СледующийВопросИлиТелНомер;
			
			//Для кнопки Домой: не зависимо от того определен/не определен автоматически регион, возвращаемся к вопросу выбора региона
			ПервыйВопросДляВозвратаДомой = Выборка.СледующийВопросИлиТелНомер;
		КонецЕсли;		
	КонецЕсли; 
	
	//<Выбрать первый вопрос (требующий выбор варианта ответа) и варианты ответов для показа>
	Если ЗначениеЗаполнено(Параметры.СайтИнтернетЗаявки) Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст =	"ВЫБРАТЬ 	ПЕРВЫЕ 1 СледующийВопросИлиТелНомер ИЗ Справочник.Анкеты.ВариантыОтветов
						|ГДЕ 		НЕ Ссылка.ЭтоГруппа И Ссылка.Родитель.Наименование = &НаименованиеГруппы И Ответ = &Ответ";		
		Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");
		Запрос.УстановитьПараметр("Ответ", 				"исходящий автозвонок");
	  	РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			//Первый вопрос - ветка Сайты
			ПервыйВопрос = РезультатЗапроса.Выгрузить()[0][0];
			
			//Для кнопки Домой: не зависимо от того определен/не определен автоматически регион, возвращаемся к вопросу выбора региона
			ПервыйВопросДляВозвратаДомой = ПервыйВопрос;
		КонецЕсли;		

		
		Если ЗначениеЗаполнено (ПервыйВопрос) Тогда
				//Значит первый вопрос - ссылка на элемент справочнка анкеты, наименование которого равно имени сайта
				Запрос = Новый Запрос();
				Запрос.Текст = 	"ВЫБРАТЬ	СледующийВопросИлиТелНомер КАК ВопросВОтвете
								|ПОМЕСТИТЬ 	ВТ01
								|ИЗ			Справочник.Анкеты.ВариантыОтветов
								|ГДЕ        СледующийВопросИлиТелНомер = &ПервыйВопрос
								|;
								|ВЫБРАТЬ 	ПЕРВЫЕ 1 СледующийВопросИлиТелНомер ИЗ Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
								|ГДЕ		НЕ Ссылка.ЭтоГруппа И Ответ = &Ответ И Ссылка В (ВЫБРАТЬ ВТ01.ВопросВОтвете ИЗ ВТ01)";
				Запрос.УстановитьПараметр("ПервыйВопрос", 		ПервыйВопрос);
				Запрос.УстановитьПараметр("Ответ", 				Параметры.СайтИнтернетЗаявки);
				
				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					//Первым вопросом сразу является второй вопрос
					ПервыйВопрос = РезультатЗапроса.Выгрузить()[0][0];
									
					//Для некоторых сайтов, указанных в РС.УчетнаяПолитика "ГлобПараметр_СайтыДляПереводаЗвонковПоАнкетеПоРегионуАбонента",
					//если следующим вопросом является регион абонента, то необходимо автоматически  ответить и на него
					Доступно = 	СтрНайти(ПервыйВопрос.Наименование, "Регион абонента")> 0 И ЗначениеЗаполнено(Параметры.Регион)
								И Параметры.СайтИнтернетЗаявки_АвтоответНаВопросРегионАбонента;
					Если Доступно Тогда
											
						//Значит первым вопросом стал вопрос регион абонента.
						Запрос = Новый Запрос();
						Запрос.Текст = 	"ВЫБРАТЬ	ПЕРВЫЕ 1 СледующийВопросИлиТелНомер ИЗ Справочник.Анкеты.ВариантыОтветов
										|ГДЕ 		НЕ Ссылка.ЭтоГруппа И Ответ ПОДОБНО &Ответ";           
						Запрос.УстановитьПараметр("Ответ", Параметры.Регион+"%");
						
						//Первым вопросом сразу является третий вопрос
						РезультатЗапроса = Запрос.Выполнить();    
						ПервыйВопрос = ?(РезультатЗапроса.Пустой(), ПервыйВопрос, РезультатЗапроса.Выгрузить()[0][0]);
					КонецЕсли;
				КонецЕсли;	
					
			КонецЕсли; 
				
	Иначе //Входящий звонок
		
		//Для входящего определи регион звонящего абонента
		Если ЗначениеЗаполнено (ПервыйВопрос) И ЗначениеЗаполнено(Параметры.Регион) Тогда
				Запрос = Новый Запрос();
				Запрос.Текст = 
				"ВЫБРАТЬ 	СледующийВопросИлиТелНомер КАК ВопросВОтвете
				|ПОМЕСТИТЬ 	ВТ01
				|ИЗ			Справочник.Анкеты.ВариантыОтветов
				|ГДЕ		СледующийВопросИлиТелНомер = &ПервыйВопрос
				|;
				|ВЫБРАТЬ 	Ссылка, СледующийВопросИлиТелНомер ИЗ Справочник.Анкеты.ВариантыОтветов КАК Т
				|ГДЕ    	НЕ Ссылка.ЭтоГруппа И Ссылка.Родитель.Наименование = &НаименованиеГруппы И Ответ ПОДОБНО &Ответ И Ссылка В (ВЫБРАТЬ ВТ01.ВопросВОтвете ИЗ ВТ01)";	
				Запрос.УстановитьПараметр("ПервыйВопрос", 		ПервыйВопрос);
				Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");		
				Запрос.УстановитьПараметр("Ответ", 				Параметры.Регион+"%");	
				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();
					ПервыйВопрос = Выборка.СледующийВопросИлиТелНомер;
				КонецЕсли;	
		КонецЕсли;
			
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПервыйВопрос) Тогда
	  	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка  ИЗ Справочник.Анкеты ГДЕ Порядок = 1 И НЕ ЭтоГруппа И Родитель.Наименование = &НаименованиеГруппы");
		Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
	
		ПервыйВопрос = РезультатЗапроса.Выгрузить()[0][0];
	КонецЕсли;
	
	Вопрос 											=	ПервыйВопрос;
	ВопросСтрокой 									=	ПервыйВопрос;
	Элементы.АнкетаТекущийВопросОтвет.Заголовок		= 	ПервыйВопрос;
	ПервыйВопросДляВозвратаДомой 					=	ПервыйВопросДляВозвратаДомой;
	//</Выбрать первый вопрос (требующий выбор варианта ответа) и варианты ответов для показа>
	
	Объект.АнкетаТекущийВопрос.Очистить();
	Отб = Новый Структура("Вопрос", ПервыйВопрос);
	Найденные = Объект.АнкетаОтветы.НайтиСтроки(Отб);
	Для Каждого Стр Из Найденные Цикл
		Новая = Объект.АнкетаТекущийВопрос.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Стр);
	КонецЦикла;
		
	//Заполни таблицу вопросов, требующих ввода ответа, в нее же подтяни ответы из последнего разговора
	НачатьЗаполнениеТаблицыВопросовОтветов();
		
	//Сохранить дату и время начала опроса для заполнения РС
	ДатаНачалаОпроса = ТекущаяДата();
	
	//Покажи историю вопросов-ответов
	ИсторияВопросовОтветов.Параметры.УстановитьЗначениеПараметра("Телефон", Параметры.Телефон);
	
	//Используеьтся при записи переводов звонков
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	//Найди активную задачу автозвонка по интернет-заявке. Если она есть, то отобрази кнопку причин ручного закрытия
	Элементы.ЗадачаОтменить.Доступность=Ложь;
	Если ЗначениеЗаполнено(Параметры.СайтИнтернетЗаявки) Тогда	
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Сигнатура ИЗ РегистрСведений.ЗадачиИнтернетЗаявки ГДЕ Телефон = &Телефон И ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1) И Заблокирована = ИСТИНА");
		Запрос.УстановитьПараметр("Телефон", 		Параметры.Телефон);
		ОткрытаяЗадачаАвтозвонка = Запрос.Выполнить();   
		Элементы.ЗадачаОтменить.Доступность = ?(НЕ ОткрытаяЗадачаАвтозвонка.Пустой(), Истина, Элементы.ЗадачаОтменить.Доступность);
	КонецЕсли;
	
	//Доступность кнопки сброс - если известен номер телефона и сигнатура
	Доступно = 		ЗначениеЗаполнено(Параметры.Телефон) И 	ЗначениеЗаполнено(Параметры.Сигнатура);
	Элементы.ЗадачаОтменить.Доступность = Доступно;
	
	// Открытые_документы
	Элементы.ГрОткрытыеДокументы.Видимость = Ложь;
	Если Доступно Тогда
		СформируйТаблицуОткрытыхДокументов(Параметры.Телефон);
		Элементы.ГрОткрытыеДокументы.Видимость = ?(ТаблицаОткрытыхДокументов.Количество()>0, Истина, Ложь);
	КонецЕсли;    
	
	//Отобрази параметры (свойства) интернет-заявки
	ИнтернетЗаявкаСвойства = Параметры.ИнтернетЗаявкаСвойства;
	
	//Отображение_истории_общения
	НачатьФормированиеИсторииОбщения();
КонецПроцедуры

#Область Открытые_документы
&НаСервере
Процедура СформируйТаблицуОткрытыхДокументов(Телефон)
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗвонкиОжидаемые.ТипДокумента = 0
	|			ТОГДА ""Сервис""
	|		ИНАЧЕ ""Продажа""
	|	КОНЕЦ КАК ТипДокумента,
	|	ЗвонкиОжидаемые.ТочкаОформления КАК ТочкаОформления,
	|	ЗвонкиОжидаемые.Автомобиль КАК Автомобиль,
	|	ЗвонкиОжидаемые.ОператорТелефон КАК ОператорТелефон,
	|	ЕСТЬNULL(ОбъектыПривязка.Владелец.Наименование, """") КАК Сотрудник
	|ИЗ
	|	РегистрСведений.ЗвонкиОжидаемые КАК ЗвонкиОжидаемые
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТелВнутренние КАК ТелВнутренние
	|		ПО (ТелВнутренние.Код = ЗвонкиОжидаемые.ОператорТелефон)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК ОбъектыПривязка
	|		ПО (ТелВнутренние.Ссылка = ОбъектыПривязка.Объект)
	|ГДЕ
	|	ЗвонкиОжидаемые.КлиентТелефон = &КлиентТелефон";
	Запрос.УстановитьПараметр("КлиентТелефон", Телефон);
	РезультатЗапроса  = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Новая = ТаблицаОткрытыхДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Выборка);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

#Область Отображение_истории_общения
&НаСервере
Функция НачатьФормированиеИсторииОбщения()     
	
	Окончание 	= ТекущаяДата();
	Начало 		= ДобавитьМесяц(Окончание, -2);

	//Асинхронно через фоновое задание и систему взаимодействия
	Доступно = 	Параметры.МоиНастройки_ПоказыватьИсториюЗвонков И Параметры.МоиНастройки_ПолучатьИсториюАсинхронно;
	Если Доступно Тогда
		КонсольКонтактЦентраСервер.СформируйИсториюФоновымЗаданием(Параметры.Телефон, Начало, Окончание, Истина, "csc_"+xmlСтрока(ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор), ЭтаФорма.УникальныйИдентификатор);
		Возврат "";
	КонецЕсли;
	
	//Обычным образом: не асинхронно
	Доступно = 		Параметры.МоиНастройки_ПоказыватьИсториюЗвонков И НЕ Параметры.МоиНастройки_ПолучатьИсториюАсинхронно;
	Если Доступно Тогда	
		ТЗ = СформируйИсториюОбщения2(Параметры.Телефон, Начало, Окончание);
		Если ТЗ.Количество()>0 Тогда
			ЗадачаИстория.Загрузить(ТЗ);
			Возврат "";
		КонецЕсли;
	КонецЕсли;
		
КонецФункции 

&НаСервереБезКонтекста
Функция СформируйИсториюОбщения2(Телефон, Начало, Окончание) Экспорт  
	// Возвращает таблицу значений состоявшихся звонков и действующих интернет-заявок
	
	Результат = Новый ТаблицаЗначений();
	
	//Для входящего звонка Инициатором указываем канал (точнее его назначение), для исходящего по интенет-заявке - сайт
  	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 9
	|	ВЫБОР
	|		КОГДА Звонки.ЭтоВходящий
	|			ТОГДА ""Вх""
	|		ИНАЧЕ ""Исх""
	|	КОНЕЦ КАК Событие,
	|	&АбонентВнешний КАК Телефон,
	|	ИСТИНА КАК ЭтоЗвонок,
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК Дата,
	|	Звонки.ЭтоВходящий КАК ЭтоВходящий,
	|	Звонки.Принят КАК Принят,
	|	Звонки.АбонентВнутренний.Код КАК АбонентВнутренний,
	|	ВЫБОР
	|		КОГДА Звонки.ЭтоВходящий
	|			ТОГДА Звонки.Инициатор.Назначение
	|		КОГДА НЕ Звонки.ЭтоВходящий
	|				И НЕ Интернет.Инициатор ЕСТЬ NULL
	|			ТОГДА Интернет.Инициатор
	|		ИНАЧЕ Звонки.Инициатор
	|	КОНЕЦ КАК Инициатор,
	|	ЕСТЬNULL(Стат.Исполнитель, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК Оператор,
	|	ЕСТЬNULL(Стат.ОПСсылка, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК ОП,
	|	ЕСТЬNULL(Стат.Исполнитель.ТочкаРазмещения, ЗНАЧЕНИЕ(Справочник.ТочкиРазмещения.ПустаяСсылка)) КАК ТочкаРазмещения,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(Стат.Исполнитель.Должность КАК СТРОКА(36)), """") КАК Должность
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Стат
	|		ПО (Стат.Сигнатура = Звонки.Сигнатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнтернетЗаявки КАК Интернет
	|		ПО (ПОДСТРОКА(Стат.Основание, 4, 36) = Интернет.Сигнатура)
	|ГДЕ
	|	Звонки.АбонентВнешний = &АбонентВнешний
	|	И Звонки.Дата МЕЖДУ &Начало И &Окончание
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	""Интернет"",
	|	&АбонентВнешний,
	|	ЛОЖЬ,
	|	"""",
	|	Т.ДатаПостановки,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	Т.Инициатор,
	|	ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ТочкиРазмещения.ПустаяСсылка),
	|	""""
	|ИЗ
	|	РегистрСведений.ЗадачиИнтернетЗаявки КАК Т
	|ГДЕ
	|	Т.Телефон = &АбонентВнешний
	|	И Т.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("АбонентВнешний", СокрЛП(Телефон));
	Запрос.УстановитьПараметр("Начало",			Начало);
	Запрос.УстановитьПараметр("Окончание", 		Окончание);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат; 
	КонецЕсли;
	
	Результат = РезультатЗапроса.Выгрузить();
	Возврат Результат;	
КонецФункции

&НаКлиенте
Функция ЗавершитьФормированиеИсторииОбщения(ИмяСобытия, Параметр, Источник)
	ЗавершитьФормированиеИсторииОбщения_НаСервере(ИмяСобытия, Параметр, Источник);
КонецФункции

&НаСервере 
Функция ЗавершитьФормированиеИсторииОбщения_НаСервере(ИмяСобытия, Параметр, Источник)
	
	Если Не ЭтоАдресВременногоХранилища(Параметр.Адрес)Тогда
		ЗаписьЖурналаРегистрации("ЗавершитьФормированиеИсторииОбщения_НаСервере", УровеньЖурналаРегистрации.Ошибка,,"Параметр.Адрес = "+Параметр.Адрес, "Параметр.Адрес не является адресом временного хранилища");
		Возврат "";
	КонецЕсли;
	
	ТЗ = ПолучитьИзВременногоХранилища(Параметр.Адрес);
	
	Доступно =  ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") И ТЗ.Количество()>0;	
	Если Доступно Тогда
		ЗадачаИстория.Загрузить(ТЗ);
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область Отображение_таблицы_вопросов_ответов
&НаСервере
Процедура НачатьЗаполнениеТаблицыВопросовОтветов()
	// Вызывается только в ПриСозданииНаСервере(). Отказываюсь от асинхронности пока ...
	
	ТаблицаВведенныхОтветов.Очистить();
	
	ТекДата = ТекущаяДата();
	ТЗ = КонсольКонтактЦентраСервер.ТаблицаВопросовОтветов2(ТекДата, ЭтаФорма.Параметры.Телефон);
	Если ТЗ.Количество()>0 Тогда
		ТаблицаВведенныхОтветов.Загрузить(ТЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция  ЗавершитьЗаполнениеТаблицыВопросовОтветов(ИмяСобытия, Параметр, Источник)
	ЗавершитьЗаполнениеТаблицыВопросовОтветов_НаСервере(ИмяСобытия, Параметр, Источник)
КонецФункции

&НаСервере
Функция ЗавершитьЗаполнениеТаблицыВопросовОтветов_НаСервере(ИмяСобытия, Параметр, Источник)
	
	Если Не ЭтоАдресВременногоХранилища(Параметр.Адрес) Тогда
		ЗаписьЖурналаРегистрации("ЗавершитьЗаполнениеТаблицыВопросовОтветов_НаСервере", УровеньЖурналаРегистрации.Ошибка,,"Параметр.Адрес = "+Параметр.Адрес, "Параметр.Адрес не является адресом временного хранилища");
		Возврат "";
	КонецЕсли;

	ТЗ = ПолучитьИзВременногоХранилища(Параметр.Адрес);
	
	Доступно = ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") И ТЗ.Количество()>0;	
	Если Доступно Тогда
		ТаблицаВведенныхОтветов.Загрузить(ТЗ);
	КонецЕсли;

КонецФункции
#КонецОбласти

#Область ОбработкаОповещения
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	#Область Система_взаимодействия
	//Обработка сообщения системы взаимодействия
	Доступно = СокрЛП(ИмяСобытия) = "СкрытыйКанал" И ТипЗнч(Параметр) = Тип("Структура") И ТипЗнч(Источник) = Тип("Строка") И СокрЛП(Источник)  = "СистемаВзаимодействия";	
	Если Доступно Тогда
		//Если оказались здесь, значит оповещение получено из системы взаимодействия по скрытому каналу (обсуждению);
		ОбработкаОповещенияОтСистемыВзаимодействия(ИмяСобытия, Параметр, Источник);
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

#Область Система_взаимодействия
&НаКлиенте
Функция ОбработкаОповещенияОтСистемыВзаимодействия(ИмяСобытия, Параметр, Источник) 
	
	Доступно = Параметр.Свойство("ИдФормы") И Параметр.ИдФормы = Этаформа.УникальныйИдентификатор;
	Если Не Доступно Тогда
		Возврат "";
	КонецЕсли;
	
	//История общения
	//===============
	
	//Если оказались здесь, значит оповещение получено из системы взаимодействия по скрытому каналу (обсуждению) и предназначенное для этой формы;
	//-----------------------------------------------------------------------------------------------------------
	Доступно = Доступно И Параметр.Свойство("Источник")
				И СокрЛП(Параметр.Источник) = "ФоновоеЗадание"
				И Параметр.Свойство("Результат")
				И Параметр.Результат = "ВременноеХранилище"
				И Параметр.Свойство("ТипЗначенияРезультата")
				И Параметр.ТипЗначенияРезультата = "ТаблицаЗначений"
				И Параметр.Свойство("НазначениеРезультата")
				И Параметр.НазначениеРезультата = "ИсторияОбщения"	
				И Параметр.Свойство("Адрес");
	Если Доступно Тогда
		//Если оказались здесь, значит получена история общения
		Если Параметры.МоиНастройки_ТестовыйРежим Тогда
			Сообщить("попал в историю общения!");
		КонецЕсли;
		
		ЗавершитьФормированиеИсторииОбщения(ИмяСобытия, Параметр, Источник);
		Возврат "";
	КонецЕсли;
	
	//Таблица вопросов-ответов
	//========================
	
	//-----------------------------------------------------------------------------------------------------------
	Доступно = Параметр.Свойство("Источник")
			И СокрЛП(Параметр.Источник) = "ФоновоеЗадание"
			И Параметр.Свойство("Результат")
			И Параметр.Результат = "ВременноеХранилище"
			И Параметр.Свойство("ТипЗначенияРезультата")
			И Параметр.ТипЗначенияРезультата = "ТаблицаЗначений"
			И Параметр.Свойство("НазначениеРезультата")
			И Параметр.НазначениеРезультата = "ТаблицаВопросовОтветов"
			И Параметр.Свойство("Адрес")
			И ЭтоАдресВременногоХранилища(Параметр.Адрес);	
	Если Доступно Тогда
		//Если оказались здесь, значит получена таблица вопросов - ответов
		Если Параметры.МоиНастройки_ТестовыйРежим Тогда
			Сообщить("попал в опоовещение получения таблицы вопросов-ответов!");
		КонецЕсли;
		
		ЗавершитьЗаполнениеТаблицыВопросовОтветов(ИмяСобытия, Параметр, Источник);
		Возврат "";
	КонецЕсли;
	Возврат "";		
КонецФункции
#КонецОбласти
#КонецОбласти

&НаКлиенте
Процедура ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, Ответ)
	//Добавь или измени запись в кэше вопросов-ответов
	
	Отбор 			= Новый Структура("Вопрос", ВопросАнкеты);
	НайденныеСтроки = ТаблицаВопросОтвет.НайтиСтроки(Отбор);
	СтрокаТЧ 		= ?(НайденныеСтроки.Количество()>0, НайденныеСтроки[0], ТаблицаВопросОтвет.Добавить());
	СтрокаТЧ.Вопрос = ВопросАнкеты;
	СтрокаТЧ.Ответ	= Ответ;	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВыбранныйОтвет_НаСервере()
	// Записывает анкету в регистр сведений АнкетыРасширенные. Вызывается только ПриЗакрытии()

  	ЗаписыватьВФоне = Истина;
	Если ЗаписыватьВФоне = Истина Тогда
		ТЗ = ДанныеФормыВЗначение(ЭтаФорма.ТаблицаВопросОтвет, Тип("ТаблицаЗначений"));
		Анкета.НачатьЗапись(ДатаНачалаОпроса, Параметры.Телефон, ТЗ, Параметры.Сигнатура);
	Иначе
		Анкета.Записать(ДатаНачалаОпроса, Параметры.Телефон, ТаблицаВопросОтвет, Параметры.Сигнатура);	
	КонецЕсли;
КонецПроцедуры

#Область ТаблицаВведенныхОтветов

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Инд = Элементы.ТаблицаВведенныхОтветов.ТекущаяСтрока;
	
	Если ТаблицаВведенныхОтветов[Инд].ВопросТребуетВыбораОтвета Тогда
		СтандартнаяОбработка=Ложь;
		Возврат
	КонецЕсли;
	
	//Измени шрифтответа на вопрос, уже полученный при предыдущем разговоре,  на темный
	ЭтаФорма.ТаблицаВведенныхОтветов[Инд].ФорматТекстаОтвета = 2;

	//Добавь запись в кэш вопрос-ответ	
	ДобавитьЗаписьВТаблицуВопросОтвет(ТаблицаВведенныхОтветов[Инд].ВопросАнкеты, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВопросАнкеты 				= Элемент.Родитель.Родитель.ТекущиеДанные.ВопросАнкеты;
	СписокОтветов 				= ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты);
	ВопросТребуетОбновитьОтвет 	= Элемент.Родитель.Родитель.ТекущиеДанные.ВопросТребуетОбновитьОтвет;
	
	Если СписокОтветов.Количество()>0 Тогда
		ДопПарамОбработчикаОповещения = Новый Структура("ВопросАнкеты", ВопросАнкеты); 
		Оп = Новый ОписаниеОповещения("ОбработкаОповещения_ТаблицаВведенныхОтветовОтветНачалоВыбора", ЭтотОбъект, ДопПарамОбработчикаОповещения);
		ПоказатьВыборИзСписка(Оп, СписокОтветов, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения_ТаблицаВведенныхОтветовОтветНачалоВыбора(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	НайденныеСтроки = ТаблицаВведенныхОтветов.НайтиСтроки(ДопПараметры); // должны найти одну строку
	Если НайденныеСтроки.Количество()<>1 Тогда
		Возврат
	КонецЕсли;

	НайденныеСтроки[0].ОтветСтрокой = ВыбЗначОтвет.Значение;
	ДобавитьЗаписьВТаблицуВопросОтвет(ДопПараметры.ВопросАнкеты, ВыбЗначОтвет.Значение);
	НайденныеСтроки[0].ФорматТекстаОтвета = 2;
КонецПроцедуры

&НаСервере
Функция ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты)	
	сзОтветы 	= Новый СписокЗначений();
	Отб 		= Новый Структура("Вопрос", ВопросАнкеты);
	Найденные 	= ЭтаФорма.Объект.ВыбираемыеОтветы.НайтиСтроки(Отб);
	
	ПустаяСсылка = ПредопределенноеЗначение("Справочник.Файлы.ПустаяСсылка");
	Для Каждого Стр Из Найденные Цикл
		Если Стр.Картинка <> ПустаяСсылка Тогда
			Об = Стр.Картинка.ПолучитьОбъект();
			Двоичные = Об.Содержимое.Получить();
			Картинка = Новый Картинка(Двоичные);
			Предс = Новый ФорматированнаяСтрока(Стр.Ответ, Новый Шрифт(,+2), , Новый Цвет(1,1,1));
			сзОтветы.Добавить(Стр.Ответ, Предс,, Картинка);	
		Иначе
			сзОтветы.Добавить(Стр.Ответ, Стр.Ответ);
		КонецЕсли;
	КонецЦикла;
	Возврат сзОтветы;
КонецФункции

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветОчистка(Элемент, СтандартнаяОбработка)
	//Замени в кэше вопросов-ответов ответ на ""
	
	ТекДанные 		= Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;
	ВопросАнкеты 	= ТекДанные.ВопросАнкеты;
	ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, "");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Назад(Команда)
	//Обработка гиперссылки Назад в маршрутных вопросах>

	Объект.АнкетаТекущийВопрос.Очистить();
	Отб = Новый Структура("Вопрос", ПервыйВопросДляВозвратаДомой);
	Найденные = Объект.АнкетаОтветы.НайтиСтроки(Отб);
	Для Каждого Стр Из Найденные Цикл
		Новая = Объект.АнкетаТекущийВопрос.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Стр);
	КонецЦикла;

	//Покажи первый вопрос, с которого начиналась анкета
	ЭтаФорма.ВопросСтрокой = ПервыйВопросДляВозвратаДомой;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.ТаблицаВопросОтвет.Количество()>0 Тогда
		ЗаписатьВыбранныйОтвет_НаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Предприятие_СправочникПриАктивизацииСтроки(Элемент)
	
// Отобразим все телефоны текущего выбранного элемента справочника
	ТекСсылка = ?(Элемент.ТекущиеДанные = Неопределено,Неопределено,Элемент.ТекущиеДанные.Ссылка);
	Если ТекСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Предприятие_Телефоны.Количество() = 0 Тогда
		СправочникЭлементПолучитьТелефоны(ТекСсылка);
		Возврат;	
	КонецЕсли;
	
	Доступно = Предприятие_Телефоны.Количество() > 0 И Предприятие_Телефоны[0].Владелец <> ТекСсылка;
	Если Доступно Тогда
		СправочникЭлементПолучитьТелефоны(ТекСсылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СправочникЭлементПолучитьТелефоны(ТекСсылка)

// Если переданная ссылка не пустая получим все телефоны закрепленные за объектом
//-------------------------------------------------------------------------------------------------
	Предприятие_Телефоны.Очистить();

	Если (ЗначениеЗаполнено(ТекСсылка)) Тогда
		ТЗТемп = Телефония.ТелефоныВладельцаПолучить(ТекСсылка);

		Для Каждого ТекСтрока Из ТЗТемп Цикл
			НовСтрока 				= ЭтаФорма.Предприятие_Телефоны.Добавить();
			НовСтрока.Ссылка 		= ТекСтрока.Телефон;
			НовСтрока.Тип 			= СокрЛП(ТекСтрока.Тип);
			НовСтрока.Atxfer 		= СокрЛП(ТекСтрока.Телефон);
			НовСтрока.Redirect 		= СокрЛП(ТекСтрока.Телефон);
			НовСтрока.Владелец		= ТекСсылка;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Предприятие_ТелефоныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// Если консоль находится в режиме ожидания, то выполним вызов выбранного номера
	// Во всех остальных случаях (режим разговора) - выполним переадресацию в зависимости от команды
	Доступно = (Поле.Имя = "Предприятие_ТелефоныAtxfer" ИЛИ Поле.Имя = "Предприятие_ТелефоныRedirect") И Элементы.Предприятие_Телефоны.ТекущиеДанные <> Неопределено;
	СтандартнаяОбработка = Ложь;
  	Если НЕ Доступно = Ложь Тогда
		Возврат;
	КонецЕсли;

	// Получим номер для переадресации
	ТелНомер = ВРег(СокрЛП(Элементы.Предприятие_Телефоны.ТекущиеДанные.Redirect));
	
	// Выполним команду
	Если (Поле.Имя = "Предприятие_ТелефоныAtxfer") Тогда
		Результат = КонтактЦентр.КомандаAtxfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	ИначеЕсли (Поле.Имя = "Предприятие_ТелефоныRedirect") Тогда
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	КонецЕсли;

	// Выведем сообщение о результате
	Если (Результат = Ложь) Тогда
		ПоказатьПредупреждение(,"Ошибка при наборе номера абонента",3);
	КонецЕсли;

	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПредыдущегоСостоявшегосяЗвонкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Если консоль находится в режиме ожидания, то выполним вызов выбранного номера
	// Во всех остальных случаях (режим разговора) - выполним переадресацию в зависимости от команды
	Доступно = (Поле.Имя = "ИсторияЗвонкаAtxfer" ИЛИ Поле.Имя = "ИсторияЗвонкаRedirect") И Элементы.ИсторияПредыдущегоСостоявшегосяЗвонка.ТекущиеДанные <> Неопределено;
	СтандартнаяОбработка = Ложь;
	Если НЕ Доступно Тогда
		Возврат;
	КонецЕсли;

	// Получим номер для переадресации
	ТелНомер = ВРег(СокрЛП(Элементы.ИсторияПредыдущегоСостоявшегосяЗвонка.ТекущиеДанные.ТелефонАбонента));
	
	// Выполним команду
	Если (Поле.Имя = "ИсторияЗвонкаAtxfer") Тогда
		Результат = КонтактЦентр.КомандаAtxfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	ИначеЕсли (Поле.Имя = "ИсторияЗвонкаRedirect") Тогда
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	КонецЕсли;

	// Выведем сообщение о результате
	Если (Результат = Ложь) Тогда
		ПоказатьПредупреждение(,"Ошибка при наборе номера абонента",3);
	КонецЕсли;

	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура АнкетаТекущийВопросВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = ЭтаФорма.Элементы.АнкетаТекущийВопрос.ТекущиеДанные;
	СледующееДействие 			=  	ТекДанные.СледующееДействие;
	СледюущееДействиеКод 		= 	ТекДанные.СледующееДействиеКод;
	ТипЗначенияОтвета			=	ТипЗнч(СледующееДействие);
	
	Если Не ЗначениеЗаполнено(СледующееДействие) Тогда
		Возврат
	КонецЕсли;
		
	//Выбери следующее действие: переход к следующему вопросу, перевод с уведомлением, перевод без уведомления
	//--------------------------------------------------------------------------------------------------------	
	Если  ТипЗначенияОтвета = Тип("СправочникСсылка.Анкеты") Тогда
		
		
		//Покажи следующий вопрос в таблице
		//------------------------------------------------------------
		ЭтаФорма.Объект.АнкетаТекущийВопрос.Очистить();
		Отб = Новый Структура("Вопрос", СледующееДействие);
		Найденные = ЭтаФорма.Объект.АнкетаОтветы.НайтиСтроки(Отб);
		Для Каждого Стр из Найденные Цикл
			Новая = ЭтаФорма.Объект.АнкетаТекущийВопрос.Добавить();
			ЗаполнитьЗначенияСвойств(Новая, Стр);
		КонецЦикла;
		
		//Покажи новый вопрос в шапке
		ЭтаФорма.Вопрос 		= СледующееДействие;
		ЭтаФорма.ВопросСтрокой 	= СледующееДействие;
		
		Элементы.АнкетаТекущийВопросОтвет.Заголовок = СледующееДействие;
		
	ИначеЕсли ТипЗначенияОтвета = Тип("СправочникСсылка.ТелВнутренние") 
		И ЗначениеЗаполнено(ЭтаФорма.Параметры.КаналСистемный) 
		Тогда
		
		//Для отправки письма
		Оповестить("ПоследнийНабранныйНомерВнутрАбонента", СледюущееДействиеКод, ЭтаФорма);
		Результат = КонтактЦентр.КомандаAtxfer(ЭтаФорма.Параметры.КаналСистемный, СледюущееДействиеКод);		
		КонтактЦентрСервер.ПереводЗвонка(ТекущийПользователь, СледующееДействие);	
		Оповестить("ПоследнийНабранныйНомерВнутрАбонента", СледюущееДействиеКод, ЭтаФорма);
		ЭтаФорма.Закрыть();	
	ИначеЕсли ТипЗначенияОтвета = Тип("СправочникСсылка.ТелОчереди") И ЗначениеЗаполнено(ЭтаФорма.Параметры.КаналСистемный) Тогда
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, СледюущееДействиеКод);
		КонтактЦентрСервер.ПереводЗвонка(ТекущийПользователь, СледующееДействие);
		ЭтаФорма.Закрыть();
	ИначеЕсли ТипЗначенияОтвета = Тип("СправочникСсылка.ВиртуальныеОчереди") Тогда
		Агент = ПолучиАгентаВиртуальнойОчереди(СледующееДействие);
		Если Агент.Телефон= "0000" Тогда
			    ТекстСообщения = "Ошибка автоматического определения агента";
				ПоказатьПредупреждение(,ТекстСообщения,3);
				ЭтаФорма.Закрыть();
		КонецЕсли;
			
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, Агент.Телефон);
		Если Результат = Истина Тогда
			Переведено = ПереводУказателяАгентовВперед(СледующееДействие, Агент.НомерВСписке);	
			Если Переведено = Ложь Тогда
					ТекстСообщения ="Ошибка перевода указателя агентов";
					ПоказатьПредупреждение(,ТекстСообщения,3);
			КонецЕсли;
		КонецЕсли;
		КонтактЦентрСервер.ПереводЗвонка(ТекущийПользователь, СледующееДействие);
		ЭтаФорма.Закрыть();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучиАгентаВиртуальнойОчереди(ВиртуальнаяОчередь)
	//Возвращает телефонный номер агента виртуальной очереди для приема текущего звонка
	// и сдвигает указатель агентов вперед
	//Вызов из АнкетаТекущийВопросВыбор()
	
	Структ = Новый Структура("Телефон, НомерВСписке", "0000", 0);  //0 - Позиция агента в табличной части Справочник.ВиртуальныеОчереди.Состав 
	
	ЗначениеПоУмолчанию = Структ;
	
	Доступно = ТипЗнч(ВиртуальнаяОчередь) = Тип("СправочникСсылка.ВиртуальныеОчереди");
	Если Не Доступно Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	//Получи телефонный номер агента (это может быть или телефон очереди или телефон сотрудника)-планового получателя данного вызова
	//---------------------------------------------------------------------------------------------------------------------------------
	Запрос = Новый Запрос("ВЫБРАТЬ Т.Агент.Код КАК ТелНомер ИЗ Справочник.ВиртуальныеОчереди.Состав КАК Т ГДЕ Т.Ссылка = &Ссылка И Т.НомерСтроки = &НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", ВиртуальнаяОчередь);
	
	НомерСтроки = 1;
	Если ВиртуальнаяОчередь.НомерТекущегоАгентаВСписке > 1 Тогда
		НомерСтроки = ВиртуальнаяОчередь.НомерТекущегоАгентаВСписке;	
	КонецЕсли;
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос, ПараметрыСеанса.ТекущийПользователь);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ТелНомер = Выборка.ТелНомер;	
	Если ТелНомер = "" Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Структ.Вставить("Телефон"	   , ТелНомер);
	Структ.Вставить("НомерВСписке" , НомерСтроки);		
	Возврат Структ;

КонецФункции

&НаСервере
Функция ПереводУказателяАгентовВперед(ВиртуальнаяОчередь, НомерВСписке)     
	
	СледующийНомер = НомерВСписке + 1;

	//Если следующий номер выходит за конец списка тогда помести в начало
	Если СледующийНомер > ВиртуальнаяОчередь.Состав.Количество() Тогда
		СледующийНомер = 1;
	КонецЕсли;
	
	Об = ВиртуальнаяОчередь.ПолучитьОбъект();
	Об. НомерТекущегоАгентаВСписке = СледующийНомер;
	Попытка
		Об.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("ПереводУказателяАгентовВперед", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("ВиртуальнаяОчередь = %1, НомерВСписке = %2",ВиртуальнаяОчередь,НомерВСписке),ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); 
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

#Область Первоначальное_заполнение_анкеты_маршрутизации
&НаСервере
Процедура ЗаполниТЧ_АнкетыРекурсивно() Экспорт
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ссылка КАК Вопрос,
		|	ВариантыОтветов.(
		|		Ответ КАК Ответ,
		|		СледующийВопросИлиТелНомер КАК СледующееДействие,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.Анкеты)
		|				ТОГДА 1
		|			КОГДА ТИПЗНАЧЕНИЯ(ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.ТелВнутренние)
		|				ТОГДА 2
		|			КОГДА ТИПЗНАЧЕНИЯ(ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.ТелОчереди)
		|				ТОГДА 3
		|			КОГДА ТИПЗНАЧЕНИЯ(ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.ВиртуальныеОчереди)
		|				ТОГДА 4
		|		КОНЕЦ КАК СледующееДействиеТип,
		|		СледующийВопросИлиТелНомер.Код КАК СледующееДействиеКод,
		|		НомерСтроки КАК НомерСтроки,
		|		Характеристика КАК Характеристика
		|	) КАК ВариантыОтветов
		|ИЗ
		|	Справочник.Анкеты КАК Спр
		|ГДЕ НЕ ЭтоГруппа И Родитель.Код = ""000000013""
		|УПОРЯДОЧИТЬ ПО Вопрос, НомерСтроки";
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		ТЗ = Рез.Выгрузить();
		
		Для Каждого Стр1 Из ТЗ Цикл
			НовыйВопрос = Объект.АнкетаВопросы.Добавить();
			НовыйВопрос.Вопрос = Стр1.Вопрос;
			Для Каждого Стр2 из Стр1.ВариантыОтветов Цикл	
				НовыйОтвет 						= Объект.АнкетаОтветы.Добавить();
				НовыйОтвет.Вопрос 				= НовыйВопрос.Вопрос;
				ЗаполнитьЗначенияСвойств(НовыйОтвет, Стр2);
			КонецЦикла;
		КонецЦикла;
		
	КонецПроцедуры
	
&НаСервере	
Процедура ЗаполниТЧ_ВыбираемыеОтветы() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ Т.Ссылка КАК Вопрос, Т.Ответ КАК Ответ, Т.Картинка КАК Картинка ИЗ Справочник.Анкеты.ВариантыОтветов КАК Т ГДЕ Т.Ссылка.Родитель.Код = ""000000014""");
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		Новая = Объект.ВыбираемыеОтветы.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Выб);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область РучноеЗакрытиеЗадачиАвтозвонка
&НаКлиенте
Процедура ЗадачаОтменить(Команда)
	СписокОтветов =  ПолучиСписокОтветовПричинРучогоЗакрытияЗадачи("ПРИЧИНЫ РУЧНОГО ЗАКРЫТИЯ ИНТЕРНЕТ-ЗАЯВКИ");	
	Если СписокОтветов.Количество()=0 Тогда
			ПоказатьПредупреждение(,"Не задан список причин ручного закрытия задач",3);
			Возврат
	КонецЕсли;
		
	//Общая часть - одинаковая для всех закладок
	//-----------------------------------------------------------------------------------------------------------
	ДопПарамОбработчикаОповещения = Новый Структура("ИнтернетЗаявкаСигнатура, ЗвонокСигнатура", Параметры.ИнтернетЗаявкаСигнатура, Параметры.Сигнатура); 	
	
	Оп = Новый ОписаниеОповещения("ОбработкаОповещенияЗадачаОтменить", ЭтотОбъект, ДопПарамОбработчикаОповещения);
	ПоказатьВыборИзМеню(Оп, СписокОтветов, Команда);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучиСписокОтветовПричинРучогоЗакрытияЗадачи(ИмяШаблона = "ПРИЧИНЫ РУЧНОГО ЗАКРЫТИЯ ЗАДАЧ")
	
	СписЗнач = Новый СписокЗначений();
		
	Запрос = Новый Запрос("ВЫБРАТЬ Ответ ИЗ Справочник.Анкеты.ВариантыОтветов ГДЕ Ссылка.Родитель.Наименование = &РодительНаименование И Ссылка.Наименование = &Наименование");
	Запрос.УстановитьПараметр("РодительНаименование", "ПРОЧЕЕ");
	Запрос.УстановитьПараметр("Наименование", ИмяШаблона);	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СписЗнач
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписЗнач.Добавить(Выборка.Ответ, Выборка.Ответ);
	КонецЦикла;
	
	Возврат СписЗнач
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещенияЗадачаОтменить(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Создай запись в РС.ЗадачаОбратногоЗвонкаДляАвтозакытия. При загрузке звонка в реестр и создания задачи обратного звонка
	//на основании этого звонка по задаче интернет-заявки, непереведенного на менеджера, эта задача должна будет закрыться причиной ручного закрытия
	//------------------------------------------------------------------------------------------------------------------------------------------------
	ЗадачуОбратногоЗвонкаДляАвтозакрытияСоздай(ДопПараметры.ЗвонокСигнатура, ВыбЗначОтвет.Значение);
	
	//Возможен случай, что этот код выполняется уже после загрузке этого звонка в реестр (оператор слишком долго сидит в этой форме), тогда
	//уже создана задача обратного звонка на основании задачи интернет-заявки этого звонка и она уже не закрылась причиной ручного закрытия (см.код выше)
	//Значит закроем ее здесь:
	Рез = ЗадачуОбратногоЗвонкаЗакройПричиной(ДопПараметры.ИнтернетЗаявкаСигнатура, ВыбЗначОтвет.Значение);
КонецПроцедуры

&НаСервере
Функция ЗадачуОбратногоЗвонкаДляАвтозакрытияСоздай(ЗвонокСигнатура, ПричинаРучногоЗакрытия)
	//Создай закрытую задачу автозакрытия, чтобы не пересекаться с функционалом открытых задач
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонокДляАвтозакрытия.СоздатьМенеджерЗаписи();
	Зап.Инициатор = ЗвонокСигнатура;
	Зап.Прочитать();
	Если Зап.Выбран() Тогда
		ЗаписьЖурналаРегистрации("ЗадачаОбратногоЗвонкаДляАвтозакытия_Создай", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("ЗвонокСигнатура = %1, ПричинаРучногоЗакрытия = %2", ЗвонокСигнатура, ПричинаРучногоЗакрытия), "Задача уже существует");
		Возврат "запись уже существует";
	КонецЕсли;
	Зап.Инициатор	 = ЗвонокСигнатура;
	Зап.ДатаЗакрытия = ТекущаяДата();
	Зап.Комментарий  = ПричинаРучногоЗакрытия;
	Попытка
		Зап.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("ЗадачаОбратногоЗвонкаДляАвтозакытия_Создай", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("ЗвонокСигнатура = %1, ПричинаРучногоЗакрытия = %2", ЗвонокСигнатура, ПричинаРучногоЗакрытия), ОписаниеОшибки());
		Возврат "ошибка записи в РС.ЗадачаОбратногоЗвонкаДляАвтозакрытия"
	КонецПопытки;
	Возврат "";
КонецФункции

&НаСервере
Функция ЗадачуОбратногоЗвонкаЗакройПричиной(ИнтернетЗаявкаСигнатура, ПричинаРучногоЗакрытия)
	//Находит открытую задачу обратного звонка, основанной по закрытой задачи интернет-заявке, по сигнатуре этой заявки и закрывает ее причиной ручного закрытия
	
	Доступно = 	ТипЗнч(ИнтернетЗаявкаСигнатура) = Тип("Строка") И ЗначениеЗаполнено(ИнтернетЗаявкаСигнатура);
	Если Не Доступно Тогда     
		ЗаписьЖурналаРегистрации("ЗадачуОбратногоЗвонкаНайдиИЗакройПричиной", УровеньЖурналаРегистрации.Ошибка, ,СтрШаблон("ИнтернетЗаявкаСигнатура = %1", ИнтернетЗаявкаСигнатура), "сигнатура интернет-заявки не заполнена");			
		Возврат "сигнатура интернет-заявки не заполнена"				
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Телефон ИЗ РегистрСведений.ЗадачиОбратныйЗвонок ГДЕ ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1) И Основание = &Основание");
	Запрос.УстановитьПараметр("Основание", СтрШаблон("iq_%1",ИнтернетЗаявкаСигнатура));
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ЗаписьЖурналаРегистрации("ЗадачуОбратногоЗвонкаНайдиИЗакройПричиной", УровеньЖурналаРегистрации.Ошибка, ,СтрШаблон("ИнтернетЗаявкаСигнатура = %1", ИнтернетЗаявкаСигнатура), "Не найдена открытая задача на обратный звонок");
		Возврат СтрШаблон("открытая задача обратного звонка по интернет-заявке %1 не найдена", ИнтернетЗаявкаСигнатура);
	КонецЕсли;
	Телефон = РезультатЗапроса.Выгрузить()[0][0];
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	Зап.Телефон 		= Телефон;
	Зап.ДатаЗакрытия 	= '00010101';
	Зап.Прочитать();
	Если Не Зап.Выбран() Тогда
		Возврат СтрШаблон("открытая задача обратного звонка по интернет-заявке %1 не выбрана", ИнтернетЗаявкаСигнатура);
	КонецЕсли;
	
	Зап.Телефон 		= Телефон;
	Зап.ДатаЗакрытия 	= ТекущаяДата();
	Зап.ПричинаЗакрытия	= ПричинаРучногоЗакрытия;
	Зап.Комментарий		= Зап.Комментарий+"; Закрыта "+Строка(ТекущаяДата())+ " причиной ручного закрытия, установленной в форме расширенной анкеты при обработке звонка по интернет-заявке-основанию";
	Попытка
		Зап.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("ЗадачуОбратногоЗвонкаНайдиИЗакройПричиной", УровеньЖурналаРегистрации.Ошибка, ,СтрШаблон("ИнтернетЗаявкаСигнатура = %1", ИнтернетЗаявкаСигнатура), ОписаниеОшибки());
		Возврат СтрШаблон("ошибка закрытия открытой задачи обратого звонка по интернет-заявке, сигнатура интернет-заявки %1", ИнтернетЗаявкаСигнатура);
	КонецПопытки;
	Возврат "";
КонецФункции

&НаКлиенте
Процедура ИнтернетЗадачуПеренестиПриИзменении(Элемент)
	ЗадачуОбратногоЗвонкаДляАвтозакрытияСоздай_ДляНапоминанияПерезвонить(Параметры.Сигнатура, ИнтернетЗадачуПеренести);
	
	//Возможен случай, что этот код выполняется уже после загрузке этого звонка в реестр (оператор слишком долго сидит в этой форме), тогда
	//уже создана задача обратного звонка на основании задачи интернет-заявки этого звонка и не установилось напоминание перезвонить
	//Значит закроем ее здесь:
	ЗадачуОбратногоЗвонкаУстановиНапоминаниеПерезвонить(Параметры.ИнтернетЗаявкаСигнатура, ИнтернетЗадачуПеренести);

КонецПроцедуры

&НаСервере
Функция ЗадачуОбратногоЗвонкаДляАвтозакрытияСоздай_ДляНапоминанияПерезвонить(ЗвонокСигнатура, НапоминаниеПерезвонить)
	//Создай закрытую задачу автозакрытия, чтобы не пересекаться с функционалом открытых задач
	//При каждой переустановке напоминания перезвонить меняем запись
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонокДляАвтозакрытия.СоздатьМенеджерЗаписи();
	Зап.Инициатор = ЗвонокСигнатура;
	Зап.Прочитать();
	Зап.Инициатор	 	= ЗвонокСигнатура;
	Зап.ДатаПостановки	= НапоминаниеПерезвонить;
	Зап.ДатаЗакрытия 	= ТекущаяДата();
	Зап.Комментарий  	= "# напоминание перезвонить #";
	Попытка
		ЗаписьЖурналаРегистрации("ЗадачаОбратногоЗвонкаДляАвтозакытия_Создай", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("ЗвонокСигнатура = %1, НапоминаниеПерезвонить = %2", ЗвонокСигнатура, НапоминаниеПерезвонить), "Тест");
		Зап.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("ЗадачаОбратногоЗвонкаДляАвтозакытия_Создай", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("ЗвонокСигнатура = %1, НапоминаниеПерезвонить = %2", ЗвонокСигнатура, НапоминаниеПерезвонить), ОписаниеОшибки());
		Возврат "ошибка записи в РС.ЗадачаОбратногоЗвонкаДляАвтозакытия"
	КонецПопытки;
	Возврат "";
КонецФункции

&НаСервере
Функция ЗадачуОбратногоЗвонкаУстановиНапоминаниеПерезвонить(ИнтернетЗаявкаСигнатура, НапоминаниеПерезвонить)
	//Находит открытую задачу обратного звонка, основанной по закрытой задачи интернет-заявке, по сигнатуре этой заявки и закрывает ее причиной ручного закрытия
	
	Доступно = ТипЗнч(ИнтернетЗаявкаСигнатура) = Тип("Строка") И ЗначениеЗаполнено(ИнтернетЗаявкаСигнатура);
	Если Не Доступно Тогда
		Возврат "сигнатура интернет-заявки не заполнена"				
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Телефон ИЗ РегистрСведений.ЗадачиОбратныйЗвонок ГДЕ ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1) И Основание = &Основание");
	Запрос.УстановитьПараметр("Основание", ИнтернетЗаявкаСигнатура);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтрШаблон("открытая задача обратного звонка по интернет-заявке %1 не найдена", ИнтернетЗаявкаСигнатура);
	КонецЕсли;
	Телефон = РезультатЗапроса.Выгрузить()[0][0];
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	Зап.Телефон 		= Телефон;
	Зап.ДатаЗакрытия 	= '00010101';
	Зап.Прочитать();
	Если Не Зап.Выбран() Тогда
		Возврат СтрШаблон("открытая задача обратного звонка по интернет-заявке %1 не выбрана", ИнтернетЗаявкаСигнатура);
	КонецЕсли;
	
	Зап.Телефон 				= Телефон;
	Зап.ДатаЗакрытия 			= '00010101';
	Зап.НапоминаниеПерезвонить	= НапоминаниеПерезвонить;
	Зап.Комментарий				= Зап.Комментарий+"; Изменено "+Строка(ТекущаяДата())+ " напоминание перезвонить, установленной в форме расширенной анкеты при обработке звонка по интернет-заявке-основанию";
	Попытка
		Зап.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("ЗадачуОбратногоЗвонкаНайдиИЗакройПричиной", УровеньЖурналаРегистрации.Ошибка, ,СтрШаблон("ИнтернетЗаявкаСигнатура = %1", ИнтернетЗаявкаСигнатура), ОписаниеОшибки());
		Возврат СтрШаблон("ошибка установки напоминания перезвонить по интернет-заявке, сигнатура интернет-заявки %1", ИнтернетЗаявкаСигнатура);
	КонецПопытки;
	Возврат "";
КонецФункции

&НаСервере
Функция ЗадачеОбратногоЗвонкаУстановиНапоминаниеПерезвонить(ИнтернетЗаявкаСигнатура, НапоминаниеПерезвонить)
	//Найди открытую задачу обратного звонка, основаной по закрытой задачи интернет-заявки и установи ей напоминание перезвонить
	//-----------------------------------------------------------------------------------------------------------------
	Доступно = 		ТипЗнч(ИнтернетЗаявкаСигнатура) = Тип("Строка") И ЗначениеЗаполнено(ИнтернетЗаявкаСигнатура);
	Если Не Доступно Тогда
		Возврат "сигнатура интернет-заявки не заполнена"				
	КонецЕсли;
	
	//Найди открытую задачу обратного звонка, основанную по закрытой задаче интернет-заявки
	Запрос = Новый Запрос();
	Запрос.Текст = 	"ВЫБРАТЬ ПЕРВЫЕ 1 Т.Телефон КАК Телефон ИЗ РегистрСведений.ЗадачиОбратныйЗвонок КАК Т ГДЕ Т.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1) И Т.Основание = &Основание";
	Запрос.УстановитьПараметр("Основание", ИнтернетЗаявкаСигнатура);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтрШаблон("открытая задача обратного звонка по интернет-заявке %1 не найдена", ИнтернетЗаявкаСигнатура);
	КонецЕсли;
	Телефон = РезультатЗапроса.Выгрузить()[0][0];
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	Зап.Телефон 		= Телефон;
	Зап.ДатаЗакрытия 	= '00010101';
	Зап.Прочитать();
	Если Не Зап.Выбран() Тогда
		Возврат СтрШаблон("открытая задача обратного звонка по интернет-заявке %1 не выбрана", ИнтернетЗаявкаСигнатура);
	КонецЕсли;
	
	Зап.Телефон 				= Телефон;
	Зап.ДатаЗакрытия 			= '00010101';
	Зап.НапоминаниеПерезвонить	= НапоминаниеПерезвонить;
	Зап.Комментарий				= Зап.Комментарий+"; Изменено напоминание перезвонить "+Строка(ТекущаяДата())+ " установленное в форме расширенной анкеты при обработке звонка по интернет-заявке-основанию";
	Попытка
		Зап.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("ЗадачуОбратногоЗвонкаНайдиИЗакройПричиной", УровеньЖурналаРегистрации.Ошибка, ,СтрШаблон("ИнтернетЗаявкаСигнатура = %1", ИнтернетЗаявкаСигнатура), ОписаниеОшибки());
		Возврат СтрШаблон("ошибка закрытия открытой задачи обратого звонка по интернет-заявке, сигнатура интернет-заявки %1", ИнтернетЗаявкаСигнатура);
	КонецПопытки;
	Возврат "";

КонецФункции
	
&НаКлиенте
Процедура ЗадачаИсторияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Если консоль находится в режиме ожидания, то выполним вызов выбранного номера, в остальных случаях (режим разговора) - выполним переадресацию в зависимости от команды
	//-------------------------------------------------------------------------------------------------
	Доступно = (Поле.Имя = "ЗадачаИсторияAtxfer" ИЛИ Поле.Имя = "ЗадачаИсторияRedirect") И Элементы.ЗадачаИстория.ТекущиеДанные <> Неопределено;
	
	СтандартнаяОбработка = Ложь;

	Если Не Доступно Тогда
		Возврат;
	КонецЕсли;

	// Получим номер для переадресации
	ТелНомер = ВРег(СокрЛП(Элементы.ЗадачаИстория.ТекущиеДанные.АбонентВнутренний));
	
	// Выполним команду
	Если (Поле.Имя = "ЗадачаИсторияAtxfer") Тогда
		Результат = КонтактЦентр.КомандаAtxfer(Параметры.КаналСистемный, Параметры.Телефон);
	ИначеЕсли (Поле.Имя = "ЗадачаИсторияRedirect") Тогда
		Результат = КонтактЦентр.КомандаBlindTransfer(Параметры.КаналСистемный, Параметры.Телефон);
	КонецЕсли;

	// Выведем сообщение о результате
	Если (Результат = Ложь) Тогда
		ПоказатьПредупреждение(,"Ошибка при наборе номера абонента",3);
	КонецЕсли;

	ЭтаФорма.Закрыть();

КонецПроцедуры
#КонецОбласти

#Область Создать_вручную_задачу_обратного_звонка
&НаСервереБезКонтекста
Функция ЗарегистрируйСброс(СигнатураЗвонка, Период)
	Возврат РегистрыСведений.ЗвонкиСбросы.Добавить(СигнатураЗвонка, Период);
КонецФункции

&НаСервереБезКонтекста
Функция СоздайЗадачуОбратногоЗвонка(АбонентВнешний, СигнатураЗвонка, Канал, Период)
	ДатаАктуальности = Период + 600;
	РегистрыСведений.ЗадачиОбратныйЗвонок.Добавить(АбонентВнешний, ,Перечисления.ТипЗадачи.Сброс, ПараметрыСеанса.ККЦКонтактЦентр , , Период, СигнатураЗвонка, ДатаАктуальности)
КонецФункции

&НаКлиенте
Процедура ЗадачаСоздать(Команда)
	//Кнопка доступна если известен телефон и сигнатура звонка
	
	Период = ТекущаяДата();
	Если ЗарегистрируйСброс(Параметры.Сигнатура, Период) <> "" Тогда
		Возврат;
	КонецЕсли;
	СоздайЗадачуОбратногоЗвонка(Параметры.Телефон, Параметры.Сигнатура, Параметры.КаналИнициатор, Период)
КонецПроцедуры
#КонецОбласти

#Область Открытые_документы
&НаКлиенте
Процедура ТаблицаОткрытыхДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "ТаблицаОткрытыхДокументовОператорТелефон" Тогда
		Возврат;
	КонецЕсли;
	ТелНомер = ВРег(СокрЛП(Элементы.ТаблицаОткрытыхДокументов.ТекущиеДанные.ОператорТелефон));
	Результат = КонтактЦентр.КомандаAtxfer(Параметры.КаналСистемный, ТелНомер);
КонецПроцедуры

#Область Отправить_сообщение_сотруднику
&НаКлиенте
Процедура ПоставитьЗадачуСотрудникуНачало(Команда)
	ОператорТелефон = "";
	
	Доступно = ЗначениеЗаполнено(Параметры.Телефон) И Элементы.ТаблицаОткрытыхДокументов.ТекущиеДанные <> Неопределено;
	Если Не Доступно Тогда  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка при постановке задачи сотруднику");
		Возврат;
	КонецЕсли;
	ОператорТелефон	= Элементы.ТаблицаОткрытыхДокументов.ТекущиеДанные.ОператорТелефон;
	Доступно = Доступно И СтрДлина(ОператорТелефон) = 4;
	Если Не Доступно Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка при постановке задачи сотруднику");
		Возврат
	КонецЕсли;

	Автомобиль	= Элементы.ТаблицаОткрытыхДокументов.ТекущиеДанные.Автомобиль;
	Парам2 		= Новый Структура("Сигнатура, АбонентВнешний, ОператорТелефон", Параметры.Сигнатура, Параметры.Телефон, Элементы.ТаблицаОткрытыхДокументов.ТекущиеДанные.ОператорТелефон);
	Оп 			= Новый ОписаниеОповещения("ПоставитьЗадачуСотрудникуОкончание", ЭтаФорма, Парам2);
	ПоказатьВводСтроки(Оп, Автомобиль, "Введите сообщение");
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьЗадачуСотрудникуОкончание(Парам1, Парам2) Экспорт
	Парам1 = ?(Парам1 = Неопределено, "", Парам1);
    ПоставитьЗадачуСотрудникуНаСервере(Парам2.Сигнатура, Парам2.ОператорТелефон, Парам2.АбонентВнешний, Парам1);
КонецПроцедуры

&НаСервере
Процедура ПоставитьЗадачуСотрудникуНаСервере(linkedid, agent_num, abonent_num, comment)	
	Звонки.УведомитьОПропущенном(linkedid, ТекущаяДата(),agent_num, abonent_num, comment);
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ПокажиОткрытыеДокументы(Команда)
	Парам = Новый Структура("КаналСистемный, Телефон", Параметры.КаналСистемный, Параметры.Телефон);
	ОткрытьФорму("Обработка.КонсольКонтактЦентраТест4.Форма.ФормаОткрытыхДокументов", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
#КонецОбласти  

&НаКлиенте
Процедура ДисплейСодержаниеИнтернетПочтовойЗаявкиНажатие(Элемент)
	//Обработчик события нажание на гиперссылку "Открыть" для интернет-почтовой заявки
	Парам = Новый Структура("Тема, Тело, ПриОткрытииСвернутьШапку", "Интернет-заявка", Параметры.ИнтернетПочтоваяЗаявкаСодержание, "Истина");
	ОткрытьФорму("ОбщаяФорма.ОтправкаПочтовогоСообщения4", Парам);
КонецПроцедуры


