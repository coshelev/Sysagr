
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Вопросы = Новый Массив();
	Вопросы.Добавить("Что планирует? (Для ЭКСПЕРТА)");
	Вопросы.Добавить("Результат звонка Эксперт");
	Вопросы.Добавить("Результат звонка по Автосалонам");
	Вопросы.Добавить("Выяснена готовность сдать имеющийся автомобиль");
	Вопросы.Добавить("Выяснена заинтересованность в кредите/лизинге"); 
	Вопросы.Добавить("Предложен предварительный расчет по кредиту/лизингу");
	
	Для i = 0 По Вопросы.Количество() - 1 Цикл
		Вопрос = Справочники.ИдентификаторыСтрок.НайтиПоНаименованию(Вопросы[i]);
		Если Вопрос = Справочники.ИдентификаторыСтрок.ПустаяСсылка() Тогда
			Сообщить("Не найден вопрос "+ Вопрос); 
		КонецЕсли;
		
		ИндексСтрокой 	= ?(i = 0, "", Строка(i));
		ИмяПараметра 	= "Вопрос"+ИндексСтрокой;
		Звонки.Параметры.УстановитьЗначениеПараметра(ИмяПараметра, Вопрос);
	КонецЦикла;
	
	Звонки.ТекстЗапроса = 		
	"ВЫБРАТЬ
	|	Рег.Дата КАК Дата,
	|	Рег.Регион КАК Регион,
	|	Рег.Принят КАК Принят,
	|	Рег.Сигнатура КАК Сигнатура,
	|	Рег.ЭтоВходящий КАК ЭтоВходящий,
	|	Рег.АбонентВнешний КАК АбонентВнешний,
	|	Стат.Исполнитель КАК Оператор,
	|	Рег.Инициатор КАК ТелефонИнициатора,
	|	Рег.АбонентВнутренний КАК ТелефонОператора,
	|	Стат.Исполнитель.ТочкаРазмещения КАК ТочкаРазмещения,
	|	Стат.КЦСсылка КАК КЦСсылка,
	|	Стат.ОПРазговор КАК ОПРазговор,
	|	ЗвонкиДоп.ЦелеваяТочка КАК ЦелеваяТочкаОУ,
	|	ЕСТЬNULL(ВТ04.Ответ, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК Ответ,
	|	ЕСТЬNULL(ВТ041.Ответ, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК Ответ1,
	|	ЕСТЬNULL(ВТ042.Ответ, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК Ответ2,
	|	ЕСТЬNULL(ВТ043.Ответ, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК Ответ3,
	|	ЕСТЬNULL(ВТ044.Ответ, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК Ответ4,
	|	ЕСТЬNULL(ВТ045.Ответ, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК Ответ5,
	|	ЕСТЬNULL(ЗвонкиСделки.Наименование, """") КАК Сделка,
	|	ЕСТЬNULL(ЗвонкиСделки.Ссылка, """") КАК СделкаСсылка
	|ИЗ
	|	РегистрСведений.Звонки КАК Рег
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК Иниц
	|		ПО (Иниц.Объект = Рег.Инициатор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Стат
	|		ПО (Стат.Сигнатура = Рег.Сигнатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиДоп КАК ЗвонкиДоп
	|		ПО Рег.Сигнатура = ЗвонкиДоп.Сигнатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос = &Вопрос) КАК ВТ04
	|		ПО Рег.Сигнатура = ВТ04.Сигнатура
	|			И Рег.АбонентВнешний = ВТ04.Телефон
	|			И (ВТ04.Вопрос = &Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос = &Вопрос1) КАК ВТ041
	|		ПО Рег.Сигнатура = ВТ041.Сигнатура
	|			И Рег.АбонентВнешний = ВТ041.Телефон
	|			И (ВТ041.Вопрос = &Вопрос1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос = &Вопрос2) КАК ВТ042
	|		ПО Рег.Сигнатура = ВТ042.Сигнатура
	|			И Рег.АбонентВнешний = ВТ042.Телефон
	|			И (ВТ042.Вопрос = &Вопрос2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос = &Вопрос3) КАК ВТ043
	|		ПО Рег.Сигнатура = ВТ043.Сигнатура
	|			И Рег.АбонентВнешний = ВТ043.Телефон
	|			И (ВТ043.Вопрос = &Вопрос3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос = &Вопрос4) КАК ВТ044
	|		ПО Рег.Сигнатура = ВТ044.Сигнатура
	|			И Рег.АбонентВнешний = ВТ044.Телефон
	|			И (ВТ044.Вопрос = &Вопрос4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос = &Вопрос5) КАК ВТ045
	|		ПО Рег.Сигнатура = ВТ045.Сигнатура
	|			И Рег.АбонентВнешний = ВТ045.Телефон
	|			И (ВТ045.Вопрос = &Вопрос5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСделки КАК ЗвонкиСделки
	|		ПО Рег.Сигнатура = ЗвонкиСделки.Сигнатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Очистить();
	
	//Отбор по периоду
	//-----------------
	Начало = '00010101';
	Начало = ?(ЗначениеЗаполнено(Параметры.Начало),	Параметры.Начало, НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1)));	
	ЭлОтбораНачало = Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбораНачало.ЛевоеЗначение		=	Новый ПолеКомпоновкиДанных("Дата");
	ЭлОтбораНачало.ВидСравнения			=	ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлОтбораНачало.ПравоеЗначение		=	Начало;
	ЭлОтбораНачало.Использование		=	Истина;
	
	Окончание = ?(ЗначениеЗаполнено(Параметры.Окончание), Параметры.Окончание, КонецДня(ТекущаяДата()));
	ЭлОтбораОкончание =Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбораОкончание.ЛевоеЗначение		=	Новый ПолеКомпоновкиДанных("Дата");
	ЭлОтбораОкончание.ВидСравнения		=	ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлОтбораОкончание.ПравоеЗначение	=	Окончание;
	ЭлОтбораОкончание.Использование		=	Истина;
	
	//Разговор с ОП состоялся
	//------------------------
	ЭлОтбораОПРазговор =Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбораОПРазговор.ЛевоеЗначение	=	Новый ПолеКомпоновкиДанных("ОПРазговор");
	ЭлОтбораОПРазговор.ВидСравнения		=	ВидСравненияКомпоновкиДанных.Больше;
	ЭлОтбораОПРазговор.ПравоеЗначение	=	0;
	ЭлОтбораОПРазговор.Использование	=	Истина;
		
	ЭлОтбораКЦ =Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбораКЦ.ЛевоеЗначение	=	Новый ПолеКомпоновкиДанных("КЦСсылка");
	ЭлОтбораКЦ.ВидСравнения		=	ВидСравненияКомпоновкиДанных.Равно;
	ЭлОтбораКЦ.ПравоеЗначение	=	Справочники.Предприятие.НайтиПоКоду("000000265");
	ЭлОтбораКЦ.Использование	=	Истина;

	#Область Группа_ИЛИ_ПокупкаБУ_или_Сделка 	
	ГрПокупкаБУилиСделка = Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрПокупкаБУилиСделка.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ЭлОтбора = ГрПокупкаБУилиСделка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбора.ЛевоеЗначение		=	Новый ПолеКомпоновкиДанных("Сделка");
	ЭлОтбора.ВидСравнения		=	ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлОтбора.Использование		=	Истина;
	
	ЭлОтбора = ГрПокупкаБУилиСделка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбора.ЛевоеЗначение		=	Новый ПолеКомпоновкиДанных("Ответ");
	ЭлОтбора.ВидСравнения		=	ВидСравненияКомпоновкиДанных.Равно;
	ЭлОтбора.ПравоеЗначение		=	Справочники.ИдентификаторыСтрок.НайтиПоНаименованию("Покупка б/у");
	ЭлОтбора.Использование		=	Истина;
	#КонецОбласти
	
	//Целевая точка - автосалон или эксперт
	//--------------------------------------
	СпГруппЦелевыхТочек = Новый СписокЗначений();
	СпГруппЦелевыхТочек.Добавить(Справочники.ТочкиЦелевые.НайтиПоКоду("000000052")); 	// Автомобили с пробегом
	СпГруппЦелевыхТочек.Добавить(Справочники.ТочкиЦелевые.НайтиПоКоду("000000001"));	// Луидор-автосалоны
	
	ЭлОтбора = Звонки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбора.ЛевоеЗначение	=	Новый ПолеКомпоновкиДанных("ЦелеваяТочкаОУ");
	ЭлОтбора.ВидСравнения	=	ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
	ЭлОтбора.ПравоеЗначение	=	СпГруппЦелевыхТочек;
	ЭлОтбора.Использование	=	Истина;

	//Заголовки колонок вопросов
	//---------------------------
	Элементы.ЗвонкиОтвет.Заголовок 		= Вопросы[0];
	Элементы.ЗвонкиОтвет1.Заголовок 	= Вопросы[1];
	Элементы.ЗвонкиОтвет2.Заголовок 	= Вопросы[2];
	Элементы.ЗвонкиОтвет3.Заголовок 	= Вопросы[3];
	Элементы.ЗвонкиОтвет4.Заголовок 	= Вопросы[4];
	Элементы.ЗвонкиОтвет5.Заголовок 	= Вопросы[5];
КонецПроцедуры

&НаКлиенте
Процедура ОбрПриЗакрытии(Парам1, Парам2) Экспорт
	//ЭтаФорма.Элементы.Звонки.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ЗвонкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элементы.Звонки.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ЗвонкиСделка" Тогда
		НавСсылка = ОбщегоНазначения.GUID_2_ref(ТекДанные.СделкаСсылка);
		НавСсылка = СтрЗаменить("e1c://server/MainAppL/asc_oper#e1cib/data/Документ.СделкаРеализации?ref=811200155d53e00011e9b754c26d77b5", "811200155d53e00011e9b754c26d77b5", НавСсылка);
		ПерейтиПоНавигационнойСсылке(НавСсылка);
	Иначе
		ОбрПриЗакрытии = Новый ОписаниеОповещения("ОбрПриЗакрытии", ЭтаФорма);
		
		Парам = Новый Структура();
		Парам.Вставить("Сигнатура", ТекДанные.Сигнатура);
		Если Лев(ТекДанные.Сигнатура,1)="1" Тогда
			ОткрытьФорму("РегистрСведений.Звонки.Форма.ФормаВходящегоЧтение", Парам, ЭтаФорма,,,,ОбрПриЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ОткрытьФорму("РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение", Парам, ЭтаФорма,,,,ОбрПриЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
