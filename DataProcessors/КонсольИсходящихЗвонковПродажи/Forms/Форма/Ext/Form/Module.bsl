&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МоиНастройки_ТолькоЗвонкиПоЗадачеВИсторииОбщения 					= Ложь;
	Элементы.МоиНастройки_ТолькоЗвонкиПоЗадачеВИсторииОбщения.Видимость = Истина;

	Об = РеквизитФормыВЗначение("Объект");
	Об.ЗагрузиСоответствиеТочекПродажПодразделениям();
	ЗначениеВРеквизитФормы(Об, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	КЦ = ПолучитьКонтактЦентрТекущегоПользователя();
	Если КЦ = ПредопределенноеЗначение("Справочник.КонтактЦентры.ПустаяСсылка") Тогда
		Отказ = Истина;
		Возврат
	Иначе
		ЭтаФорма.КЦ = КЦ;
	КонецЕсли;
	
	ОбновитьФорму();
	КонсольТелефонВыбратьНачало();

	ИмяАктивногоДинамичСписка = "ЗадачиСписокЛояльностьПродаж";	
	ЗадачиСписокЛояльностьПродаж.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Очистить();
	 //Отбор по не выполненным задачам
	 //---------------------------------
	Отб = ЭтаФорма.ЗадачиСписокЛояльностьПродаж.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отб.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Выполнена");
	Отб.ПравоеЗначение	= ЛОЖЬ;
	Отб.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	Отб.Использование		= Истина;	
		
	МоиНастройки_ИспользоватьАвтоподбор = Истина;	
КонецПроцедуры

&НаКлиенте
Функция Позвонить(Команда)	
	// Выполняет звонок на телефонный номер абонента задачи
	
	// Если не выбрана строка динамического списка, значит не знаем телефон, на который нужно звонить
	//-------------------------------------------------------------------------------------------------
	Если (Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные = Неопределено) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЗадачи = Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные;
	
	Если 	ИмяАктивногоДинамичСписка = "ЗадачиСписокЛояльностьПродаж" Тогда	
		SYSAGR = "pr_"+ДанныеЗадачи.СигнатураПродажи;
		Результат = Коммуникации.АбонентВызвать(ЗначенияСервера.ПолучитьЗначениеРеквизита(ТелВнутр,"Код"), ДанныеЗадачи.Телефон, SYSAGR);
		
		Если Результат <> "" Тогда			
			ПоказатьПредупреждение(,"При вызове абонента произошла ошибка",3);
		КонецЕсли;
		ЗадачаЛояльностьПерезвонитьНаСервере(Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные.СигнатураПродажи,Результат);	
		Элементы[ИмяАктивногоДинамичСписка].Обновить();
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
	
&НаСервереБезКонтекста
Процедура ЗадачаПерезвонитьНаСервере(ТелНомер,Результат)
	
	// Получим объект задачи
	//-------------------------------------------------------------------------------------------------
	ТекЗапись = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	ТекЗапись.ДатаЗакрытия = Дата("00010101");
	ТекЗапись.Телефон = СокрЛП(ТелНомер);
	ТекЗапись.Прочитать();
	
	// Если задача получена, то в зависимости от результата сформируем комментарий и дату актуальности
	//-------------------------------------------------------------------------------------------------
	Если (ТекЗапись.Выбран()) Тогда
		ТекДата = ТекущаяДата();
	
		Темп = СокрЛП(ТекЗапись.Комментарий);
		Темп = Темп + ?(ЗначениеЗаполнено(Темп),Символы.ПС,"");
		Темп = Темп + СокрЛП(Формат(ТекДата,"ДЛФ=DDT")) + ", ";
		Темп = Темп + ?(Результат,"Выполнен звонок абоненту","Ошибка при наборе номера абонента");
		
		Если Не ЗначениеЗаполнено(ТекЗапись.ДатаПервогоПерезвона) Тогда 
			ТекЗапись.ДатаПервогоПерезвона = ТекДата;
		КонецЕсли;
		
		ТекЗапись.ДатаАктуальности = ?(Результат,ТекДата + 300,ТекЗапись.ДатаАктуальности);
		ТекЗапись.Комментарий = СокрЛП(Темп);
		ТекЗапись.Записать();
	КонецЕсли;
КонецПроцедуры
	
&НаСервереБезКонтекста
Процедура ЗадачаЛояльностьПерезвонитьНаСервере(СигнатураПродажи, Результат)
	
	// Получим объект задачи
	//-------------------------------------------------------------------------------------------------
	ТекЗапись = РегистрыСведений.ЗадачиЗвонокЛояльности.СоздатьМенеджерЗаписи();
	ТекЗапись.ДатаЗакрытия 		= Дата("00010101");
	ТекЗапись.СигнатураПродажи 	= СигнатураПродажи;
	ТекЗапись.Прочитать();
	
	// Если задача получена, то в зависимости от результата сформируем комментарий и дату актуальности
	//-------------------------------------------------------------------------------------------------
	Если (ТекЗапись.Выбран()) Тогда
		Темп = СокрЛП(ТекЗапись.Комментарий);
		Темп = Темп + ?(ЗначениеЗаполнено(Темп),Символы.ПС,"");
		Темп = Темп + СокрЛП(Формат(ТекущаяДата(),"ДЛФ=DDT")) + ", ";
		Темп = Темп + "Выполнен звонок абоненту";
		ТекЗапись.Комментарий = СокрЛП(Темп);
		ТекЗапись.Записать();
	КонецЕсли;	
КонецПроцедуры
			
&НаКлиенте
Процедура ОбновитьФорму()	
	ВыбранТелефон = ЗначениеЗаполнено(ЭтаФорма.ТелВнутр);
	Элементы.Позвонить.Доступность = ВыбранТелефон;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКонтактЦентрТекущегоПользователя()
	
	КЦ = Справочники.КонтактЦентры.ПустаяСсылка();	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка ИЗ Справочник.КонтактЦентры.Пользователи ГДЕ Пользователь = &Пользователь");
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийПользователь);	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат КЦ
	КонецЕсли;
	Возврат РезультатЗапроса.Выгрузить()[0][0];	
КонецФункции

&НаКлиенте
Процедура ЗадачаОтменить(Команда)
	// Пометим задачу как принудительно закрытую
	
	ИмяЭлемента = ЭтаФорма.ИмяАктивногоДинамичСписка;

	Если Элементы[ИмяЭлемента].ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Элементы[ИмяЭлемента].ТекущиеДанные.ДатаЗакрытия <> Дата("00010101") Тогда
		Возврат
	КонецЕсли;
	
	СписокОтветов =  ПолучиСписокОтветовПричинРучогоЗакрытияЗадачи();
	
	Если СписокОтветов.Количество()=0 Тогда
		ПоказатьПредупреждение(,"Не задан список причин ручного закрытия задач",3);
		Возврат
	КонецЕсли;
	
	ДопПарамОбработчикаОповещения = Новый Структура("Телефон, ИмяЭлемента", Элементы[ИмяЭлемента].ТекущиеДанные.Телефон, ИмяЭлемента); 
	
	Оп = Новый ОписаниеОповещения("ОбработкаОповещения1", ЭтотОбъект, ДопПарамОбработчикаОповещения);
	ПоказатьВыборИзМеню(Оп, СписокОтветов, Команда);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения1(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	//Общая часть - одинаковая для всех закладок
	//------------------------------------------			
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ДатаЗакрытия = ТекущаяДата();

	// Запиши анкету
	Успех = ЗаписатьВыбранныйОтвет_НаСервере(ДатаЗакрытия, ДопПараметры.Телефон);
	Если Не Успех Тогда	
		ПоказатьПредупреждение(, "Ошибка записи анкеты", 3);
	КонецЕсли;

	Элементы[ДопПараметры.ИмяЭлемента].Обновить();	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановиПричинуЗакрытияЗадачи(Телефон, Дата, ВыбЗнач)
	Возврат РегистрыСведений.ЗадачиОбратныйЗвонок.УстановиЗначениеРеквизитаИЗакройЗадачу(Телефон, ТекущаяДата(), "ПричинаЗакрытия",ВыбЗнач, ПараметрыСеанса.ТекущийПользователь); 
КонецФункции

&НаСервереБезКонтекста
Функция ПолучиСписокОтветовПричинРучогоЗакрытияЗадачи()
	
	СписЗнач = Новый СписокЗначений();
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = списзнач;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	АнкетыВариантыОтветов.Ответ
	               |ИЗ
	               |	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
	               |ГДЕ
	               |	АнкетыВариантыОтветов.Ссылка.Родитель.Наименование = &РодительНаименование
	               |	И АнкетыВариантыОтветов.Ссылка.Наименование = &Наименование";
	Запрос.УстановитьПараметр("РодительНаименование", "ПРОЧЕЕ");
	Запрос.УстановитьПараметр("Наименование", "ПРИЧИНЫ РУЧНОГО ЗАКРЫТИЯ ЗАДАЧ");
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписЗнач.Добавить(Выборка.Ответ, Выборка.Ответ);
	КонецЦикла;
	
	Возврат СписЗнач
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучиСписокОтветовПричинРучогоЗакрытияЗадачиЛояльности()
	
	СписЗнач = Новый СписокЗначений();
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = списзнач;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	АнкетыВариантыОтветов.Ответ
	               |ИЗ
	               |	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
	               |ГДЕ
	               |	АнкетыВариантыОтветов.Ссылка.Родитель.Наименование = &РодительНаименование
	               |	И АнкетыВариантыОтветов.Ссылка.Наименование = &Наименование";
	Запрос.УстановитьПараметр("РодительНаименование", "ПРОЧЕЕ");
	Запрос.УстановитьПараметр("Наименование", "ЗАДАЧИ ЛОЯЛЬНОСТИ: ПРИЧИНА РУЧНОГО ЗАКРЫТИЯ");
		
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписЗнач.Добавить(Выборка.Ответ, Выборка.Ответ);
	КонецЦикла;
	
	Возврат СписЗнач
	
КонецФункции

&НаКлиенте
Функция УстановиДатуПервогоПерезвона()
	ТекДанные = ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные;
	Доступно = ТекДанные <> Неопределено;
		
	//Если дата первого перезвона уже заполнена, тогда перезаписывать ее не нужно
	Доступно = Доступно И Не ЗначениеЗаполнено(ТекДанные.ДатаПервогоПерезвона);
	
	Если Не Доступно Тогда
		Сообщить("Ошибка установки даты первого перезвона");
		Сообщить("Телефон абонента =" + ТекДанные.Телефон);
		Сообщить("Дата первого перезвонка ="+ТекДанные.ДатаПервогоПерезвона);
		Возврат "";
	КонецЕсли;
	
	ДатаПервогоПерезвона = ТекущаяДата();
	ИзмениЗначениеРеквизитаЗадачиЛояльности(ТекДанные.СигнатураПродажи, "ДатаПервогоПерезвона", '00010101', ДатаПервогоПерезвона)
КонецФункции

&НаСервере
Процедура ЗаполниТаблицуВопросовТребующихВводОтветов(ИмяАктивногоДинамическогоСписка, СигнатураЗадачи, Контрагент);
		
	Если ТаблицаВопросОтвет.Количество()>0 Тогда
		ТаблицаВопросОтвет.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(Задачи.ДатаЗакрытия) КАК ДатаЗакрытияКакКлюч
	|ПОМЕСТИТЬ ВТ1
	|ИЗ
	|	РегистрСведений.ЗадачиЗвонокЛояльности КАК Задачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Продажи КАК Продажи
	|		ПО Задачи.СигнатураПродажи = Продажи.Сигнатура
	|ГДЕ
	|	Задачи.ДатаЗакрытия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Продажи.Контрагент = &Контрагент
	|	И Задачи.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЗадачи.ЛояльностьПродажАвто)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задачи.СигнатураПродажи КАК СигнатураПродажи
	|ИЗ
	|	РегистрСведений.ЗадачиЗвонокЛояльности КАК Задачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Продажи КАК Продажи
	|		ПО Задачи.СигнатураПродажи = Продажи.Сигнатура
	|ГДЕ
	|	Задачи.ДатаЗакрытия В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ВТ1.ДатаЗакрытияКакКлюч
	|			ИЗ
	|				ВТ1)
	|	И Продажи.Контрагент = &Контрагент
	|	И Задачи.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЗадачи.ЛояльностьПродажАвто)";
	Запрос.УстановитьПараметр("ТекДата",	ЗначенияСервера.ТекущаяДатаСервер());
	Запрос.УстановитьПараметр("Контрагент",	Контрагент);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ПредЗадача = РезультатЗапроса.Выгрузить()[0][0];
	ЭтаФорма.ПредыдущаяЗадача_Сигнатура = ПредЗадача;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ДатаЗакрытия, ПричинаЗакрытия ИЗ РегистрСведений.ЗадачиЗвонокЛояльности ГДЕ СигнатураПродажи = &СигнатураПродажи");
	Запрос.УстановитьПараметр("СигнатураПродажи",	ПредЗадача);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЭтаФорма.ПредыдущаяЗадача_Дата 				= Выборка.ДатаЗакрытия;
		ЭтаФорма.ПредыдущаяЗадача_ПричинаЗакрытия 	= Выборка.ПричинаЗакрытия;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаЛояльностиПродажОтменить(Команда)
	// Пометим задачу как принудительно закрытую
	
	ИмяЭлемента = ЭтаФорма.ИмяАктивногоДинамичСписка;
	
	Если Элементы[ИмяЭлемента].ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Элементы[ИмяЭлемента].ТекущиеДанные.ДатаЗакрытия <> Дата("00010101") Тогда
		Возврат
	КонецЕсли;
	
	СписокОтветов =  ПолучиСписокОтветовПричинРучогоЗакрытияЗадачиЛояльности();
	
	Если СписокОтветов.Количество()=0 Тогда
		ПоказатьПредупреждение(,"Не задан список причин ручного закрытия задач",3);
		Возврат
	КонецЕсли;
	
	ДопПарамОбработчикаОповещения = Новый Структура("Контрагент, СигнатураПродажи, Телефон, ИмяЭлемента", Элементы[ИмяЭлемента].ТекущиеДанные.Контрагент, Элементы[ИмяЭлемента].ТекущиеДанные.СигнатураПродажи, Элементы[ИмяЭлемента].ТекущиеДанные.Телефон, ИмяЭлемента); 
	Оп = Новый ОписаниеОповещения("ОбработкаОповещения2", ЭтотОбъект, ДопПарамОбработчикаОповещения);
	ПоказатьВыборИзМеню(Оп, СписокОтветов, Команда);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения2(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаЗакрытия = ТекущаяДата();
	
	// Закрой мастер-задачу
	//---------------------
	Успех = УстановиПричинуЗакрытияЗадачиЛояльности(ДопПараметры.СигнатураПродажи, ДатаЗакрытия, ВыбЗначОтвет.Значение);
	Если Не Успех Тогда	
		ПоказатьПредупреждение(, "Ошибка закрытия задачи", 3);
	КонецЕсли;
	
	//Закрой слейв-задачи по переданной сигнатуре мастер-задачи
	//---------------------------------------------------------
	Если Успех Тогда
		ЗакройСпакетированныеЗадачиПричинойРучногоЗакрытия(ДопПараметры.СигнатураПродажи, ДатаЗакрытия, ВыбЗначОтвет.Значение)
	КонецЕсли;

	// Обнови динамический список (убери закрытую задачу)
	//---------------------------------------------------
	Элементы[ДопПараметры.ИмяЭлемента].Обновить();
	
КонецПроцедуры

&НаСервере
Функция УстановиПричинуЗакрытияЗадачиЛояльности(СигнатураПродажи, Дата, ВыбЗнач)
	Возврат РегистрыСведений.ЗадачиЗвонокЛояльности.УстановиЗначениеРеквизитаИЗакройЗадачу(СигнатураПродажи, ТекущаяДата(), "ПричинаЗакрытия",ВыбЗнач, ПараметрыСеанса.ТекущийПользователь); 
КонецФункции

&НаКлиенте
Процедура ЛояльностьПродажПоказатьДокумент(Команда)
	Сигнатура = СокрЛП(Элементы.ЗадачиСписокЛояльностьПродаж.ТекущиеДанные.СигнатураПродажи);
	Если Не ЗначениеЗаполнено(Сигнатура) Тогда
		Возврат
	КонецЕсли;		
	ПрефиксБазы = Лев(Сигнатура, 2);
	ГУИД 	  = Прав(Сигнатура, 36);
	ref		  = ОбщегоНазначения.GUID_2_ref(ГУИД);
	//АбсСсылка = "https://mainiis/asc_oper/#e1cib/data/Документ.ЗаказНаряд?ref="+ref; // открыть в web-клиенте
	АбсСсылка = "e1c://server/MainAppM/asc_oper#e1cib/data/Документ.НЭРеализация?ref="+ref;
	ПерейтиПоНавигационнойСсылке(АбсСсылка)
КонецПроцедуры

&НаКлиенте
Процедура ЛояльностьРемонтаПоказатьДокумент(Команда)
	Сигнатура = СокрЛП(ЭтаФорма.Элементы.ЗадачиСписокЛояльностьРемонта.ТекущиеДанные.СигнатураПродажи);
	Если Не ЗначениеЗаполнено(Сигнатура) Тогда
		Возврат
	КонецЕсли;	
	
	Парам = Новый Структура();
	Парам.Вставить("СигнатураПродажи", Сигнатура);
	Фрм = ОткрытьФорму("Обработка.КонсольИсходящихЗвонков.Форма.ФормаНTML", Парам);

КонецПроцедуры

 #Область Изменение_номера_телефона
 &НаКлиенте
Процедура ИсправьТелНомер(Команда)
	
	ТекДанные = ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные;
	
	Доступно = ТекДанные <> Неопределено;
	
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	
	ДопПараметры = Новый Структура("ИмяАктивногоДинамичСписка", ЭтаФорма.ИмяАктивногоДинамичСписка);
	Оп = Новый ОписаниеОповещения("ОбработчикОповещения_ИсправьТелНомер", ЭтотОбъект, ДопПараметры);
	ВыбЗнач = ТекДанные.Телефон;
	ПоказатьВводЗначения(Оп, ВыбЗнач, "Новый номер", Тип("Строка"));	
КонецПроцедуры
 
 &НаКлиенте
 Процедура ОбработчикОповещения_ИсправьТелНомер(ВыбЗнач, ДопПараметры) Экспорт
	 //Выполянет замену номера телефона абонента в активном динамическом списке
	 //ВыбЗнач = новый тел. номер
	 //ДопПараметры - структура, содержащая имя активного динамического списка
	 
	Доступно = ТипЗнч(ВыбЗнач) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(ВыбЗнач);
	Доступно = Доступно И ТипЗнч(ДопПараметры) = Тип("Структура");
	Доступно = Доступно И ДопПараметры <> Неопределено;
		
	ИмяАктивногоСписка =  "";
	ДопПараметры.Свойство("ИмяАктивногоДинамичСписка", ИмяАктивногоСписка);
	
	Доступно = Доступно И ИмяАктивногоСписка <> Неопределено;
	Доступно = Доступно И ЗначениеЗаполнено(ИмяАктивногоСписка);
	
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	
	ВыбЗнач = СокрЛП(ВыбЗнач); // удалим пробелы, ошибочно введенные пользователем
	
	СтароеЗначениеРеквизита = ЭтаФорма.Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные.Телефон;

	Если ИмяАктивногоСписка = "ЗадачиСписокЛояльностьПродаж" Тогда
		Контрагент 			= ЭтаФорма.Элементы[ИмяАктивногоСписка].ТекущиеДанные.Контрагент;
		СигнатураПродажи 	= ЭтаФорма.Элементы[ИмяАктивногоСписка].ТекущиеДанные.СигнатураПродажи;

		Успех = ИзмениЗначениеРеквизитаЗадачиЛояльности(СигнатураПродажи, "Телефон", СтароеЗначениеРеквизита, ВыбЗнач);	
		Если Успех Тогда
			ЭтаФорма.Элементы[ИмяАктивногоСписка].Обновить();
		Иначе
			ПоказатьПредупреждение(, "Не удалось изменить номер", 3);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИсправьТелНомерНаСервере(СтароеЗначение, ВыбЗнач)
	Возврат РегистрыСведений.ЗадачиОбратныйЗвонок.УстановиЗначениеИзмерения(СтароеЗначение, ВыбЗнач);
КонецФункции
#КонецОбласти

&НаСервере
Функция ИзмениЗначениеРеквизитаЗадачиЛояльности(СигнатураПродажи, ИмяРеквизита, СтароеЗначениеРеквизита, ВыбЗнач)
	Возврат РегистрыСведений.ЗадачиЗвонокЛояльности.УстановиЗначениеРеквизита(СигнатураПродажи, ИмяРеквизита, СтароеЗначениеРеквизита, ВыбЗнач);	
КонецФункции

&НаСервере
Функция ИзмениЗначениеРеквизитаЗадачиОбратныйЗвонок(Телефон, ИмяРеквизита, ЗначениеРеквизита)	
	Возврат РегистрыСведений.ЗадачиОбратныйЗвонок.УстановиЗначениеРеквизита(Телефон, ИмяРеквизита, ЗначениеРеквизита);
КонецФункции

&НаКлиенте
Процедура ЗадачиСписокЛояльностьПродажПриАктивизацииСтроки(Элемент)
	
	//Очистить кэш вопросов - ответов
	ЭтаФорма.ТаблицаВопросОтвет.Очистить();
	
	ИмяТекСтраницы = ЭтаФорма.Элементы.ПанельСтраниц.ТекущаяСтраница.Имя;
	ИмяЭлемента = "ЗадачиСписок"+ИмяТекСтраницы;
	
	ТекДанные = Элементы[ИмяЭлемента].ТекущиеДанные;
	Если (ТекДанные = Неопределено) Тогда
		Возврат
	КонецЕсли;
	
	ЭтаФорма.ЗадачаКомментарий = "";
	ЭтаФорма.ПредыдущаяЗадача_Дата 				= "";
	ЭтаФорма.ПредыдущаяЗадача_ПричинаЗакрытия 	= "";
	ЭтаФорма.ПредыдущаяЗадача_Сигнатура			= "";
	
	// Покажи задачи, связанного с этой задачей
	СформируйПодобныеЗадачи(ТекДанные.Товар, ТекДанные.СигнатураПродажи, ТекДанные.Контрагент, ТекДанные.Телефон);		

	// Покажи историю общения
	ПокажиИсториюОбщения(ТекДанные.Телефон, ТекДанные.СигнатураПродажи);
	
	// Загрузим на форму данные анкеты
	ЗаполниТаблицуВопросовТребующихВводОтветов(ИмяЭлемента, ТекДанные.СигнатураПродажи, ТекДанные.Контрагент);	
КонецПроцедуры

&НаСервере
Функция СформируйПодобныеЗадачи(Автомобиль, СигнатураМастерПродажи, КонтрагентМастерПродажи, ТелефонМастерПродажи) 
	
	ЭтаФорма.Объект.Ремонты_ПодобныеЗадачи.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачиЗвонокЛояльности.СигнатураПродажи КАК СигнатураПродажи,
	|	ЗадачиЗвонокЛояльности.Телефон КАК Телефон,
	|	ЗадачиЗвонокЛояльности.Телефоны КАК Телефоны,
	|	ЕСТЬNULL(Продажи.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДок,
	|	ЕСТЬNULL(Продажи.Номер, """") КАК НомерДок,
	|	ЕСТЬNULL(Продажи.ДопДата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗакрытияЗаказНаряда,
	|	ЕСТЬNULL(Продажи.Объект, """") КАК Товар,
	|	ЕСТЬNULL(Продажи.ХарактеристикаОбъекта, """") КАК ВидРемонта,
	|	ЕСТЬNULL(Продажи.Точка, """") КАК ТочкаПродажи,
	|	ЕСТЬNULL(Продажи.КонтактноеЛицо, """") КАК КонтактноеЛицо
	|ИЗ
	|	РегистрСведений.ЗадачиЗвонокЛояльности КАК ЗадачиЗвонокЛояльности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Продажи КАК Продажи
	|		ПО ЗадачиЗвонокЛояльности.СигнатураПродажи = Продажи.Сигнатура
	|ГДЕ
	|	ЗадачиЗвонокЛояльности.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЗадачиЗвонокЛояльности.СигнатураПродажи <> &СигнатураМастерПродажи
	|	И ЕСТЬNULL(Продажи.Вид, """") = ""Продажа авто""
	|	И ЗадачиЗвонокЛояльности.Контрагент = &КонтрагентМастерПродажи
	|	И ЗадачиЗвонокЛояльности.Телефон = &ТелефонМастерПродажи";
	
	Запрос.УстановитьПараметр("СигнатураМастерПродажи", 	СигнатураМастерПродажи);
	Запрос.УстановитьПараметр("КонтрагентМастерПродажи",	КонтрагентМастерПродажи);
	Запрос.УстановитьПараметр("ТелефонМастерПродажи",		ТелефонМастерПродажи);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
		
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ""
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		а = ЭтаФорма.Объект.Ремонты_ПодобныеЗадачи.Добавить();
		ЗаполнитьЗначенияСвойств(а, Выборка);
		а.Спакетировать				= 	Истина;
	КонецЦикла;
КонецФункции
	
&НаСервере
Процедура ПокажиИсториюОбщения(ТелНомер, СигнатураПродажи = "")
	
	ЗадачаИстория.Очистить();
	
	Запрос = Новый Запрос();
	Если МоиНастройки_ТолькоЗвонкиПоЗадачеВИсторииОбщения Тогда
		Запрос.Текст = 	
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	Звонки.Дата КАК Дата,
		|	Звонки.ЭтоВходящий КАК ЭтоВходящий,
		|	ЕСТЬNULL(Иниц.Владелец, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК Оператор,
		|	Звонки.Сигнатура КАК Сигнатура,
		|	Звонки.Принят КАК Принят
		|ИЗ
		|	РегистрСведений.Звонки КАК Звонки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК ЗвонкиСтатОбщая
		|		ПО (ЗвонкиСтатОбщая.Сигнатура = Звонки.Сигнатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК Иниц
		|		ПО (Иниц.Объект = Звонки.Инициатор)
		|ГДЕ
		|	Звонки.АбонентВнешний = &АбонентВнешний
		|	И Звонки.Дата >= &ОпорнаяДата
		|	И Звонки.ЭтоВходящий = ЛОЖЬ
		|	И ЗвонкиСтатОбщая.Основание = &Основание
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";

	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 8
		|	Рег.Дата КАК Дата,
		|	Рег.ЭтоВходящий КАК ЭтоВходящий,
		|	ВЫБОР
		|		КОГДА Рег.ЭтоВходящий
		|			ТОГДА Опер.Владелец
		|		ИНАЧЕ Иниц.Владелец
		|	КОНЕЦ КАК Оператор,
		|	Рег.Сигнатура КАК Сигнатура,
		|	Рег.Принят КАК Принят
		|ИЗ
		|	РегистрСведений.Звонки КАК Рег
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК Иниц
		|		ПО (Иниц.Объект = Рег.Инициатор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК Опер
		|		ПО (Опер.Объект = Рег.АбонентВнутренний)
		|ГДЕ
		|	Рег.АбонентВнешний = &АбонентВнешний
		|	И Рег.Дата >= &ОпорнаяДата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Основание",			"pr_"+СигнатураПродажи);
	Запрос.УстановитьПараметр("АбонентВнешний", 	СокрЛП(ТелНомер));
	Запрос.УстановитьПараметр("ОпорнаяДата",		ДобавитьМесяц(ТекущаяДата(), -3));
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока (Выборка.Следующий()) Цикл			
		Новая= ЭтаФорма.ЗадачаИстория.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Выборка);
	КонецЦикла;	
КонецПроцедуры

#Область ТаблицаВведенныхОтветов
&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВопросАнкеты = Элемент.Родитель.Родитель.ТекущиеДанные.ВопросАнкеты;
	СписокОтветов = ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты);
	ВопросТребуетОбновитьОтвет = Элемент.Родитель.Родитель.ТекущиеДанные.ВопросТребуетОбновитьОтвет;
	Если СписокОтветов.Количество()>0 Тогда
		ДопПарамОбработчикаОповещения = Новый Структура("ВопросАнкеты", ВопросАнкеты); 
		Оп = Новый ОписаниеОповещения("ОбработкаОповещения_ТаблицаВведенныхОтветовОтветНачалоВыбора", ЭтотОбъект, ДопПарамОбработчикаОповещения);
		ПоказатьВыборИзСписка(Оп, СписокОтветов, Элемент);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения_ТаблицаВведенныхОтветовОтветНачалоВыбора(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	НайденныеСтроки = ЭтаФорма.ТаблицаВведенныхОтветов.НайтиСтроки(ДопПараметры); // должны найти одну строку
	Если НайденныеСтроки.Количество()<>1 Тогда
		Возврат
	КонецЕсли;

	НайденныеСтроки[0].ОтветСтрокой = ВыбЗначОтвет.Значение;
	ДобавитьЗаписьВТаблицуВопросОтвет(ДопПараметры.ВопросАнкеты, ВыбЗначОтвет.Значение);
	НайденныеСтроки[0].ФорматТекстаОтвета = 2;
	
КонецПроцедуры

&НаСервере
Функция ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты)
	сзОтветы = Новый СписокЗначений();

	Запрос = Новый Запрос("ВЫБРАТЬ Ответ ИЗ Справочник.Анкеты.ВариантыОтветов ГДЕ Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ВопросАнкеты);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат сзОтветы
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		сзОтветы.Добавить(Выборка.Ответ);
	КонецЦикла;
	Возврат сзОтветы;
		
КонецФункции

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ТекДанные = ЭтаФорма.Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;
	
	//Выход, если вопрос требует не выбора, а ввода ответа
	Если ТекДанные.ВопросТребуетВыбораОтвета Тогда 
		СтандартнаяОбработка=Ложь;
		Возврат
	КонецЕсли;
	
	ТекДанные.ФорматТекстаОтвета = 2;
	ДобавитьЗаписьВТаблицуВопросОтвет(ТекДанные.ВопросАнкеты, Текст);
	Элемент.СписокВыбора.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	//Автоподбор для ответов
	
	Элемент.СписокВыбора.Очистить();	
	Если Не МоиНастройки_ИспользоватьАвтоподбор Тогда
		Возврат
	КонецЕсли;
	
	Текст = СокрЛП(Текст);
	Если СтрДлина(Текст)<=10 Или Ожидание=0 Тогда
		Возврат
	КонецЕсли;
	
	Результат = ТаблицаВведенныхОтветовОтветСтрокойАвтоПодбор_НаСервере(Текст); 
	Если Не ТипЗнч(Результат) = Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Эл Из Результат Цикл
		Элемент.СписокВыбора.Добавить(Эл.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветСтрокойОчистка(Элемент, СтандартнаяОбработка)
	//Замени в кэше вопросов-ответов ответ на ""
	
	ТекДанные 		= Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;
	ВопросАнкеты 	= ТекДанные.ВопросАнкеты;
	ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, "");
КонецПроцедуры
#КонецОбласти

&НаСервере
Процедура ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, Ответ="", ОтветКомментарий = "")	
	
	Отбор 			= Новый Структура("Вопрос", ВопросАнкеты);
	НайденныеСтроки = ЭтаФорма.ТаблицаВопросОтвет.НайтиСтроки(Отбор);
	СтрокаТЧ 		= ?(НайденныеСтроки.Количество()>0, НайденныеСтроки[0], ТаблицаВопросОтвет.Добавить());
	СтрокаТЧ.Вопрос = ВопросАнкеты;   
	
	//Если пользователь ввел/выбрал значение для поля Ответ
	СтрокаТЧ.Ответ  = ?(ЗначениеЗаполнено(Ответ), Ответ, СтрокаТЧ.Ответ); 
	
	//Если пользователь ввел/выбрал значение для поля ОтветКомментарий	
	СтрокаТЧ.ОтветКомментарий = ?(ЗначениеЗаполнено(ОтветКомментарий), ОтветКомментарий, СтрокаТЧ.ОтветКомментарий);	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьАнкету(Команда)
	
	ДатаАнкеты = ТекущаяДата();
	
	Тел = ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные.Телефон;
		
	Доступно = 		ЗначениеЗаполнено(Тел)
				И  	ЭтаФорма.ТаблицаВопросОтвет.Количество()>0;
	Если Не Доступно Тогда
		ПоказатьПредупреждение(, "Запись анкеты невозможна. Не указан телефон абонента или не заполнена анкета", 3);
		Возврат
	КонецЕсли;
	
	// Запиши анкету
	СигнатураПродажи = ""; //значение по умолчанию
	Если ЭтаФорма.ИмяАктивногоДинамичСписка = "ЗадачиСписокЛояльностьПродаж" Тогда
		СигнатураПродажи = ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные.СигнатураПродажи; 	
	КонецЕсли;

	Доступно = ЗаписатьВыбранныйОтвет_НаСервере(ДатаАнкеты, Тел, СигнатураПродажи);
	Если Не Доступно Тогда	
		ПоказатьПредупреждение(, "Ошибка записи анкеты", 3);
	КонецЕсли;
	
	//Закрой задачу. В реквизит ЗвонокЗакрытия запиши или сигнатуру или внутренний номер сотрудника контакт-центра
	Если ЭтаФорма.ИмяАктивногоДинамичСписка = "ЗадачиСписокЛояльностьПродаж" Тогда		
		ЗакройСпакетированныеЗадачи(СигнатураПродажи, ДатаАнкеты);		
	КонецЕсли;
	
	ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].Обновить();
	
КонецПроцедуры

&НаСервере 
Функция ЗакройСпакетированныеЗадачи(СигнатураМастерПродажи, ДатаАнкеты)
	ЗначениеПоУмолчанию = Ложь;
	
	НачатьТранзакцию();
	
	Для Каждого ПодобнаяЗадача Из ЭтаФорма.Объект.Ремонты_ПодобныеЗадачи Цикл
		Если Не ПодобнаяЗадача.Спакетировать Тогда
			Продолжить;				
		КонецЕсли;
		
		Успех = ЗапишиПакетЗадач(СигнатураМастерПродажи, ПодобнаяЗадача.СигнатураПродажи);
		Если Не Успех Тогда
			ОтменитьТранзакцию();	
			Возврат ЗначениеПоУмолчанию;
		КонецЕсли;
		
		Успех = ЗакройЗадачуЛояльностиНаСервере(ПодобнаяЗадача.СигнатураПродажи, ДатаАнкеты);
		Если Не Успех Тогда
			ОтменитьТранзакцию();	
			Возврат ЗначениеПоУмолчанию;
		КонецЕсли;
	КонецЦикла;
	
	Успех = ЗакройЗадачуЛояльностиНаСервере(СигнатураМастерПродажи, ДатаАнкеты);
	Если Не Успех Тогда
		ОтменитьТранзакцию();	
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ЭтаФорма.Объект.Ремонты_ПодобныеЗадачи.Очистить();
	ЗафиксироватьТранзакцию();
	Возврат Истина;
КонецФункции  

Функция ЗакройСпакетированныеЗадачиПричинойРучногоЗакрытия(СигнатураМастерПродажи, ДатаАнкеты, ПричинаРучногоЗакрытия)
	
	НачатьТранзакцию();
	Для Каждого Подобная Из Объект.Ремонты_ПодобныеЗадачи Цикл
		Если Не Подобная.Спакетировать Тогда
			Продолжить;				
		КонецЕсли;
		
		Успех = ЗапишиПакетЗадач(СигнатураМастерПродажи, Подобная.СигнатураПродажи);
		Если Не Успех Тогда
			ОтменитьТранзакцию();	
			Возврат Ложь;
		КонецЕсли;
		
		Успех = ЗакройЗадачуЛояльностиНаСервереПричинойРучногоЗакрытия(Подобная.СигнатураПродажи, ДатаАнкеты, ПричинаРучногоЗакрытия);
		Если Не Успех Тогда
			ОтменитьТранзакцию();	
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
		
	Объект.Ремонты_ПодобныеЗадачи.Очистить();
	ЗафиксироватьТранзакцию();
	Возврат Истина;
КонецФункции


&НаСервере
Функция ЗапишиПакетЗадач(СигнатураМастерЗадачи, СигнатураЗадачи)
	Возврат РегистрыСведений.ЗадачиЛояльностиПакеты.Добавить(СигнатураМастерЗадачи, СигнатураЗадачи);
КонецФункции

&НаСервере
Функция ЗакройЗадачуЛояльностиНаСервереПричинойРучногоЗакрытия(СигнатураПродажи, ДатаАнкеты, ПричинаЗакрытия)
	
	Доступно = 		ТипЗнч(СигнатураПродажи) = Тип("Строка")
				И 	ЗначениеЗаполнено(СигнатураПродажи)
				И 	ТипЗнч(ДатаАнкеты) = Тип("Дата")
				И 	ЗначениеЗаполнено(ДатаАнкеты);
	
	Если Не Доступно Тогда 
		ЗаписьЖурналаРегистрации("ЗакройЗадачуЛояльностиНаСервере()", УровеньЖурналаРегистрации.Ошибка, , СтрШаблон("СигнатураПродажи= %1; ДатаАнкеты= %2", СигнатураПродажи, ДатаАнкеты), "Ошибка в типах или заполнении аргументов");
		Возврат Ложь;
	КонецЕсли;
	
	Успех = РегистрыСведений.ЗадачиЗвонокЛояльности.ЗакрытьПричинойРучногоЗакрытия(СигнатураПродажи, ДатаАнкеты, ПричинаЗакрытия, ,ПараметрыСеанса.ТекущийПользователь);
	Если Не Успех Тогда
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ЗакройЗадачуЛояльностиНаСервере(СигнатураПродажи, ДатаАнкеты)
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	Доступно = ТипЗнч(СигнатураПродажи) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(СигнатураПродажи);
	Доступно = Доступно И ТипЗнч(ДатаАнкеты) = Тип("Дата");
	Доступно = Доступно И ЗначениеЗаполнено(ДатаАнкеты);
	
	Если Не Доступно Тогда 
		Данные = "СигнатураПродажи="+СигнатураПродажи+" ;ДатаАнкеты="+ДатаАнкеты;
		ЗаписьЖурналаРегистрации("ЗакройЗадачуЛояльностиНаСервере()", УровеньЖурналаРегистрации.Ошибка, , Данные, "Ошибка в типах или заполнении аргументов");
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;
	
	ЗначРекв = ЭтаФорма.ТелВнутр.Код;
	Доступно = ЗначениеЗаполнено(ЗначРекв);	
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("ЗакройЗадачуЛояльностиНаСервере()", УровеньЖурналаРегистрации.Ошибка,, ЗначРекв, "Не заполнено значение реквизита");
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	Успех = РегистрыСведений.ЗадачиЗвонокЛояльности.УстановиЗначениеРеквизитаИЗакройЗадачу(СигнатураПродажи, ДатаАнкеты, "ЗвонокЗакрытия", ЗначРекв, ПараметрыСеанса.ТекущийПользователь);
	
	Если Не Успех Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ЗаписатьВыбранныйОтвет_НаСервере(ДатаАнкеты, ТелАбонента, СигнатураЗадачи = "")
	//Эапись в регистр сведений АнкетыРасширенные
	
	Доступно = 		ТипЗнч(ДатаАнкеты) = Тип("Дата")
				И 	ТипЗнч(ТелАбонента) = Тип("Строка")
				И 	ЗначениеЗаполнено(ДатаАнкеты)
				И 	ЗначениеЗаполнено(ТелАбонента);
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПустойИд = Справочники.ИдентификаторыСтрок.ПустаяСсылка();
	
	НЗ = РегистрыСведений.АнкетыРасширенные.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(ДатаАнкеты);
	НЗ.Отбор.Телефон.Установить(ТелАбонента);
	НЗ.Прочитать();
	
	Для Каждого Эл Из ЭтаФорма.ТаблицаВопросОтвет Цикл
		
		//14.07.2017, +, не записываем, если ответ не заполнен
		//-----------------------------------------------------
		Если Не ЗначениеЗаполнено(Эл.Ответ) Тогда
			Продолжить;
		КонецЕсли;
		
		ИдСтрокиВопроса = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Строка(Эл.Вопрос), "вопрос", Строка(Эл.Вопрос));	
		Если ИдСтрокиВопроса = ПустойИд Тогда
			Продолжить
		КонецЕсли;
		
		ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Эл.Ответ, "ответ", Эл.Ответ);
		
		ИдСтрокиОтветКомментарий  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Эл.ОтветКомментарий, "ответ", Эл.ОтветКомментарий);
				
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.Период								=	ДатаАнкеты;
		НоваяЗапись.Телефон 							=	ТелАбонента;
		НоваяЗапись.Вопрос								=	ИдСтрокиВопроса;
		НоваяЗапись.СигнатураЗадачQ						=	СигнатураЗадачи;						
		НоваяЗапись.Ответ								=	ИдСтрокиОтвета;
		НоваяЗапись.ОтветКомментарий					=	ИдСтрокиОтветКомментарий;
		НоваяЗапись.ПорядковыйНомерВопроса 				=	Эл.ПорядковыйНомерВопроса;
	КонецЦикла;
	
	Если НЗ.Количество()>0 Тогда
		Попытка
			НЗ.Записать(Истина);
		Исключение
			ЗаписьЖурналаРегистрации("ЗаписатьВыбранныйОтвет_НаСервере()", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат Ложь;
		КонецПопытки
	КонецЕсли;	
	
	Возврат Истина;	
КонецФункции

#Область Выбор_телефона
&НаКлиенте
Процедура КонсольТелефонВыбратьНачало()
	ОпОбработчикЗакрытияФормыВыбораТелефона = Новый ОписаниеОповещения("КонсольТелефонВыбратьОкончание", ЭтотОбъект);
	ОткрытьФорму("Обработка.КонсольКонтактЦентраТест4.Форма.ФормаВыбораОператора",,ЭтаФорма,,,,ОпОбработчикЗакрытияФормыВыбораТелефона, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура КонсольТелефонВыбратьОкончание(Параметр, ДопПарам) Экспорт

// Проверим заполненность параметров сеанса, отвечающих за регистрацию оператора консоли
// Если параметры заданы, то получим текущее состояние режима "Пауза" для оператора-агента
// Также выполним подключение компоненты телефонии к серверу
//-------------------------------------------------------------------------------------------------
	ОчерСсылка = ЗначенияСервера.ПолучитьЗначениеПараметраСеанса("ККЦОчередь");
	ТелСсылка  = ЗначенияСервера.ПолучитьЗначениеПараметраСеанса("ККЦТелефон");

	Если (ЗначениеЗаполнено(ОчерСсылка) И ЗначениеЗаполнено(ТелСсылка)) Тогда
		ТелВнутр 		= ТелСсылка;
	КонецЕсли;
	ОбновитьФорму();
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ИзменитьНапоминаниеПерезвонить(Команда)
	
	ТекДанные = ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные;
	
	Доступно = ТекДанные <> Неопределено;
	
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	
	ДопПараметры = Новый Структура("ИмяАктивногоДинамичСписка", ЭтаФорма.ИмяАктивногоДинамичСписка);
	Оп = Новый ОписаниеОповещения("ОбработчикОповещения_ИсправьНапоминаниеПерезвонить", ЭтотОбъект, ДопПараметры);
	ВыбЗнач = ТекущаяДата();
	ПоказатьВводЗначения(Оп, ВыбЗнач, "Когда перезвонить:", Тип("Дата"));
	
КонецПроцедуры

 &НаКлиенте
Процедура ОбработчикОповещения_ИсправьНапоминаниеПерезвонить(ВыбЗнач, ДопПараметры) Экспорт
	 //Выполянет замену комментария в активном динамическом списке
	 //ВыбЗнач = новый тел. номер
	 //ДопПараметры - структура, содержащая имя активного динамического списка
	 
	Доступно = ТипЗнч(ВыбЗнач) = Тип("Дата");
	Доступно = Доступно И ЗначениеЗаполнено(ВыбЗнач);
	Доступно = Доступно И ТипЗнч(ДопПараметры) = Тип("Структура");
	Доступно = Доступно И ДопПараметры <> Неопределено;
	
	ИмяАктивногоСписка =  "";
	ДопПараметры.Свойство("ИмяАктивногоДинамичСписка", ИмяАктивногоСписка);
	
	Доступно = Доступно И ИмяАктивногоСписка <> Неопределено;
	Доступно = Доступно И ЗначениеЗаполнено(ИмяАктивногоСписка);
	
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	
	СтароеЗначениеРеквизита = ЭтаФорма.Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные.НапоминаниеПерезвонить;

	Если ИмяАктивногоСписка = "ЗадачиСписокЛояльностьПродаж" Тогда
		СигнатураПродажи 	= ЭтаФорма.Элементы[ИмяАктивногоСписка].ТекущиеДанные.СигнатураПродажи;	
		Успех = ИзмениЗначениеРеквизитаЗадачиЛояльности(СигнатураПродажи, "НапоминаниеПерезвонить", СтароеЗначениеРеквизита, ВыбЗнач);	

		Если Успех Тогда
			Для Каждого ПодобныеЗадачи Из ЭтаФорма.Объект.Ремонты_ПодобныеЗадачи Цикл
				Если ПодобныеЗадачи.Спакетировать Тогда
					ИзмениЗначениеРеквизитаЗадачиЛояльности(ПодобныеЗадачи.СигнатураПродажи, "НапоминаниеПерезвонить", СтароеЗначениеРеквизита, ВыбЗнач);	
				КонецЕсли;
			КонецЦикла;
			ЭтаФорма.Элементы[ИмяАктивногоСписка].Обновить();
		Иначе
			ПоказатьПредупреждение(, "Не удалось изменить реквизит", 3);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаИсторияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Сигнатура) Тогда
		Возврат
	КонецЕсли;
	
	Парам = Новый Структура();
	Парам.Вставить("Сигнатура", Элемент.ТекущиеДанные.Сигнатура);
	
	Если Элемент.ТекущиеДанные.ЭтоВходящий Тогда
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаВходящегоЧтение";
	Иначе
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение";
	КонецЕсли;
	ОткрытьФорму(ИмяОткрываемойФормы, Парам);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДинСписки(Команда)
	ЭтаФорма.Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].Обновить();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТаблицаВведенныхОтветовОтветСтрокойАвтоПодбор_НаСервере(Текст)
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 10 Наименование ИЗ Справочник.ИдентификаторыСтрок ГДЕ НЕ ПометкаУдаления И Наименование ПОДОБНО &Наименование");
	Запрос.УстановитьПараметр("Наименование", "%"+Текст+"%");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь
	КонецЕсли;
	
	МассивОтветов = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
	СписокОтветов = Новый СписокЗначений();
	СписокОтветов.ЗагрузитьЗначения(МассивОтветов);
	
	Возврат СписокОтветов;
КонецФункции

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветКомментарийСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ТекДанные = ЭтаФорма.Элементы.ТаблицаВведенныхОтветов.ТекущиеДанные;	
	ТекДанные.ФорматТекстаОтвета = 2;
	ДобавитьЗаписьВТаблицуВопросОтвет(ТекДанные.ВопросАнкеты, ,Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАнкетуОпроса(Команда)
	//Открывает форму анкеты опроса
	
	Телефон				=	Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные.Телефон;
	СигнатураПродажи	=	Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные.СигнатураПродажи;
	ТочкаПродажи		=	Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные.ТочкаПродажи;
	ДатаЗакрытия		=	Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные.ДатаЗакрытия;

	ЗначРекв = ЗначенияСервера.ПолучитьЗначениеРеквизита(ТелВнутр,"Код");
	
	ПакетЗаказНарядов = Новый СписокЗначений();
	Для Каждого Стр Из Объект.Ремонты_ПодобныеЗадачи Цикл
		Если Стр.Спакетировать = Истина Тогда
			ПакетЗаказНарядов.Добавить(Стр.СигнатураПродажи);	
		КонецЕсли;
	КонецЦикла;
	
	Парам = Новый Структура();
	Парам.Вставить("Телефон", 			Телефон);
	Парам.Вставить("СигнатураПродажи",	СигнатураПродажи);
	Парам.Вставить("ЗвонокЗакрытия",	ЗначРекв);
	Парам.Вставить("ПакетЗаказНарядов",	ПакетЗаказНарядов);
	Парам.Вставить("ТочкаПродажи",      ТочкаПродажи);
	Парам.Вставить("ДатаЗакрытия",		ДатаЗакрытия);
	
	Оп = Новый ОписаниеОповещения("ПриЗакрытииФормыАнкетыОпроса", ЭтаФорма, Новый Структура());
	ОткрытьФорму("Обработка.КонсольИсходящихЗвонковПродажи.Форма.ФормаАнкетыОпроса", Парам, ЭтаФорма, СигнатураПродажи,,, Оп);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыАнкетыОпроса(Парам1, Парам2) Экспорт
	ОчиститьПодобныеЗадачи();
	Элементы[ИмяАктивногоДинамичСписка].Обновить();
КонецПроцедуры

&НаСервере
Функция ОчиститьПодобныеЗадачи()
	Объект.Ремонты_ПодобныеЗадачи.Очистить();	
КонецФункции

#Область Анкета_предыдущей_задачи
&НаКлиенте
Процедура ПоказатьАнкетуПредыдущейЗадачи(Команда)
	ПоказатьАнкетуПредыдущейЗадачиНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ПоказатьАнкетуПредыдущейЗадачиНаСервере()
	Если Не ЗначениеЗаполнено(ПредыдущаяЗадача_Сигнатура) Тогда
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос("ВЫБРАТЬ Сигнатура ИЗ РегистрСведений.ЗадачиЛояльностиПакеты ГДЕ Продажа = &Продажа");
	Запрос.УстановитьПараметр("Продажа",  ПредыдущаяЗадача_Сигнатура);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ПредЗадача = РезультатЗапроса.Выгрузить()[0][0];
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Анкеты.Ссылка КАК ВопросАнкеты,
	|	Анкеты.Наименование КАК ВопросСтрокой,
	|	Анкеты.Порядок КАК Порядок,
	|	ИдентификаторыВопросов.Ссылка КАК ИдВопроса,
	|	РегСрез.Ответ КАК ОтветСтрокой
	|ИЗ
	|	Справочник.Анкеты КАК Анкеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыСтрок КАК ИдентификаторыВопросов
	|		ПО (ИдентификаторыВопросов.МодифицированнаяСтрока = Анкеты.МодифицированнаяСтрока)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, СигнатураЗадачQ = &Задача) КАК РегСрез
	|		ПО (РегСрез.Вопрос = ИдентификаторыВопросов.Ссылка)
	|ГДЕ
	|	Анкеты.Родитель.Наименование = &НаименованиеГруппы
	|	И Анкеты.ЭтоГруппа = ЛОЖЬ
	|	И Анкеты.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Анкеты.Порядок";
	Запрос.УстановитьПараметр("Задача", 			ПредыдущаяЗадача_Сигнатура);
	Запрос.УстановитьПараметр("НаименованиеГруппы", "ЛОЯЛЬНОСТЬ_ПРОДАЖ");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Новая = ТаблицаВведенныхОтветов.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Выборка);
		Новая.ФорматТекстаОтвета = 1;
	КонецЦикла;

КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура МоиНастройки_ТолькоЗвонкиПоЗадачеВИсторииОбщенияПриИзменении(Элемент)
		ТекДанные = Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	// Загрузи на форму данные выбранной задачи
	//-----------------------------------------
	ПокажиИсториюОбщения(ТекДанные.Телефон, ТекДанные.СигнатураПродажи);
КонецПроцедуры


#Область Заметка
&НаКлиенте
Процедура ИсправьЗаметку(Команда)
	
	ТекДанные = Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные;	
	Доступно = ТекДанные <> Неопределено;
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	
	ДопПараметры = Новый Структура("ИмяАктивногоДинамичСписка", ИмяАктивногоДинамичСписка);
	Оп = Новый ОписаниеОповещения("ОбработчикОповещения_ИсправьЗаметку", ЭтотОбъект, ДопПараметры);
	ВыбЗнач = ТекДанные.Заметка;
	ПоказатьВводЗначения(Оп, ВыбЗнач, "Новая заметка", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(1024)));	
КонецПроцедуры

&НаКлиенте
 Процедура ОбработчикОповещения_ИсправьЗаметку(ВыбЗнач, ДопПараметры) Экспорт
	 //Выполянет замену номера телефона абонента в активном динамическом списке
	 //ВыбЗнач = новый тел. номер
	 //ДопПараметры - структура, содержащая имя активного динамического списка
	 
	Доступно = 		ТипЗнч(ВыбЗнач) 	 = Тип("Строка")
				И 	ЗначениеЗаполнено(ВыбЗнач)
				И 	ТипЗнч(ДопПараметры) = Тип("Структура")
				И 	ДопПараметры 		<> Неопределено;
		
	ИмяАктивногоСписка =  "";
	ДопПараметры.Свойство("ИмяАктивногоДинамичСписка", ИмяАктивногоСписка);
	
	Доступно = 		Доступно И ИмяАктивногоСписка <> Неопределено
	 			И 	ЗначениеЗаполнено(ИмяАктивногоСписка);
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	
	// Удали пробелы, ошибочно введенные пользователем
	ВыбЗнач = СокрЛП(ВыбЗнач); 	
	СтароеЗначениеРеквизита = ЭтаФорма.Элементы[ИмяАктивногоДинамичСписка].ТекущиеДанные.Заметка;

	Если ИмяАктивногоСписка = "ЗадачиСписокЛояльностьПродаж" Или ИмяАктивногоСписка = "ЗадачиСписокЛояльностьРемонта" Тогда
		Контрагент 			= Элементы[ИмяАктивногоСписка].ТекущиеДанные.Контрагент;
		СигнатураПродажи 	= Элементы[ИмяАктивногоСписка].ТекущиеДанные.СигнатураПродажи;

		Успех = ИзмениЗначениеРеквизитаЗадачиЛояльности(СигнатураПродажи, "Заметка", СтароеЗначениеРеквизита, ВыбЗнач);	
		Если Успех Тогда
			ЭтаФорма.Элементы[ИмяАктивногоСписка].Обновить();
		Иначе
			ПоказатьПредупреждение(, "Не удалось изменить заметки", 3);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура КоррректировкаСферы(Команда)
	ТекДанные =  Элементы[ЭтаФорма.ИмяАктивногоДинамичСписка].ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.ДатаЗакрытия = '00010101' Тогда
		ПоказатьПредупреждение(, "Задача не закрыта", 5);
		Возврат 
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекДанные.ПричинаЗакрытия) Тогда
		ПоказатьПредупреждение(, "Задача закрыта причиной ручного закрытия", 5);
		Возврат;
	КонецЕсли;
	Парам = Новый Структура();
	Парам.Вставить("СигнатураПродажи",	ТекДанные.СигнатураПродажи);
	ОткрытьФорму("Обработка.КонсольИсходящихЗвонковПродажи.Форма.ФормаКорректировкиСферы", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
