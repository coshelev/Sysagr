&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Элементы.ГрПредприятие.Скрыть();
	
	 #Область Первоначальное_заполнение_анкеты_маршрутизации
	ЗаполниТЧ_АнкетыРекурсивно();
	ЗаполниТЧ_ВыбираемыеОтветы();
	#КонецОбласти

	//Отображение телефона внешнего
	//------------------------------
	Элементы.Дисплей01.Заголовок = Параметры.Телефон + "   " + Параметры.Регион;

	//Отображение канала звонка (внешнего телефона Луидор)
	//-----------------------------------------------------
	Если ЗначениеЗаполнено(Параметры.НомерИНазначениеВнешнегоТелефонаЛуидор) Тогда
		Элементы.Дисплей02.Заголовок = Параметры.НомерИНазначениеВнешнегоТелефонаЛуидор;
	ИначеЕсли (ЗначениеЗаполнено(ЭтаФорма.Параметры.КаналИнициатор)) Тогда
		Элементы.Дисплей02.Заголовок = СокрЛП(ЭтаФорма.Параметры.КаналИнициатор) + "  неизвестный канал";
	Иначе
		Элементы.Дисплей02.Заголовок = "Канал поступления звонка не определен";
	КонецЕсли;
	
	//отображение сайта-отправителя интернет-заявки
	//-------------------------------------------------------------
	Если ЗначениеЗаполнено(Параметры.СайтИнтернетЗаявки) Тогда
		Элементы.Дисплей03.Заголовок = СокрЛП(ЭтаФорма.Параметры.СайтИнтернетЗаявки);		
	КонецЕсли;
		
	//Поиск первого вопроса только по каналу
	//---------------------------------------
	ПервыйВопрос = Справочники.Анкеты.ПустаяСсылка();

	//Для кнопки Домой: не зависимо от того определен/не определен автоматически
	// регион, возвращаемся к вопросу выбора региона
	//---------------------------------------------------------------------------
	ПервыйВопросДляВозвратаДомой = ПервыйВопрос;
	
	Если ЗначениеЗаполнено (ЭтаФорма.Параметры.КаналИнициатор) И ТипЗнч(ЭтаФорма.Параметры.КаналИнициатор)=Тип("СправочникСсылка.ТелВнешние") Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Ссылка КАК Ссылка,
		|	Т.СледующийВопросИлиТелНомер КАК СледующийВопросИлиТелНомер
		|ИЗ
		|	Справочник.Анкеты.ВариантыОтветов КАК Т
		|ГДЕ
		|	НЕ Т.Ссылка.ЭтоГруппа
		|	И Т.Ссылка.Родитель.Наименование = &НаименованиеГруппы
		|	И Т.Ответ ПОДОБНО &Ответ";
		
		Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");
		Запрос.УстановитьПараметр("Ответ", "%"+ЭтаФорма.Параметры.КаналИнициатор.Код+"%");
	  	РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ПервыйВопрос = Выборка.СледующийВопросИлиТелНомер;
			
			//Для кнопки Домой: не зависимо от того определен/не определен автоматически
			// регион, возвращаемся к вопросу выбора региона
			//---------------------------------------------------------------------------
			ПервыйВопросДляВозвратаДомой = Выборка.СледующийВопросИлиТелНомер;

		КонецЕсли;		
	КонецЕсли; 
	
	//<Выбрать первый вопрос (требующий выбор варианта ответа) и варианты ответов для показа>
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.СайтИнтернетЗаявки) Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т.СледующийВопросИлиТелНомер КАК СледующийВопросИлиТелНомер
		|ИЗ
		|	Справочник.Анкеты.ВариантыОтветов КАК Т
		|ГДЕ
		|	НЕ Т.Ссылка.ЭтоГруппа
		|	И Т.Ссылка.Родитель.Наименование = &НаименованиеГруппы
		|	И Т.Ответ ПОДОБНО &Ответ";
		
		Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");
		Запрос.УстановитьПараметр("Ответ", "%автозвонок%");
	  	РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ПервыйВопрос = Выборка.СледующийВопросИлиТелНомер;
			
			//Для кнопки Домой: не зависимо от того определен/не определен автоматически
			// регион, возвращаемся к вопросу выбора региона
			//---------------------------------------------------------------------------
			ПервыйВопросДляВозвратаДомой = Выборка.СледующийВопросИлиТелНомер;
		КонецЕсли;		

		
		Если ЗначениеЗаполнено (ПервыйВопрос) Тогда
				Запрос = Новый Запрос();
				Запрос.Текст = 
				
				"ВЫБРАТЬ
				|	АнкетыВариантыОтветов.СледующийВопросИлиТелНомер КАК ВопросВОтвете
				|ПОМЕСТИТЬ ВТ01
				|ИЗ
				|	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
				|ГДЕ
				|	АнкетыВариантыОтветов.СледующийВопросИлиТелНомер = &ПервыйВопрос
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	АнкетыВариантыОтветов.СледующийВопросИлиТелНомер КАК СледующийВопросИлиТелНомер
				|ИЗ
				|	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
				|ГДЕ
				|	АнкетыВариантыОтветов.Ссылка.ЭтоГруппа = ЛОЖЬ
				|	И АнкетыВариантыОтветов.Ответ = &Ответ
				|	И АнкетыВариантыОтветов.Ссылка В
				|			(ВЫБРАТЬ
				|				ВТ01.ВопросВОтвете
				|			ИЗ
				|				ВТ01)";
				
				Запрос.УстановитьПараметр("ПервыйВопрос", 		ПервыйВопрос);
				Запрос.УстановитьПараметр("Ответ", ЭтаФорма.Параметры.СайтИнтернетЗаявки);
				
				РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();
					ПервыйВопрос = Выборка.СледующийВопросИлиТелНомер;
				КонецЕсли;			
		КонецЕсли;
		
	Иначе //Входящий звонок
		
		//Для входящего определи регион звонящего абонента
		//---------------------------------------------------
		Если ЗначениеЗаполнено (ПервыйВопрос) И ЗначениеЗаполнено(Параметры.Регион) Тогда
				Запрос = Новый Запрос();
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	АнкетыВариантыОтветов.СледующийВопросИлиТелНомер КАК ВопросВОтвете
				|ПОМЕСТИТЬ ВТ01
				|ИЗ
				|	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
				|ГДЕ
				|	АнкетыВариантыОтветов.СледующийВопросИлиТелНомер = &ПервыйВопрос
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	АнкетыВариантыОтветов.Ссылка,
				|	АнкетыВариантыОтветов.СледующийВопросИлиТелНомер
				|ИЗ
				|	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
				|ГДЕ
				|	АнкетыВариантыОтветов.Ссылка.ЭтоГруппа = ЛОЖЬ
				|	И АнкетыВариантыОтветов.Ссылка.Родитель.Наименование = &НаименованиеГруппы
				|	И АнкетыВариантыОтветов.Ответ ПОДОБНО &Ответ
				|	И АнкетыВариантыОтветов.Ссылка В
				|			(ВЫБРАТЬ
				|				ВТ01.ВопросВОтвете
				|			ИЗ
				|				ВТ01)";
				
				Запрос.УстановитьПараметр("ПервыйВопрос", 		ПервыйВопрос);
				Запрос.УстановитьПараметр("НаименованиеГруппы", "МАРШРУТИЗАЦИЯ");		
				Запрос.УстановитьПараметр("Ответ", 				Параметры.Регион+"%");
				
				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();
					ПервыйВопрос = Выборка.СледующийВопросИлиТелНомер;
				КонецЕсли;	
		КонецЕсли;
			
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПервыйВопрос) Тогда
	  	Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ Ссылка ИЗ Справочник.Анкеты ГДЕ Порядок = 1 И НЕ ЭтоГруппа И Родитель.Наименование ПОДОБНО &НаименованиеГруппы";
		Запрос.УстановитьПараметр("НаименованиеГруппы", "%МАРШРУТИЗАЦИЯ%");
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
	
		ПервыйВопрос = РезультатЗапроса.Выгрузить()[0][0];
	КонецЕсли;
	
	ЭтаФорма.Вопрос 						=	ПервыйВопрос;
	ЭтаФорма.ВопросСтрокой 					=	ПервыйВопрос;
	ЭтаФорма.ПервыйВопросДляВозвратаДомой 	=	ПервыйВопросДляВозвратаДомой;
	//</Выбрать первый вопрос (требующий выбор варианта ответа) и варианты ответов для показа>
	
	
	ЭтаФорма.Объект.АнкетаТекущийВопрос.Очистить();
	Отб = Новый Структура();
	Отб.Вставить("Вопрос", ПервыйВопрос);
	Найденные = ЭтаФорма.Объект.АнкетаОтветы.НайтиСтроки(Отб);
	Для Каждого Стр Из Найденные Цикл
		Новая = ЭтаФорма.Объект.АнкетаТекущийВопрос.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Стр);
	КонецЦикла;
	
	//Покажи историю последнего успешного входящего звонка, получи дату последнего звонка и в зависимости от периода времени
	//между ним и текущим звонком покажи ответы на вопросы
	ЭтаФорма.ИсторияПредыдущегоСостоявшегосяЗвонка.Параметры.УстановитьЗначениеПараметра("Телефон", ЭтаФорма.Параметры.Телефон);
	
	//<Заполни таблицу вопросов, требующих ввода ответа, в нее же подтяни ответы из последнего разговора>
	ЗаполниТаблицуВопросовТребующихВводОтветов();
		
	//<Сохранить дату и время начала опроса для заполнения РС/>
	ЭтаФорма.ДатаНачалаОпроса = ТекущаяДата();
	
	//<Покажи историю вопросов-ответов/>
	ЭтаФорма.ИсторияВопросовОтветов.Параметры.УстановитьЗначениеПараметра("Телефон", ЭтаФорма.Параметры.Телефон);
	
	//Используеьтся при записи переводов звонков
	ЭтаФорма.ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	//Найди активную задачу автозвонка по интернет-заявке. Если она есть, то отобрази кнопку причин ручного закрытия
	//---------------------------------------------------------------------------------------------------------------
	Элементы.ЗадачаОтменить.Доступность=Ложь;
	Если ЗначениеЗаполнено(Параметры.СайтИнтернетЗаявки) Тогда	
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Сигнатура КАК Сигнатура ИЗ РегистрСведений.ЗадачиИнтернетЗаявки ГДЕ Телефон = &Телефон И ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1) И Заблокирована = ИСТИНА";
		Запрос.УстановитьПараметр("Телефон", 		Параметры.Телефон);
		ОткрытаяЗадачаАвтозвонка = Запрос.Выполнить();
		Если ОткрытаяЗадачаАвтозвонка.Пустой() = Ложь Тогда
			Элементы.ЗадачаОтменить.Доступность=Истина;		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаписьВТаблицуВопросОтвет(ВопросАнкеты, Ответ)
	
	ПарамОтбора = Новый Структура("Вопрос", ВопросАнкеты);
	НайденныеСтроки = ЭтаФорма.ТаблицаВопросОтвет.НайтиСтроки(ПарамОтбора);
	
	Если НайденныеСтроки.Количество()>0 Тогда
		СтрокаТЧ = НайденныеСтроки[0];
	Иначе
		СтрокаТЧ = ЭтаФорма.ТаблицаВопросОтвет.Добавить();
	КонецЕсли;	
	
	СтрокаТЧ.Вопрос = ВопросАнкеты;
	СтрокаТЧ.Ответ= Ответ;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполниТаблицуВопросовТребующихВводОтветов();
	// Вызывается только в ПриСозданииНаСервере()	
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	Анкеты.Ссылка КАК Вопрос,
	|	Анкеты.Наименование КАК ВопросСтрокой,
	|	Анкеты.Порядок КАК Порядок,
	|	ЕСТЬNULL(ИдентификаторыВопросов.Ссылка, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК ИдВопроса,
	|	Анкеты.ДопускаемоеЧислоОтветов КАК ДопускаемоеЧислоОтветов,
	|	ВЫБОР
	|		КОГДА Анкеты.ПериодНеПоказыватьПредыдущийОтвет = 0
	|			ТОГДА 9999999999
	|		ИНАЧЕ Анкеты.ПериодНеПоказыватьПредыдущийОтвет
	|	КОНЕЦ КАК ПериодНеПоказыватьПредыдущийОтвет
	|ПОМЕСТИТЬ ВТ00_ТекущиеВопросыАнкеты
	|ИЗ
	|	Справочник.Анкеты КАК Анкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыСтрок КАК ИдентификаторыВопросов
	|		ПО (ИдентификаторыВопросов.МодифицированнаяСтрока = Анкеты.МодифицированнаяСтрока)
	|ГДЕ
	|	Анкеты.ПометкаУдаления = ЛОЖЬ
	|	И Анкеты.ЭтоГруппа = ЛОЖЬ
	|	И Анкеты.Родитель.Наименование ПОДОБНО &НаименованиеГруппы
	|	И Анкеты.НеПоказыватьПредыдущийОтвет = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Вопрос,
	|	ИдВопроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыОтветов.Ссылка КАК Вопрос
	|ПОМЕСТИТЬ ВТ01_ВопросыСВыборомОтвета
	|ИЗ
	|	Справочник.Анкеты.ВариантыОтветов КАК ВариантыОтветов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ВариантыОтветов.Ссылка = Анкеты.Вопрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияВопроса.Ссылка КАК Вопрос,
	|	МАКСИМУМ(ИсторияВопроса.Период) КАК ДатаСозданияИлиПоследнегоИзмененияВопроса
	|ПОМЕСТИТЬ ВТ02_ВопросыВозможноТребущиеОбновленияОтвета
	|ИЗ
	|	Справочник.Анкеты.ИсторияВопроса КАК ИсторияВопроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ИсторияВопроса.Ссылка = Анкеты.Вопрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияВопроса.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.Вопрос КАК Вопрос,
	|	МАКСИМУМ(РегГод.Период) КАК ДатаПоследнегоОтвета
	|ПОМЕСТИТЬ ВТ03_РегистрЗаГод
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные КАК РегГод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК ВТ00
	|		ПО РегГод.Вопрос = ВТ00.ИдВопроса
	|ГДЕ
	|	РегГод.Телефон = &Телефон
	|	И РегГод.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ТекущаяДата, ГОД, -1) И &ТекущаяДата
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ00.Вопрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Анкеты.Телефон КАК Телефон,
	|	Анкеты.Вопрос КАК Вопрос,
	|	Анкеты.Номер КАК Номер,
	|	МАКСИМУМ(Анкеты.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ04_КлючиАнкеты
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(
	|			,
	|			Телефон = &Телефон
	|				И Вопрос В
	|					(ВЫБРАТЬ
	|						ВТ00.ИдВопроса
	|					ИЗ
	|						ВТ00_ТекущиеВопросыАнкеты КАК ВТ00)) КАК Анкеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Анкеты.Телефон,
	|	Анкеты.Вопрос,
	|	Анкеты.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Анкеты.Вопрос КАК Вопрос,
	|	Анкеты.Ответ КАК Ответ
	|ПОМЕСТИТЬ ВТ05_ПоследниеОтветы
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(
	|			,
	|			Телефон = &Телефон
	|				И Вопрос В
	|					(ВЫБРАТЬ
	|						ВТ00.ИдВопроса
	|					ИЗ
	|						ВТ00_ТекущиеВопросыАнкеты КАК ВТ00)) КАК Анкеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ04_КлючиАнкеты КАК ВТ04
	|		ПО Анкеты.Телефон = ВТ04.Телефон
	|			И Анкеты.Вопрос = ВТ04.Вопрос
	|			И Анкеты.Номер = ВТ04.Номер
	|			И Анкеты.Период = ВТ04.МаксПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.Вопрос КАК Вопрос,
	|	ВТ00.ВопросСтрокой КАК ВопросСтрокой,
	|	ВТ00.ИдВопроса КАК ИдВопроса,
	|	ВТ00.Порядок КАК Порядок,
	|	ВЫБОР
	|		КОГДА ВТ00.Вопрос = ЕСТЬNULL(ВТ01.Вопрос, ЗНАЧЕНИЕ(Справочник.Анкеты.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВопросТребуетВыбораОтвета,
	|	ВТ00.ДопускаемоеЧислоОтветов КАК ДопускаемоеЧислоОтветов,
	|	ВТ00.ПериодНеПоказыватьПредыдущийОтвет КАК ПериодНеПоказыватьПредыдущийОтвет,
	|	ЕСТЬNULL(ВТ02.ДатаСозданияИлиПоследнегоИзмененияВопроса, &ТекущаяДата) КАК ДатаСозданияИлиПоследнегоИзмененияВопроса,
	|	ЕСТЬNULL(ВТ03.ДатаПоследнегоОтвета, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоследнегоОтвета,
	|	РАЗНОСТЬДАТ(ЕСТЬNULL(ВТ03.ДатаПоследнегоОтвета, ДАТАВРЕМЯ(1, 1, 1)), ЕСТЬNULL(ВТ02.ДатаСозданияИлиПоследнегоИзмененияВопроса, &ТекущаяДата), МЕСЯЦ) КАК ПериодМеждуПоследнимОтветомИВопросом,
	|	РегСрез.Ответ КАК ОтветСтрокой
	|ИЗ
	|	ВТ00_ТекущиеВопросыАнкеты КАК ВТ00
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ01_ВопросыСВыборомОтвета КАК ВТ01
	|		ПО (ВТ01.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ02_ВопросыВозможноТребущиеОбновленияОтвета КАК ВТ02
	|		ПО (ВТ02.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ03_РегистрЗаГод КАК ВТ03
	|		ПО (ВТ03.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ05_ПоследниеОтветы КАК РегСрез
	|		ПО (РегСрез.Вопрос = ВТ00.ИдВопроса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ00.Порядок";
	
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());	
	Запрос.УстановитьПараметр("Телефон", ЭтаФорма.Параметры.Телефон);
	Запрос.УстановитьПараметр("НаименованиеГруппы", "%АНКЕТА%");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НормативныйПериодОбновленияОтветаНаВопрос 	=	Выборка.ПериодНеПоказыватьПредыдущийОтвет;
		МодульПериодаМеждуПоследнимОтветомИВопросом =	Выборка.ПериодМеждуПоследнимОтветомИВопросом;
			
		Если МодульПериодаМеждуПоследнимОтветомИВопросом < 0 Тогда
			МодульПериодаМеждуПоследнимОтветомИВопросом = (-1)*МодульПериодаМеждуПоследнимОтветомИВопросом;
		КонецЕсли;
		
		НоваяСтрока = ЭтаФорма.ТаблицаВведенныхОтветов.Добавить();
		НоваяСтрока.ВопросАнкеты 				=	Выборка.Вопрос;
		НоваяСтрока.ВопросСтрокой 				=	Выборка.ВопросСтрокой;
		НоваяСтрока.ВопросТребуетВыбораОтвета	=	Выборка.ВопросТребуетВыбораОтвета;
		НоваяСтрока.ДопускаемоеЧислоОтветов		=	Выборка.ДопускаемоеЧислоОтветов;
		
		Если МодульПериодаМеждуПоследнимОтветомИВопросом > НормативныйПериодОбновленияОтветаНаВопрос Тогда 
			НоваяСтрока.ВопросТребуетОбновитьОтвет = ИСТИНА;
		Иначе
			НоваяСтрока.ОтветСтрокой  = Выборка.ОтветСтрокой;	
			
			//Форматирование текста ответа: ответ серым цветом, если есть ранее полученный ответ, иначе черным
			//-------------------------------------------------------------------------------------------------
			Доступно = ЗначениеЗаполнено(Выборка.ОтветСтрокой);
			НоваяСтрока.ФорматТекстаОтвета = ?(Доступно, 1, 2);				
		КонецЕсли;
					
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВыбранныйОтвет_НаСервере()
	// Вызывается только ПриЗакрытии()

	Анкета.Записать(ЭтаФорма.ДатаНачалаОпроса, ЭтаФорма.Параметры.Телефон, ЭтаФорма.ТаблицаВопросОтвет, ЭтаФорма.Параметры.Сигнатура);
	
	//Если СтрДлина(ЭтаФорма.Параметры.Телефон)=0 Тогда
	//	Возврат
	//КонецЕсли;
	//
	//Если ЭтаФорма.ТаблицаВопросОтвет.Количество()=0 Тогда
	//	Возврат
	//КонецЕсли;
	//
	//ПустойИд = Справочники.ИдентификаторыСтрок.ПустаяСсылка();
	//
	//НЗ = РегистрыСведений.АнкетыРасширенные.СоздатьНаборЗаписей();
	//НЗ.Отбор.Период.Установить(ЭтаФорма.ДатаНачалаОпроса);
	//НЗ.Отбор.Телефон.Установить(ЭтаФорма.Параметры.Телефон);
	//НЗ.Прочитать();
	//
	////<Запись ответов на вопросы  и самих вопросов анкеты. Вопросы маршрутизации записываются в момент выбора строки списка>
	//Для Каждого СтрТЗ Из ЭтаФорма.ТаблицаВопросОтвет Цикл
	//	
	//	//14.07.2017,+, не записывать не заполненные ответы
	//	//--------------------------------------------------
	//	Если Не ЗначениеЗаполнено(СтрТЗ.Ответ) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	ИдСтрокиВопроса = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Строка(СтрТЗ.Вопрос), "вопрос", Строка(СтрТЗ.Вопрос));
	//	Если ИдСтрокиВопроса = ПустойИд Тогда
	//		Продолжить
	//	КонецЕсли;
	//	
	//	//Если на вопрос получен только один ответ
	//	//---------------------------------------------------------------------------------------------------------------
	//	Если СтрЧислоВхождений(СтрТЗ.Ответ, "|") = 0 Тогда
	//		
	//		ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(СтрТЗ.Ответ, "ответ", СтрТЗ.Ответ);
	//		Если ИдСтрокиОтвета = ПустойИд Тогда
	//			Продолжить
	//		КонецЕсли;
	//	
	//		НоваяЗапись				= НЗ.Добавить();
	//		НоваяЗапись.Период		= ЭтаФорма.ДатаНачалаОпроса;
	//		НоваяЗапись.Телефон		= ЭтаФорма.Параметры.Телефон;
	//		НоваяЗапись.Вопрос		= ИдСтрокиВопроса;
	//		НоваяЗапись.Ответ		= ИдСтрокиОтвета;
	//		НоваяЗапись.Сигнатура	= ЭтаФорма.Параметры.Сигнатура;
	//		
	//	//Если на вопрос получено несколько ответов
	//	//---------------------------------------------------------------------------------------------------------------	
	//	Иначе
	//		МасСтрок = СтрРазделить(СтрТЗ.Ответ, "|",Ложь);
	//		Счетчик = 0;
	//		Для Каждого Стр Из МасСтрок Цикл
	//			Счетчик 		= Счетчик+1;
	//			Отв 			= СокрЛП(Стр);
	//			ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Стр, "ответ", Стр);
	//		Если ИдСтрокиОтвета = ПустойИд Тогда
	//			Продолжить
	//		КонецЕсли;
	//	
	//		НоваяЗапись				= НЗ.Добавить();
	//		НоваяЗапись.Период		= ЭтаФорма.ДатаНачалаОпроса;
	//		НоваяЗапись.Телефон		= ЭтаФорма.Параметры.Телефон;
	//		НоваяЗапись.Вопрос		= ИдСтрокиВопроса;
	//		НоваяЗапись.Номер		= Счетчик;
	//		НоваяЗапись.Ответ		= ИдСтрокиОтвета;
	//		НоваяЗапись.Сигнатура	= ЭтаФорма.Параметры.Сигнатура;

	//		КонецЦикла;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	////</Запись ответов на вопросы и самих вопросов>
	//
	//Если НЗ.Количество()>0 Тогда
	//	Попытка
	//		НЗ.Записать(Истина);
	//	Исключение
	//		Сообщить(ОписаниеОшибки());
	//	КонецПопытки
	//КонецЕсли;
	//
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	// Индекс строки	
	Инд = ЭтаФорма.Элементы.ТаблицаВведенныхОтветов.ТекущаяСтрока;
	
	Если ЭтаФорма.ТаблицаВведенныхОтветов[Инд].ВопросТребуетВыбораОтвета Тогда
		СтандартнаяОбработка=Ложь;
		Возврат
	КонецЕсли;
	
	//<Измени шрифтответа на вопрос, уже полученный при предыдущем разговоре,  на темный>
	ЭтаФорма.ТаблицаВведенныхОтветов[Инд].ФорматТекстаОтвета = 2;

	//<Добавь запись в кэш вопрос-ответ>	
	ДобавитьЗаписьВТаблицуВопросОтвет(ЭтаФорма.ТаблицаВведенныхОтветов[Инд].ВопросАнкеты, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВведенныхОтветовОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВопросАнкеты = Элемент.Родитель.Родитель.ТекущиеДанные.ВопросАнкеты;
	СписокОтветов = ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты);
	ВопросТребуетОбновитьОтвет = Элемент.Родитель.Родитель.ТекущиеДанные.ВопросТребуетОбновитьОтвет;
	

	Если СписокОтветов.Количество()>0 Тогда
		ДопПарамОбработчикаОповещения = Новый Структура("ВопросАнкеты", ВопросАнкеты); 
		Оп = Новый ОписаниеОповещения("ОбработкаОповещения1", ЭтотОбъект, ДопПарамОбработчикаОповещения);
		ПоказатьВыборИзСписка(Оп, СписокОтветов, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения1(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	НайденныеСтроки = ЭтаФорма.ТаблицаВведенныхОтветов.НайтиСтроки(ДопПараметры); // должны найти одну строку
	Если НайденныеСтроки.Количество()<>1 Тогда
		Возврат
	КонецЕсли;
	
	НайденнаяСтрока = НайденныеСтроки[0];

	//Если не было других ответов на этот же вопрос, или вопрос допускает только один ответ
	//--------------------------------------------------------------------------------------
	Если НайденнаяСтрока.ОтветСтрокой = "" Тогда
		НайденнаяСтрока.ОтветСтрокой = ВыбЗначОтвет.Значение;
	Иначе
		
		//Если вопрос допускает только один ответ (значения 0 и 1 равнозначны, означают только один ответ)
		//------------------------------------------------------------------------------------------------------	
		Если НайденнаяСтрока.ДопускаемоеЧислоОтветов = 0 ИЛИ   НайденнаяСтрока.ДопускаемоеЧислоОтветов = 1 Тогда
			НайденнаяСтрока.ОтветСтрокой = ВыбЗначОтвет.Значение;	
		Иначе
			НайденнаяСтрока.ОтветСтрокой = НайденнаяСтрока.ОтветСтрокой+" | "+ВыбЗначОтвет.Значение;	
		КонецЕсли;		
	КонецЕсли;
	ДобавитьЗаписьВТаблицуВопросОтвет(ДопПараметры.ВопросАнкеты, НайденнаяСтрока.ОтветСтрокой);
	НайденнаяСтрока.ФорматТекстаОтвета = 2;
	
КонецПроцедуры

&НаСервере
Функция ТаблицаВведенныхОтветов_ПолучиСписокОтветов_НаСервере(ВопросАнкеты)	
	сзОтветы = Новый СписокЗначений();
	Отб = Новый Структура();
	Отб.Вставить("Вопрос", ВопросАнкеты);
	Найденные = ЭтаФорма.Объект.ВыбираемыеОтветы.НайтиСтроки(Отб);
	
	ПустаяСсылка = ПредопределенноеЗначение("Справочник.Файлы.ПустаяСсылка");
	Для Каждого Стр Из Найденные Цикл
		Если Стр.Картинка <> ПустаяСсылка Тогда
			Об = Стр.Картинка.ПолучитьОбъект();
			Двоичные = Об.Содержимое.Получить();
			Картинка = Новый Картинка(Двоичные);
			Предс = Новый ФорматированнаяСтрока(Стр.Ответ, Новый Шрифт(,+2), , Новый Цвет(1,1,1));
			сзОтветы.Добавить(Стр.Ответ, Предс,, Картинка);	
		Иначе
			//сзОтветы.Добавить(Стр.Ответ, Стр.Ответ,, БиблиотекаКартинок.ШарикСиний);
			сзОтветы.Добавить(Стр.Ответ, Стр.Ответ);
		КонецЕсли;
	КонецЦикла;
	Возврат сзОтветы;
КонецФункции

&НаКлиенте
Процедура Назад(Команда)
	//Обработка гиперссылки Назад в маршрутных вопросах>

	ЭтаФорма.Объект.АнкетаТекущийВопрос.Очистить();
	Отб = Новый Структура();
	Отб.Вставить("Вопрос", ЭтаФорма.ПервыйВопросДляВозвратаДомой);
	Найденные = ЭтаФорма.Объект.АнкетаОтветы.НайтиСтроки(Отб);
	Для Каждого Стр Из Найденные Цикл
		Новая = ЭтаФорма.Объект.АнкетаТекущийВопрос.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Стр);
	КонецЦикла;

	//Покажи первый вопрос, с которого начиналась анкета
	//------------------------------------------------------------
	ЭтаФорма.ВопросСтрокой = ЭтаФорма.ПервыйВопросДляВозвратаДомой;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьВыбранныйОтвет_НаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Предприятие_СправочникПриАктивизацииСтроки(Элемент)
	
// Отобразим все телефоны текущего выбранного элемента справочника
//-------------------------------------------------------------------------------------------------
	ТекСсылка = ?(Элемент.ТекущиеДанные = Неопределено,Неопределено,Элемент.ТекущиеДанные.Ссылка);
	СправочникЭлементПолучитьТелефоны(ТекСсылка);
КонецПроцедуры

&НаСервере
Процедура СправочникЭлементПолучитьТелефоны(ТекСсылка)

// Если переданная ссылка не пустая
// Получим все телефоны закрепленные за объектом
//-------------------------------------------------------------------------------------------------
	ЭтаФорма.Предприятие_Телефоны.Очистить();

	Если (ЗначениеЗаполнено(ТекСсылка)) Тогда
		ТЗТемп = Телефония.ТелефоныВладельцаПолучить(ТекСсылка);

		Для Каждого ТекСтрока Из ТЗТемп Цикл
			НовСтрока = ЭтаФорма.Предприятие_Телефоны.Добавить();
			НовСтрока.Ссылка = ТекСтрока.Телефон;
			НовСтрока.Тип = СокрЛП(ТекСтрока.Тип);
			НовСтрока.Atxfer = СокрЛП(ТекСтрока.Телефон);
			НовСтрока.Redirect = СокрЛП(ТекСтрока.Телефон);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Предприятие_ТелефоныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// Если консоль находится в режиме ожидания, то выполним вызов выбранного номера
	// Во всех остальных случаях (режим разговора) - выполним переадресацию в зависимости от команды
	Доступно = (Поле.Имя = "Предприятие_ТелефоныAtxfer");
	Доступно = Доступно ИЛИ (Поле.Имя = "Предприятие_ТелефоныRedirect");
	Доступно = Доступно И (Элементы.Предприятие_Телефоны.ТекущиеДанные <> Неопределено);
	СтандартнаяОбработка = Ложь;

	Если (Доступно = Ложь) Тогда
		Возврат;
	КонецЕсли;

	// Получим номер для переадресации
	ТелНомер = ВРег(СокрЛП(Элементы.Предприятие_Телефоны.ТекущиеДанные.Redirect));
	
	// Выполним команду
	Если (Поле.Имя = "Предприятие_ТелефоныAtxfer") Тогда
		Результат = КонтактЦентр.КомандаAtxfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	ИначеЕсли (Поле.Имя = "Предприятие_ТелефоныRedirect") Тогда
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	КонецЕсли;

	// Выведем сообщение о результате
	Если (Результат = Ложь) Тогда
		ПоказатьПредупреждение(,"Ошибка при наборе номера абонента",3);
	КонецЕсли;

	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Скрой кнопки в командной панели, кроме строки поиска для справочника Предприятие
	//ЭтаФорма.Элементы.Предприятие_Справочник.КоманднаяПанель.ПодчиненныеЭлементы.Получить(0).Видимость=Ложь;
	//ЭтаФорма.Элементы.Предприятие_Справочник.КоманднаяПанель.ПодчиненныеЭлементы.Получить(1).Видимость=Ложь;
	//ЭтаФорма.Элементы.Предприятие_Справочник.КоманднаяПанель.ПодчиненныеЭлементы.Получить(2).Видимость=Ложь;
	//ЭтаФорма.Элементы.Предприятие_Справочник.КоманднаяПанель.ПодчиненныеЭлементы.Получить(3).Видимость=Ложь;
	//ЭтаФорма.Элементы.Предприятие_Справочник.КоманднаяПанель.ПодчиненныеЭлементы.Получить(4).Видимость=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПредыдущегоСостоявшегосяЗвонкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Если консоль находится в режиме ожидания, то выполним вызов выбранного номера
	// Во всех остальных случаях (режим разговора) - выполним переадресацию в зависимости от команды
	Доступно = (Поле.Имя = "ИсторияЗвонкаAtxfer");
	Доступно = Доступно ИЛИ (Поле.Имя = "ИсторияЗвонкаRedirect");
	Доступно = Доступно И (Элементы.ИсторияПредыдущегоСостоявшегосяЗвонка.ТекущиеДанные <> Неопределено);
	СтандартнаяОбработка = Ложь;

	Если (Доступно = Ложь) Тогда
		Возврат;
	КонецЕсли;

	// Получим номер для переадресации
	ТелНомер = ВРег(СокрЛП(Элементы.ИсторияПредыдущегоСостоявшегосяЗвонка.ТекущиеДанные.ТелефонАбонента));
	
	// Выполним команду
	Если (Поле.Имя = "ИсторияЗвонкаAtxfer") Тогда
		Результат = КонтактЦентр.КомандаAtxfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	ИначеЕсли (Поле.Имя = "ИсторияЗвонкаRedirect") Тогда
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, ТелНомер);
	КонецЕсли;

	// Выведем сообщение о результате
	Если (Результат = Ложь) Тогда
		ПоказатьПредупреждение(,"Ошибка при наборе номера абонента",3);
	КонецЕсли;

	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура АнкетаТекущийВопросВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = ЭтаФорма.Элементы.АнкетаТекущийВопрос.ТекущиеДанные;
	СледующееДействие 			=  	ТекДанные.СледующееДействие;
	СледюущееДействиеКод 		= 	ТекДанные.СледующееДействиеКод;
	ТипЗначенияОтвета			=	ТипЗнч(СледующееДействие);
	
	Если Не ЗначениеЗаполнено(СледующееДействие) Тогда
		Возврат
	КонецЕсли;
	
	//Запиши вопрос-ответ в кэш, в зависимости от настроек вопроса (сохраняемый или нет)
	//-------------------------------------------------------------------------------------------------------
	//Если ЭтаФорма.Элементы.Список.ТекущиеДанные.ЗаписыватьОтвет Тогда
	//	ДобавитьЗаписьВТаблицуВопросОтвет(ЭтаФорма.Вопрос, ЭтаФорма.Элементы.Список.ТекущиеДанные.Ответ)
	//КонецЕсли;
	
	//Выбери следующее действие: переход к следующему вопросу, перевод с уведомлением, перевод без уведомления
	//--------------------------------------------------------------------------------------------------------	
	Если  ТипЗначенияОтвета = Тип("СправочникСсылка.Анкеты") Тогда
		
		
		//Покажи следующий вопрос в таблице
		//------------------------------------------------------------
		ЭтаФорма.Объект.АнкетаТекущийВопрос.Очистить();
		Отб = Новый Структура();
		Отб.Вставить("Вопрос", СледующееДействие);
		Найденные = ЭтаФорма.Объект.АнкетаОтветы.НайтиСтроки(Отб);
		Для Каждого Стр из Найденные Цикл
			Новая = ЭтаФорма.Объект.АнкетаТекущийВопрос.Добавить();
			ЗаполнитьЗначенияСвойств(Новая, Стр);
		КонецЦикла;
		
		//Покажи новый вопрос в шапке
		ЭтаФорма.Вопрос 		= СледующееДействие;
		ЭтаФорма.ВопросСтрокой 	= СледующееДействие;

		
	ИначеЕсли ТипЗначенияОтвета = Тип("СправочникСсылка.ТелВнутренние") 
		И ЗначениеЗаполнено(ЭтаФорма.Параметры.КаналСистемный) 
		Тогда
		
		//Для отправки письма
		//--------------------

		Оповестить("ПоследнийНабранныйНомерВнутрАбонента", СледюущееДействиеКод, ЭтаФорма);

		Результат = КонтактЦентр.КомандаAtxfer(ЭтаФорма.Параметры.КаналСистемный, СледюущееДействиеКод);
		//ТекстСообщения = ?(Результат,"Перевод выполнен","Ошибка перевода звонка");
		//ПоказатьПредупреждение(,ТекстСообщения,3);		
		КонтактЦентрСервер.ПереводЗвонка(ТекущийПользователь, СледующееДействие);
		
		Оповестить("ПоследнийНабранныйНомерВнутрАбонента", СледюущееДействиеКод, ЭтаФорма);
		ЭтаФорма.Закрыть();
		
	ИначеЕсли ТипЗначенияОтвета = Тип("СправочникСсылка.ТелОчереди")
		И ЗначениеЗаполнено(ЭтаФорма.Параметры.КаналСистемный)  
		Тогда

		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, СледюущееДействиеКод);
		//ТекстСообщения = ?(Результат,"Перевод выполнен","Ошибка перевода звонка");
		//ПоказатьПредупреждение(,ТекстСообщения,3);
		КонтактЦентрСервер.ПереводЗвонка(ТекущийПользователь, СледующееДействие);
		ЭтаФорма.Закрыть();
	ИначеЕсли ТипЗначенияОтвета = Тип("СправочникСсылка.ВиртуальныеОчереди") Тогда
		Агент = ПолучиАгентаВиртуальнойОчереди(СледующееДействие);
		Если Агент.Телефон= "0000" Тогда
			    ТекстСообщения = "Ошибка автоматического определения агента";
				ПоказатьПредупреждение(,ТекстСообщения,3);
				ЭтаФорма.Закрыть();
		КонецЕсли;
			
		Результат = КонтактЦентр.КомандаBlindTransfer(ЭтаФорма.Параметры.КаналСистемный, Агент.Телефон);
		//ТекстСообщения = ?(Результат,"Перевод выполнен","Ошибка перевода звонка");
		//ПоказатьПредупреждение(,ТекстСообщения,3);
		
		Если Результат = Истина Тогда
			Переведено = ПереводУказателяАгентовВперед(СледующееДействие, Агент.НомерВСписке);	
			Если Переведено = Ложь Тогда
					ТекстСообщения ="Ошибка перевода указателя агентов";
					ПоказатьПредупреждение(,ТекстСообщения,3);
			КонецЕсли;
		КонецЕсли;
		КонтактЦентрСервер.ПереводЗвонка(ТекущийПользователь, СледующееДействие);
		ЭтаФорма.Закрыть();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучиАгентаВиртуальнойОчереди(ВиртуальнаяОчередь)
	//Возвращает телефонный номер агента виртуальной очереди для приема текущего звонка
	// и сдвигает указатель агентов вперед
	//Вызов из АнкетаТекущийВопросВыбор()
	
	Структ = Новый Структура();
	Структ.Вставить("Телефон"	  , "0000");
	Структ.Вставить("НомерВСписке", 0);       //Позиция агента в табличной части Справочник.ВиртуальныеОчереди.Состав
		
	ЗначениеПоУмолчанию = Структ;
	
	Доступно = ТипЗнч(ВиртуальнаяОчередь) = Тип("СправочникСсылка.ВиртуальныеОчереди");
	Если Не Доступно Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	//Получи телефонный номер агента (это может быть или телефон очереди или телефон сотрудника)-планового получателя данного вызова
	//---------------------------------------------------------------------------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВиртуальныеОчередиСостав.Агент.Код КАК ТелНомер
	|ИЗ
	|	Справочник.ВиртуальныеОчереди.Состав КАК ВиртуальныеОчередиСостав
	|ГДЕ
	|	ВиртуальныеОчередиСостав.Ссылка = &Ссылка
	|	И ВиртуальныеОчередиСостав.НомерСтроки = &НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", ВиртуальнаяОчередь);
	
	НомерСтроки = 1;
	Если ВиртуальнаяОчередь.НомерТекущегоАгентаВСписке > 1 Тогда
		НомерСтроки = ВиртуальнаяОчередь.НомерТекущегоАгентаВСписке;	
	КонецЕсли;
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос, ПараметрыСеанса.ТекущийПользователь);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ТелНомер = Выборка.ТелНомер;	
	Если ТелНомер = "" Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Структ.Вставить("Телефон"	   , ТелНомер);
	Структ.Вставить("НомерВСписке" , НомерСтроки);		
	Возврат Структ;

КонецФункции

&НаСервере
Функция ПереводУказателяАгентовВперед(ВиртуальнаяОчередь, НомерВСписке)
	
	ЗначениеПоУмолчанию = Ложь;
	Результат = ЗначениеПоУмолчанию;
	
	СледующийНомер = НомерВСписке + 1;

	//Если следующий номер выходит за конец списка тогда помести в начало
	//------------------------------------------------------------------
	Если СледующийНомер > ВиртуальнаяОчередь.Состав.Количество() Тогда
		СледующийНомер = 1;
	КонецЕсли;
	
	Об = ВиртуальнаяОчередь.ПолучитьОбъект();
	Об. НомерТекущегоАгентаВСписке = СледующийНомер;
	Попытка
		Об.Записать();
	Исключение
		Данные= "ВиртуальнаяОчередь = "+ВиртуальнаяОчередь+"; НомерВСписке = "+ НомерВСписке;
		Комментарий = ОписаниеОшибки();
		ОбслуживаниеСервер.ЗарегистрироватьСобытие("ПереводУказателяАгентовВперед", УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.ВиртуальныеОчереди, Данные, Комментарий);
		Возврат ЗначениеПоУмолчанию;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

#Область Первоначальное_заполнение_анкеты_маршрутизации
&НаСервере
Процедура ЗаполниТЧ_АнкетыРекурсивно() Экспорт
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Ссылка КАК Вопрос,
		|	Т.ВариантыОтветов.(
		|		Ответ КАК Ответ,
		|		СледующийВопросИлиТелНомер КАК СледующееДействие,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(Т.ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.Анкеты)
		|				ТОГДА 1
		|			КОГДА ТИПЗНАЧЕНИЯ(Т.ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.ТелВнутренние)
		|				ТОГДА 2
		|			КОГДА ТИПЗНАЧЕНИЯ(Т.ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.ТелОчереди)
		|				ТОГДА 3
		|			КОГДА ТИПЗНАЧЕНИЯ(Т.ВариантыОтветов.СледующийВопросИлиТелНомер) = ТИП(Справочник.ВиртуальныеОчереди)
		|				ТОГДА 4
		|		КОНЕЦ КАК СледующееДействиеТип,
		|		СледующийВопросИлиТелНомер.Код КАК СледующееДействиеКод,
		|		НомерСтроки КАК НомерСтроки,
		|		Характеристика КАК Характеристика
		|	) КАК ВариантыОтветов
		|ИЗ
		|	Справочник.Анкеты КАК Т
		|ГДЕ
		|	Т.ЭтоГруппа = ЛОЖЬ
		|	И Т.Родитель.Код = ""000000013""
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вопрос,
		|	НомерСтроки";
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		ТЗ = Рез.Выгрузить();
		
		Для Каждого Стр1 Из ТЗ Цикл
			НовыйВопрос = Объект.АнкетаВопросы.Добавить();
			НовыйВопрос.Вопрос = Стр1.Вопрос;
			Для Каждого Стр2 из Стр1.ВариантыОтветов Цикл	
				НовыйОтвет 						= Объект.АнкетаОтветы.Добавить();
				НовыйОтвет.Вопрос 				= НовыйВопрос.Вопрос;
				ЗаполнитьЗначенияСвойств(НовыйОтвет, Стр2);
			КонецЦикла;
		КонецЦикла;
		
	КонецПроцедуры
	
&НаСервере	
Процедура ЗаполниТЧ_ВыбираемыеОтветы() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ Т.Ссылка КАК Вопрос, Т.Ответ КАК Ответ, Т.Картинка КАК Картинка ИЗ Справочник.Анкеты.ВариантыОтветов КАК Т ГДЕ Т.Ссылка.Родитель.Код = ""000000014""");
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		Новая = Объект.ВыбираемыеОтветы.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Выб);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область РучноеЗакрытиеЗадачиАвтозвонка
&НаКлиенте
Процедура ЗадачаОтменить(Команда)
	СписокОтветов =  ПолучиСписокОтветовПричинРучогоЗакрытияЗадачи("ПРИЧИНЫ РУЧНОГО ЗАКРЫТИЯ ИНТЕРНЕТ-ЗАЯВКИ");	
	Если СписокОтветов.Количество()=0 Тогда
			ПоказатьПредупреждение(,"Не задан список причин ручного закрытия задач",3);
			Возврат
	КонецЕсли;
		
	//Общая часть - одинаковая для всех закладок
	//-----------------------------------------------------------------------------------------------------------
	ДопПарамОбработчикаОповещения = Новый Структура("Телефон", Параметры.Телефон); 	
	Оп = Новый ОписаниеОповещения("ОбработкаОповещенияЗадачаОтменить", ЭтотОбъект, ДопПарамОбработчикаОповещения);
	ПоказатьВыборИзМеню(Оп, СписокОтветов, Команда);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучиСписокОтветовПричинРучогоЗакрытияЗадачи(ИмяШаблона = "ПРИЧИНЫ РУЧНОГО ЗАКРЫТИЯ ЗАДАЧ")
	
	СписЗнач = Новый СписокЗначений();
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = списзнач;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АнкетыВариантыОтветов.Ответ
	|ИЗ
	|	Справочник.Анкеты.ВариантыОтветов КАК АнкетыВариантыОтветов
	|ГДЕ
	|	АнкетыВариантыОтветов.Ссылка.Родитель.Наименование = &РодительНаименование
	|	И АнкетыВариантыОтветов.Ссылка.Наименование = &Наименование";
	Запрос.УстановитьПараметр("РодительНаименование", "ПРОЧЕЕ");
	Запрос.УстановитьПараметр("Наименование", ИмяШаблона);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписЗнач.Добавить(Выборка.Ответ, Выборка.Ответ);
	КонецЦикла;
	
	Возврат СписЗнач
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещенияЗадачаОтменить(ВыбЗначОтвет, ДопПараметры) Экспорт
	
	Если ВыбЗначОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Успех = УстановиПричинуЗакрытияЗадачиАвтозвонка(ДопПараметры.Телефон, ВыбЗначОтвет.Значение);
	Если Не Успех Тогда	
		ПоказатьПредупреждение(, "Ошибка установки причины ручного закрытия задачи", 3);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановиПричинуЗакрытияЗадачиАвтозвонка(Телефон, ВыбЗнач)
	Возврат РегистрыСведений.ЗадачиИнтернетЗаявки.УстановиЗначениеРеквизита(Телефон, "ПричинаЗакрытия", ВыбЗнач);
КонецФункции

#КонецОбласти
