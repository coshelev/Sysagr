&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтаФорма.Проверка.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Очистить();

	//Роль Оформитель не должна видеть закладку "Я-исполнитель"
	//---------------------------------------------------------
	Элементы.СтрЯИсполнитель.Видимость = Ложь;
	Доступно = Истина;
	Доступно = Доступно И (		РольДоступна(Метаданные.Роли.Администратор) 
							Или РольДоступна(Метаданные.Роли.КлиентскаяСлужбаЦентр_Оператор) 
							Или РольДоступна(Метаданные.Роли.КлиентскаяСлужбаЦентр_Администратор)
							Или РольДоступна(Метаданные.Роли.КлиентскаяСлужбаРегионы_Оператор)
							) ;
	Если Доступно Тогда
		Элементы.СтрЯИсполнитель.Видимость = Истина;
	КонецЕсли;
	
	ЭтаФорма.Проверка.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Очистить();
	
	//Оформитель и клиентская служба регион видят для проверки только свои задачи
	//-----------------------------------------------------------------------------
	Доступно = Истина;
	Доступно = Доступно И (РольДоступна(Метаданные.Роли.ОформительДляВводаЗаявокГАЗ) Или  РольДоступна(Метаданные.Роли.КлиентскаяСлужбаРегионы_Оператор));
	Доступно = Доступно И Не РольДоступна(Метаданные.Роли.Администратор);
	Доступно = Доступно И Не РольДоступна(Метаданные.Роли.КлиентскаяСлужбаЦентр_Администратор);
	Доступно = Доступно И Не РольДоступна(Метаданные.Роли.КлиентскаяСлужбаЦентр_Оператор);

	Если Доступно = Истина Тогда

		ЭлОтбора = ЭтаФорма.Заявки.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлОтбора.ЛевоеЗначение	=	Новый ПолеКомпоновкиДанных("Автор");
		ЭлОтбора.ВидСравнения	=	ВидСравненияКомпоновкиДанных.Равно;
		ЭлОтбора.ПравоеЗначение	=	ПараметрыСеанса.ТекущийПользователь;
		ЭлОтбора.Использование	=	Истина;
		
		ЭлОтбора = ЭтаФорма.Проверка.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлОтбора.ЛевоеЗначение	=	Новый ПолеКомпоновкиДанных("Автор");
		ЭлОтбора.ВидСравнения	=	ВидСравненияКомпоновкиДанных.Равно;
		ЭлОтбора.ПравоеЗначение	=	ПараметрыСеанса.ТекущийПользователь;
		ЭлОтбора.Использование	=	Истина;

	КонецЕсли;
		
	ЭлОтбора = ЭтаФорма.Проверка.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлОтбора.ЛевоеЗначение	=	Новый ПолеКомпоновкиДанных("ДатаЗакрытия");
	ЭлОтбора.ВидСравнения	=	ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлОтбора.Использование	=	Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	ДобавитьНаСервере();
КонецПроцедуры

#Область Принять
&НаСервере
Функция ПринятьНаСервере(Телефон, СигнатураЗаявкиГАЗ)
	ТекДата = ТекущаяДата();
	
	НачатьТранзакцию();
	
	Рез = РегистрыСведений.ЗадачиГАЗЗаявки.ЗакройЗадачу(Телефон, ТекДата, "", ПараметрыСеанса.ТекущийПользователь);
	Доступно = Истина;
	Доступно = Доступно И Рез = Ложь;
	Доступно = Доступно и ТранзакцияАктивна();
	Если Доступно = Истина Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	
	Успех = РегистрыСведений.ГАЗЗаявки.Закрыть(СигнатураЗаявкиГАЗ, ТекДата);
 	Доступно = Истина;
	Доступно = Доступно И Рез = Ложь;
	Доступно = Доступно и ТранзакцияАктивна();
	Если Доступно = Истина Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	ЗафиксироватьТранзакцию();
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция СигнатураЗаявкиГАЗизЗадачиЗвонка(Телефон, ДатаЗакрытия)
	Результат = "";
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Сигнатура ИЗ РегистрСведений.ЗадачиГАЗЗаявки ГДЕ Телефон = &Телефон И ДатаЗакрытия = &ДатаЗакрытия");
	Запрос.УстановитьПараметр("Телефон", 		Телефон);
	Запрос.УстановитьПараметр("ДатаЗакрытия",	 ДатаЗакрытия);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() = Ложь Тогда
		Результат = Рез.Выгрузить()[0][0];	
	КонецЕсли;	
	Возврат Результат; 
КонецФункции

&НаКлиенте
Процедура Принять(Команда)
	ТекДанные = ЭтаФорма.Элементы.Проверка.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Телефон = ТекДанные.Телефон;
	СигнатураЗаявкиГАЗ = ТекДанные.ЗаявкаГАЗ;
	Если Не ЗначениеЗаполнено(СигнатураЗаявкиГАЗ) Тогда
		// Дата постановки задачи проверки равна дате закрытия задачи звонка
		СигнатураЗаявкиГАЗ =  СигнатураЗаявкиГАЗизЗадачиЗвонка(Телефон, ТекДанные.ДатаПостановки)
	КонецЕсли;
	
	Результат = ПринятьНаСервере(Телефон , СигнатураЗаявкиГАЗ);
	Если Результат = Ложь Тогда
		ПоказатьПредупреждение(, "Ошибка приемки задачи", 3, "Ошибка");
	КонецЕсли;
	ЭтаФорма.Элементы.Проверка.Обновить();
КонецПроцедуры
#КонецОбласти

#Область Отправить_на_доработку
&НаСервере
Функция ДоработатьНаСервере(Телефон, ДатаЗакрытия, СигнатураЗаявки, Комментарий)	
	Результат = РегистрыСведений.ЗадачиГАЗЗаявки.ЗакройЗадачуПроверкиОткройЗадачуЗвонка(Телефон, ДатаЗакрытия, ПараметрыСеанса.ТекущийПользователь, СигнатураЗаявки, Комментарий);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура Доработать(Команда)
	ТекДанные = ЭтаФорма.Элементы.Проверка.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ДопПарам = Новый Структура();
	ДопПарам.Вставить("Телефон", 		ТекДанные.Телефон);
	ДопПарам.Вставить("ЗаявкаГАЗ",  	ТекДанные.ЗаявкаГАЗ);
	ДопПарам.Вставить("ДатаЗакрытия",	ТекущаяДата());
	НаВводСтроки = Новый ОписаниеОповещения("НаВводСтроки", ЭтаФорма, ДопПарам);
	ПоказатьВводСтроки(НаВводСтроки, , "Введите комментарий");	
КонецПроцедуры

&НаКлиенте
Функция НаВводСтроки(Парам1, Парам2) Экспорт
	Результат = ДоработатьНаСервере(Парам2.Телефон, Парам2.ДатаЗакрытия, Парам2.ЗаявкаГАЗ, Парам1);	
	Если Результат = Ложь Тогда
		ПоказатьПредупреждение(, "Ошибка отправки задачи на доработку", 5, "Ошибка");
	КонецЕсли;
	ЭтаФорма.Элементы.Проверка.Обновить();
КонецФункции
#КонецОбласти

&НаКлиенте
Процедура Прослушать(Команда)
	ТекДанные = ЭтаФорма.Элементы.Проверка.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	Парам = Новый Структура();
	Парам.Вставить("Сигнатура", ТекДанные.ЗвонокЗакрытия);
	ОткрытьФорму("РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
