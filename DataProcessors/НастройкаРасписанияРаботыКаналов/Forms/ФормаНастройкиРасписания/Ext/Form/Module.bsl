
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Расписание 				= ВнешниеИсточникиДанных.AsteriskEdge.Таблицы.schedules_names.НайтиПоПолю("id",Объект.schedule);
	
	НастраиваемоеРасписание = ВнешниеИсточникиДанных.AsteriskEdge.Таблицы.schedules_custom.НайтиПоПолю("id_name", Объект.schedule);
	
	НастраиваемыеРасписания.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("id_name", Объект.schedule);
	
	//Заполни расписание по умолчанию
	//--------------------------------
	ПокажиРасписаниеПоУмолчанию(Объект.schedule);
	
	//Покажи в каких каналах используется
	//------------------------------------
	Сп.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("schedule", Объект.schedule);

	ЭтаФорма.Заголовок = "Расписание "+Расписание.name+", канал " + Объект.full_number;
	
	Если Параметры.Свойство("schedules_names_Ссылка") Тогда
		РасписаниеСсылка = Параметры.schedules_names_Ссылка;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаписатьРасписаниеПоУмолчанию()
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРасписаниеПоУмолчанию()
	Для Сч = 0 По 6 Цикл
		СчетчикСтрокой = Строка(Сч+1);
		Текст = "ВЫБРАТЬ Т.Ссылка КАК Ссылка  ИЗ ВнешнийИсточникДанных.AsteriskEdge.Таблица.schedules_default КАК Т ГДЕ Т.id_name = &id_name И Т.dow = &dow";
		Парам = Новый Структура("id_name, dow", Расписание.id, РасписаниеПоУмолчанию[Сч]["dow"]);
		РезультатЗапроса = ОбщегоНазначения.ЗапросВыполнить(Текст, Парам);
		Если РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Изменен = Ложь;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ДефолтОб = Выборка.Ссылка.ПолучитьОбъект();
		Если ДефолтОб.start_time <> РасписаниеПоУмолчанию[Сч]["start_time"] Тогда
			ДефолтОб.start_time = РасписаниеПоУмолчанию[Сч]["start_time"];
			Изменен = Истина;
		КонецЕсли;
		Если ДефолтОб.end_time <> РасписаниеПоУмолчанию[Сч]["end_time"]  Тогда
			ДефолтОб.end_time = РасписаниеПоУмолчанию[Сч]["end_time"];
			Изменен = Истина;
		КонецЕсли;  	
		Если ДефолтОб.holiday <> РасписаниеПоУмолчанию[Сч]["holiday"] Тогда
			ДефолтОб.holiday = РасписаниеПоУмолчанию[Сч]["holiday"] ;
			Изменен = Истина;
		КонецЕсли;
		Если Не Изменен Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			ДефолтОб.Записать();
		Исключение
			Комментарий = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("ЗаписатьРасписаниеПоУмолчанию()", УровеньЖурналаРегистрации.Ошибка, Метаданные.ВнешниеИсточникиДанных.AsteriskEdge, "id_name = "+Объект.id_name, Комментарий);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеСсылкаПриИзменении(Элемент)
	Объект.schedule = ЗначенияСервера.ПолучитьЗначениеРеквизита(Расписание, "id");
	Сп.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("schedule", Объект.schedule);
	Элементы.Сп.Обновить();
	ПокажиРасписаниеПоУмолчанию(Объект.schedule);
	НастраиваемоеРасписание =  НастраиваемоеРасписание(Объект.schedule);
	НастраиваемыеРасписания.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("id_name", Объект.schedule);
КонецПроцедуры

&НаСервере
Функция НастраиваемоеРасписание(id_name)
	Возврат  ВнешниеИсточникиДанных.AsteriskEdge.Таблицы.schedules_custom.НайтиПоПолю("id_name", id_name);
КонецФункции

&НаСервере
Процедура ПокажиРасписаниеПоУмолчанию(РасписаниеСсылка)
	
	РасписаниеПоУмолчанию.Очистить();
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ 	Т.dow КАК dow, Т.start_time КАК start_time, Т.end_time КАК end_time, Т.holiday КАК holiday
	|ИЗ 		ВнешнийИсточникДанных.AsteriskEdge.Таблица.schedules_default КАК Т
	|ГДЕ 		Т.id_name = &id_name";
	Запрос.УстановитьПараметр("id_name", 	РасписаниеСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Нов = РасписаниеПоУмолчанию.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастраиваемыеРасписанияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование = Ложь Тогда
		Отказ = Истина;
		Парам = Новый Структура();
		Парам.Вставить("id_name", Объект.schedule);
		ОткрытьФорму("ВнешнийИсточникДанных.AsteriskEdge.Таблица.schedules_custom.Форма.ФормаОбъекта", Парам,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры
	 
