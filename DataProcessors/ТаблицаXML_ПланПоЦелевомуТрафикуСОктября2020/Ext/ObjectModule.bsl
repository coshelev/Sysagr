Функция УстановитьНастройки() Экспорт
	
	РегистрСведений 	= ?(Не ЗначениеЗаполнено(РегистрСведений), 		"УчетнаяПолитика", 									РегистрСведений);
	Измерение 			= ?(Не ЗначениеЗаполнено(Измерение), 			"Параметр", 										Измерение); 
	Ресурс 				= ?(Не ЗначениеЗаполнено(Ресурс), 				"Значение", 										Ресурс);
	ЗначениеИзмерения 	= ?(Не ЗначениеЗаполнено (ЗначениеИзмерения), 	"РостовВиктор_ПланПоЦелевомуТрафикуСОктября2020", 	ЗначениеИзмерения)
КонецФункции

Функция ПолучиТекстИзРегистра() Экспорт	
	ЗначениеПоУмолчанию = "";
	
	Запрос = Новый Запрос("ВЫБРАТЬ Значение ИЗ РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, ) ГДЕ Параметр = &Измерение1"); 
	
	Запрос.Текст = ?(РегистрСведений <> "УчетнаяПолитика", 	 СтрЗаменить(Запрос.Текст, "УчетнаяПолитика", РегистрСведений), Запрос.Текст);
	Запрос.Текст = ?(Измерение <> "Параметр", 				 СтрЗаменить(Запрос.Текст, "Параметр", "Измерение"), 			Запрос.Текст);
	Запрос.Текст = ?(Ресурс <> "Значение",					 СтрЗаменить(Запрос.Текст, "Значение", "Ресурс"), 				Запрос.Текст); 
	
	Запрос.УстановитьПараметр("Период", 	ТекущаяДата());
	Запрос.УстановитьПараметр("Измерение1", ЗначениеИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Рез = РезультатЗапроса.Выгрузить()[0][0];	
	Возврат Рез	
КонецФункции

Функция ЗаписатьВУчетнуюПолитику(Период, Параметр, Значение)
	
	НЗ = РегистрыСведений.УчетнаяПолитика.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(Период);
	НЗ.Отбор.Параметр.Установить(Параметр);
	НЗ.Прочитать();
	
	Новая = НЗ.Добавить();
	Новая.Период 			= Период;
	Новая.Параметр 			= Параметр;
	Новая.ТипЗначения 		= "Строка";
	Новая.Значение 			= Значение;
	
	УстановитьПривилегированныйРежим(Истина);
	Попытка
		НЗ.Записать();
		Результат = Истина;
	Исключение
		ЗаписьЖурналаРегистрации("Записать параметр учетной политики", УровеньЖурналаРегистрации.Ошибка, СтрШаблон("Период = %1, Параметр = %2, Значение = %3", Период, Параметр, Значение), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Результат = Ложь;
	КонецПопытки;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
КонецФункции

Процедура Сериализовать() Экспорт	
		
	Мас = Новый Массив();
	Для Каждого Зап Из ЭтотОбъект.ТЗ Цикл
		Структ = Новый Структура();
		Структ.Вставить("Месяц", 		Зап["Месяц"]);
		Структ.Вставить("ТочкаЦелевая", Зап["ТочкаЦелевая"]);
		Структ.Вставить("Направление",	Зап["Направление"]);
		Структ.Вставить("Количество", 	Зап["Количество"]);
		Мас.Добавить(Структ);
	КонецЦикла;
	
	
	ЗапXML = Новый ЗаписьXML();
	ЗапXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗапXML, Мас, НазначениеТипаXML.Явное);
	Стр = ЗапXML.Закрыть();

	ЗаписатьВУчетнуюПолитику(ТекущаяДата(), ЭтотОбъект.ЗначениеИзмерения, Стр);
	
КонецПроцедуры

Процедура Десериализовать() Экспорт
	
	ЭтотОбъект.ТЗ.Очистить();
	
	Стр = ПолучиТекстИзРегистра();
	
	ЧтXML = Новый ЧтениеXML();
	ЧтXML.УстановитьСтроку(Стр);
	Мас = СериализаторXDTO.ПрочитатьXML(ЧтXML);

	Для Каждого Эл Из Мас Цикл
		Новая = ЭтотОбъект.ТЗ.Добавить();
		
		Новая["Месяц"] 			= Эл["Месяц"];
		Новая["ТочкаЦелевая"] 	= Эл["ТочкаЦелевая"];
		Новая["Направление"]	= Эл["Направление"];
		Новая["Количество"] 	= Эл["Количество"];
	КонецЦикла;
	
	
КонецПроцедуры

