&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)
	
	// Отображение кнопки для снятия блокировки
	//-------------------------------------------------------------------------------------------------
	Доступно = (ПараметрыСеанса.РольДоступнаАдминистратор); 
	Элементы.ФормаУдалить.Доступность  				= Доступно;
	Элементы.ФормаДобавить.Доступность 				= Доступно;
	Элементы.ЦелевымАгентомУстановить.Доступность 	= Доступно;
	Элементы.ЦелевымАгентомОтменить.Доступность 	= Доступно;
	
	// Заполним ТЗ "Очереди" доступными для текущего пользователя целевыми очередями
	//-------------------------------------------------------------------------------------------------
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ТочкаЦелевая.Очередь КАК Очередь,
	|	Т.ТочкаЦелевая.Очередь.Сервер.ИсточникДанных КАК Сервер
	|ИЗ
	|	РегистрСведений.АгентыЦелевые КАК Т
	|ГДЕ
	|	Т.ТочкаЦелевая.Очередь.Сервер.ИсточникДанных <> """"";

	Запрос.УстановитьПараметр("ДоступныеТочки",ЗначенияСервера.ДоступныеЦелевыеТочки());
	Очереди.Загрузить(Запрос.Выполнить().Выгрузить());
	СписокСформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

// Подключим обработчик ожидания для периодического обновления Списка
//-------------------------------------------------------------------------------------------------
	ПодключитьОбработчикОжидания("ОбработкаОжидания",60,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	СписокСформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокСформировать(Команда)
	СписокСформироватьНаСервере();
КонецПроцедуры

&НаСервере
Функция НеактивныеАгенты()
	
// Проинициализируем массив в котором будем накапливать номера телефонов неактивных агентов
//-------------------------------------------------------------------------------------------------
	НеактивныеАгенты = Новый Массив;

// Получим список неактивных агентов для каждой очереди из ТЗ "Очереди"
//-------------------------------------------------------------------------------------------------
	Для Каждого ТекСтрока Из ЭтаФорма.Очереди Цикл
		ТекстЗапроса = "
		|SELECT	DISTINCT MemberName
		|FROM	ВнешнийИсточникДанных." + СокрЛП(ТекСтрока.Сервер) + ".Таблица.Агенты
		|WHERE	(Queue_Name = &Очередь) И (Paused = 1)";

		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Очередь",ВРег(СокрЛП(ТекСтрока.Очередь)));
		Попытка
			Результат = Запрос.Выполнить().Выбрать();
		Исключение
			ЗаписьЖурналаРегистрации("НеактивныеАгенты", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Продолжить;
		КонецПопытки;

		Пока (Результат.Следующий()) Цикл
			НеактивныеАгенты.Добавить(СокрЛП(Результат.MemberName));
		КонецЦикла;
	КонецЦикла;
	
	Возврат НеактивныеАгенты;
КонецФункции

&НаСервере
Процедура СписокСформироватьНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ  Т.membername КАК Телефон, Т.queue_name КАК ОчередьИмя, Т.paused КАК Пауза ИЗ 	ВнешнийИсточникДанных.AsteriskNnov.Таблица.Агенты КАК Т УПОРЯДОЧИТЬ ПО 	ОчередьИмя");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	тзВсеОчередиАгента = РезультатЗапроса.Выгрузить();
		
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.abonent_num КАК Телефон,
	|	Т.author КАК Автор,
	|	Т.reason КАК Причина,
	|	Т.begin_date КАК НачПериода,
	|	Т.end_date КАК КонПериода
	|ИЗ
	|	ВнешнийИсточникДанных.AsteriskNnov.Таблица.Блокировки КАК Т";
	РезультатЗапроса = Запрос.Выполнить();
	Блокировки = РезультатЗапроса.Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Агенты.membername КАК Телефон,
	|	Агенты.queue_name КАК ОчередьИмя,
	|	Агенты.paused КАК Пауза,
	|	ОчередиЛогические.КодПроекта КАК КодПроекта,
	|	ОчередиЛогические.СрокОбработки КАК СрокОбработки
	|ИЗ
	|	ВнешнийИсточникДанных.AsteriskNnov.Таблица.Агенты КАК Агенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВнешнийИсточникДанных.AsteriskNnov.Таблица.ОчередиЛогические КАК ОчередиЛогические
	|		ПО Агенты.queue_name = ОчередиЛогические.Наименование
	|ГДЕ
	|	ОчередиЛогические.КодПроекта <> &КодПроекта";
	Запрос.УстановитьПараметр("КодПроекта", "");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	тзАгенты = РезультатЗапроса.Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Телефон КАК Телефон,
	|	Т.Автор КАК Автор,
	|	Т.Причина КАК Причина,
	|	Т.НачПериода КАК НачПериода,
	|	Т.КонПериода КАК КонПериода
	|ПОМЕСТИТЬ ВТ01_Блокировки
	|ИЗ
	|	&Блокировки КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Телефон КАК Телефон,
	|	Т.ОчередьИмя КАК ОчередьИмя,
	|	Т.Пауза КАК Пауза,
	|	Т.КодПроекта КАК КодПроекта,
	|	Т.СрокОбработки КАК СрокОбработки
	|ПОМЕСТИТЬ ВТ02_Агенты
	|ИЗ
	|	&Агенты КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Агенты.Телефон КАК Телефон,
	|	Агенты.ОчередьИмя КАК Очередь,
	|	Агенты.СрокОбработки КАК СрокОбработки,
	|	ВЫБОР
	|		КОГДА Агенты.Пауза > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пауза,
	|	Агенты.КодПроекта КАК КодПроекта,
	|	ЕСТЬNULL(Блокировки.Автор, """") КАК Автор,
	|	ЕСТЬNULL(Блокировки.Причина, """") КАК Причина,
	|	ЕСТЬNULL(Блокировки.НачПериода, """") КАК НачПериода,
	|	ЕСТЬNULL(Блокировки.КонПериода, """") КАК КонПериода,
	|	ЕСТЬNULL(АгентыЦелевые.ТочкаЦелевая, ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)) КАК ТочкаЦелевая,
	|	ЕСТЬNULL(Прив.Владелец, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК Владелец
	|ИЗ
	|	ВТ02_Агенты КАК Агенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ01_Блокировки КАК Блокировки
	|		ПО Агенты.Телефон = Блокировки.Телефон
	|			И (&ТекДата МЕЖДУ Блокировки.НачПериода И Блокировки.КонПериода)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АгентыЦелевые КАК АгентыЦелевые
	|		ПО (АгентыЦелевые.Телефон.Код = Агенты.Телефон)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК Прив
	|		ПО (Прив.Объект.Код = Агенты.Телефон)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Агенты.ОчередьИмя,
	|	Телефон";
	
	Запрос.УстановитьПараметр("НеактивныеАгенты",  		НеактивныеАгенты());
	Запрос.УстановитьПараметр("Агенты",					тзАгенты);
	Запрос.УстановитьПараметр("Блокировки",				Блокировки);
	Запрос.УстановитьПараметр("ТекДата",				ЗначенияСервера.ТекущаяДатаСервер());
	Запрос.УстановитьПараметр("Администратор",			ПараметрыСеанса.РольДоступнаАдминистратор);
	Запрос.УстановитьПараметр("ДоступныеЦелевыеТочки",	ЗначенияСервера.ДоступныеЦелевыеТочки());
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Отбор = Новый Структура();
	Отбор2 = Новый Структура();
			
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Телефон) Тогда
			Продолжить;
		КонецЕсли;
			
		//Найди существующую строку или создай новую
		//--------------------------------------------
		Отбор.Вставить("Телефон", Выборка.Телефон);
		Найденные = Агенты.НайтиСтроки(Отбор);
		Если Найденные.Количество()=1 Тогда
			Новая = Найденные[0]; 
			Новая.Причина = "";
		Иначе
			Новая = ЭтаФорма.Агенты.Добавить();	
		КонецЕсли;
		
		//Найди все остальные очереди агента
		//-----------------------------------
		Отбор2.Вставить("Телефон", Выборка.Телефон);
		Найденные = тзВсеОчередиАгента.НайтиСтроки(Отбор2);
		Если Найденные.Количество()>1 Тогда
			Сп = Новый СписокЗначений;
			Для Каждого Стр Из Найденные Цикл
				Если Стр.ОчередьИмя = Выборка.Очередь Тогда
					Продолжить;
				КонецЕсли;
				Сп.Добавить(Стр.ОчередьИмя);
			КонецЦикла;
		Новая.ДругиеОчереди = Сп;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Новая, Выборка, "Телефон, Очередь, СрокОбработки, Пауза, КодПроекта, ТочкаЦелевая, Владелец, Автор");
		Если ЗначениеЗаполнено(Выборка.Причина) Тогда
			Новая.Причина = Строка(Выборка.НачПериода)+" - "+Строка(Выборка.КонПериода)+", "+Выборка.Причина;
		КонецЕсли;
		
		
		
	КонецЦикла;	
	
	//Агенты.Сортировать("Очередь, Телефон");
КонецПроцедуры

&НаКлиенте
Процедура АгентыПаузаПриИзменении(Элемент)
	// Если пользователь выполнил нажатие в колонке "Пауза", то переключим состояние паузы выбранного
	// агента на противоположное. 
	//-------------------------------------------------------------------------------------------------
		
	ТекДанные = Элементы.Агенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//<09.07.2018, =>, Через вэб-сервис Asterisk>
	
	//	ОчередьСсылка = ЗначенияСервера.ПолучитьЗначениеРеквизита(ТекДанные.ТочкаЦелевая,"Очередь");
	//	НовСостояние = (НЕ ТекДанные.Пауза);
	//	//<Кошелев_09.02.2017_11-03; =>; Агент может быть в нескольких очередях>
	//	//Результат = ОчередиАгенты.АгентПаузаИзменить(ОчередьСсылка,ТекДанные.Телефон,НовСостояние);
	//	Если НовСостояние = Истина Тогда // пауза
	//		Результат = ОчередиАгенты.ЦелевойАгентДеактивировать(ТекДанные.Телефон, Истина);	
	//	Иначе
	//		Результат = ОчередиАгенты.ЦелевойАгентАктивировать(ТекДанные.Телефон);
	//	КонецЕсли;
	//	//<Кошелев_09.02.2017_11-03>
	//	СписокСформироватьнаСервере();
	//	СтандартнаяОбработка = Ложь;	
	//	Если (ЗначениеЗаполнено(Результат)) Тогда
	//		Предупреждение(Результат);
	//	КонецЕсли;
	
	//=>
	
	//Изменение состояния телефона через web-service asterisk по аналогии с ОУ
	
	Очередь 	 = ТекДанные.Очередь;
	Телефон 	 = ТекДанные.Телефон;
	НовСостояние = Не ТекДанные.Пауза;
	
	Результат = Интеграция_Агр_ТелАгентСостояниеУстановить(Очередь, Телефон, НовСостояние);
	
	Если (ЗначениеЗаполнено(Результат)) Тогда
		ПоказатьПредупреждение(, Результат);
		Возврат;
	КонецЕсли;
	СписокСформироватьнаСервере();
	
	//</09.07.2018>	
КонецПроцедуры

&НаСервере
Функция Интеграция_Агр_ТелАгентСостояниеУстановить(Очередь, Телефон, НовСостояние) Экспорт
	//Изменение состояния телефона через web-service asterisk по аналогии с ОУ
	
	//http://astws.main.luidorauto.ru:8081/asterisk_ws/soap/description
	//:param queuename: queue name (string)
	//:param agentnum: agent phone number (string)
	//:param active: False - set pause, True - set unpause (bool)
	//:param min_agents: minimum count of agents (int)
	
	Доступно = 				ТипЗнч(Очередь) = Тип("Строка");
	Доступно = Доступно И 	ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И 	ТипЗнч(НовСостояние) = Тип("Булево");
	Доступно = Доступно И 	ЗначениеЗаполнено(Очередь);
	Доступно = Доступно И 	ЗначениеЗаполнено(Телефон);
	
	Данные = "Очередь = " + Очередь + "; Телефон = "+Телефон+"; НовСостояние = "+НовСостояние ;
	
	Если Не Доступно Тогда
		Комментарий = "Ошибка в типе или заполнении аргументов";
		ЗаписьЖурналаРегистрации("Интеграция_Агр_ТелАгентСостояниеУстановить", УровеньЖурналаРегистрации.Ошибка, ,Данные, Комментарий);
	КонецЕсли;
	
	Ответ = "";
	Попытка
		
		//ВебСервис = WSСсылки.PbxService.СоздатьWSПрокси("http://tempuri.org/","asterisk_ws","asterisk_ws");
		//=>
		ОпределениеСервиса = Новый WSОпределения("http://astws.main.luidorauto.ru:8081/asterisk_ws/soap/description");
		ВебСервис = Новый WSПрокси(ОпределениеСервиса, "http://tempuri.org/", "asterisk_ws", "asterisk_ws"); 

		Результат = ВебСервис.change_agent_state(Очередь, Телефон, НовСостояние, 0);
		
		Если (ТипЗнч(Результат) = Тип("Строка")) И (ЗначениеЗаполнено(Результат)) Тогда
			Ответ = "Изменение состояния для агента  невозможно по причине: " + СокрЛП(Результат);
			Возврат (Ответ);
		КонецЕсли;
	Исключение
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Интеграция_Агр_ТелАгентСостояниеУстановить", УровеньЖурналаРегистрации.Ошибка, ,Данные, Комментарий);
		Ответ = Комментарий;
	КонецПопытки;

	// Если мы оказались здесь, значит сервис успешно отработал
	// Обновим информацию о состоянии агента в базе данных
	//-------------------------------------------------------------------------------------------------
	//Агр_ТелАгентСостояниеОбновить(СтрАгент.Телефон);
	//СтрАгент = Агр_ТелАгентСостояниеПолучить(СтрАгент.Телефон);
	//Ответ = ?(ТипЗнч(СтрАгент) = Тип("Структура"),СтрАгент.Состояние,"Общая ошибка изменения состояния агента");
	
	Возврат (Ответ);
КонецФункции

#Область Установи_блокировку
&НаКлиенте
Процедура БлокировкаУстановить(Команда)
	
	ТекДанные = Элементы.Агенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Телефон = Элементы.Агенты.ТекущиеДанные.Телефон;
	Если СтрДлина(Телефон)<> 4 Тогда
		Возврат;
	КонецЕсли;
	
	Парам = Новый Структура();
	Парам.Вставить("Абонент", Телефон);
	
	ДопПарам = Новый Структура();
	ДопПарам.Вставить("Абонент", Телефон);
	ПриЗакрытииФормыБлокировки = Новый ОписаниеОповещения("ПриЗакрытииФормыБлокировки", ЭтаФорма, ДопПарам);
	
	ОткрытьФорму("Обработка.УправлениеАгентамиЦелевыхОчередей.Форма.ФормаБлокировать", Парам, ЭтаФорма, , , , ПриЗакрытииФормыБлокировки, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыБлокировки(Парам1, Парам2) Экспорт	
	СписокСформироватьНаСервере();	
КонецПроцедуры
#КонецОбласти

#Область Отмени_блокировку
&НаКлиенте
Процедура БлокировкаОтменить(Команда)
	ТекДанные = Элементы.Агенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	БлокировкаОтменитьНаСервере(ТекДанные.Телефон);
КонецПроцедуры

&НаСервере
Процедура БлокировкаОтменитьНаСервере(Телефон)
	
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Если Не Доступно Тогда
		Возврат;
	КонецЕсли;
		
	
	Ответ = "";
	Попытка	
		ОпределениеСервиса = Новый WSОпределения("http://astws.main.luidorauto.ru:8081/asterisk_ws/soap/description");
		ВебСервис = Новый WSПрокси(ОпределениеСервиса, "http://tempuri.org/", "asterisk_ws", "asterisk_ws"); 		
		Результат = ВебСервис.agent_unlock(Телефон);
		Если (ТипЗнч(Результат) = Тип("Строка")) И (ЗначениеЗаполнено(Результат)) Тогда
			Ответ = "Отмена блокировки для агента  невозможна по причине: " + СокрЛП(Результат);
			Сообщить(Ответ);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Если Ответ = "" Тогда
		СписокСформироватьНаСервере();	
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область Удали_Агента
&НаКлиенте
Процедура АгентыПередУдалением(Элемент, Отказ)
	
	ТекДанные = ЭтаФорма.Элементы.Агенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;	
	Телефон = ЭтаФорма.Элементы.Агенты.ТекущиеДанные.Телефон;
	Если АгентУдалитьНаСервере(Телефон)<> "" Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция АгентУдалитьНаСервере(Абонент)
		
	Результат = "ошибка";
	
	Доступно = ТипЗнч(Абонент) = Тип("Строка");
	Доступно = Доступно И СтрДлина(Абонент)=4;
	
	Если Не Доступно Тогда
		Возврат "ошибка: неверные типы или значения параметров";
	КонецЕсли;
	
	Попытка	
		ОпределениеСервиса = Новый WSОпределения("http://astws.main.luidorauto.ru:8081/asterisk_ws/soap/description");
		ВебСервис = Новый WSПрокси(ОпределениеСервиса, "http://tempuri.org/", "asterisk_ws", "asterisk_ws"); 
		Результат = ВебСервис. remove_agent(СокрЛП(Абонент));
		
		Если (ТипЗнч(Результат) = Тип("Строка")) И (ЗначениеЗаполнено(Результат)) Тогда
			Ответ = "ошибка: " + СокрЛП(Результат);
			Возврат (Ответ);
		КонецЕсли;
	Исключение
		Данные = "Абонент = "+Абонент;
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("АгентУдалитьНаСервере", УровеньЖурналаРегистрации.Ошибка, ,Данные, Комментарий);
		Результат = Комментарий;
	КонецПопытки;
	
	Возврат Результат 
	
КонецФункции
#КонецОбласти

#Область Добавь_Агента
&НаКлиенте
Процедура АгентыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ПриЗакрытииФормыДобавитьВОчередь = Новый ОписаниеОповещения("ПриЗакрытииФормыДобавитьВОчередь", ЭтаФорма);
	ОткрытьФорму("Обработка.УправлениеАгентамиЦелевыхОчередей.Форма.ФормаДобавитьВОчередь", ,ЭтаФорма,,,, ПриЗакрытииФормыДобавитьВОчередь, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыДобавитьВОчередь(Парам1, Парам2) Экспорт
	Если ЗначениеЗаполнено(Парам1) Тогда
		ПоказатьПредупреждение(, Парам1, 3);
	КонецЕсли;
	СписокСформироватьНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Доступно = ИмяСобытия = "Запись";
	Если Доступно Тогда
		СписокСформироватьНаСервере();
		Отбор = Новый Структура();
		Отбор.Вставить("Телефон", Параметр);
		Найденные = Агенты.НайтиСтроки(Отбор);
		Если Найденные.Количество()>0 Тогда
			ЭтаФорма.Элементы.Агенты.ТекущаяСтрока =Агенты.Индекс(Найденные[0]);	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область Найди_телефон
&НаСервереБезКонтекста
Функция  НайдиТелВнутр(Номер)
	Возврат Справочники.ТелВнутренние.НайтиПоКоду(Номер);	
КонецФункции

&НаКлиенте
Процедура ПодстрокаПоискаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ПодстрокаПоиска) Тогда
		СписокСформироватьНаСервере();
	Иначе
		//ТелВнутр = НайдиТелВнутр(ПодстрокаПоиска);
		//Если Не ЗначениеЗаполнено(ТелВнутр) Тогда
		//	ПоказатьПредупреждение(, "Не найдено", 3);
		//	ПодстрокаПоиска = "";
		//	Возврат;
		//КонецЕсли;
		Отбор = Новый Структура();
		Отбор.Вставить("Телефон", ПодстрокаПоиска);
		Найденные = Агенты.НайтиСтроки(Отбор);
		Если Найденные.Количество()= 0 Тогда
			ПоказатьПредупреждение(, "Не найдено", 3);	
			ПодстрокаПоиска = "";
		Иначе
			ЭтаФорма.Элементы.Агенты.ТекущаяСтрока =Агенты.Индекс(Найденные[0]);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодстрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	СписокСформироватьНаСервере();
КонецПроцедуры
#КонецОбласти

#Область Кликабельность_колонок
&НаСервереБезКонтекста
Функция  ТелВнутрСсылка(Телефон)
	Возврат Справочники.ТелВнутренние.НайтиПоКоду(Телефон);
КонецФункции

&НаСервереБезКонтекста
Функция ОчередьСсылка(Наименование)
	Возврат Справочники.ТелОчереди.НайтиПоНаименованию(Наименование);
КонецФункции

&НаКлиенте
Процедура АгентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Телефон" Тогда
		ТелВнутр = ТелВнутрСсылка(Элементы.Агенты.ТекущиеДанные.Телефон);
		Если ТелВнутр = ПредопределенноеЗначение("Справочник.ТелВнутренние.ПустаяСсылка") Тогда
			Возврат;
		КонецЕсли;
		Парам = Новый Структура();
		Парам.Вставить("Ключ", ТелВнутр);
		ОткрытьФорму("Справочник.ТелВнутренние.Форма.ФормаЭлемента", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
		
	Если Поле.Имя = "Владелец" Тогда
		Владелец =Элементы.Агенты.ТекущиеДанные.Владелец;
		Парам = Новый Структура();
		Парам.Вставить("Ключ", Владелец);
		ОткрытьФорму("Справочник.Предприятие.Форма.ФормаЭлемента", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
	Если Поле.Имя = "Очередь" Тогда
		ОчередьИмя = ОчередьСсылка(Элементы.Агенты.ТекущиеДанные.Очередь);
		Очередь = ОчередьСсылка(ОчередьИмя);
		Если Очередь = ПредопределенноеЗначение("Справочник.ТелОчереди.ПустаяСсылка") Тогда
			Возврат;
		КонецЕсли;
		Парам = Новый Структура();
		Парам.Вставить("Ключ", Очередь);
		ОткрытьФорму("Справочник.ТелОчереди.Форма.ФормаЭлемента", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

	Если Поле.Имя = "ЦелеваяТочка" Тогда
		ТочкаЦелевая = Элементы.Агенты.ТекущиеДанные.ТочкаЦелевая;
		Если ТочкаЦелевая = ПредопределенноеЗначение("Справочник.ТочкиЦелевые.ПустаяСсылка") Тогда
			Возврат
		КонецЕсли;
		Парам = Новый Структура();
		Парам.Вставить("Ключ", ТочкаЦелевая);
		ОткрытьФорму("Справочник.ТочкиЦелевые.Форма.ФормаЭлемента", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

	Если Поле.Имя = "ДругиеОчереди" Тогда
	
		СписокОчередей = Новый СписокЗначений;
		Для Каждого Эл Из Элементы.Агенты.ТекущиеДанные.ДругиеОчереди Цикл
			ОчередьСсылка = ОчередьСсылка(Эл.Значение);
			Если ОчередьСсылка = ПредопределенноеЗначение("Справочник.ТелОчереди.ПустаяСсылка") Тогда
				Продолжить;
			КонецЕсли;
			СписокОчередей.Добавить(ОчередьСсылка);	
		КонецЦикла;
		Если СписокОчередей.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		Парам = Новый Структура();
		Парам.Вставить("СписокОчередей", СписокОчередей);
		ОткрытьФорму("Справочник.ТелОчереди.ФормаСписка", Парам,,,,, , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область Целевым_агентом_установить
&НаКлиенте
Процедура ЦелевымАгентомУстановить(Команда)
	Телефон =Элементы.Агенты.ТекущиеДанные.Телефон;
	ТелВнутр = ТелВнутрСсылка(Телефон);
	Если ТелВнутр = ПредопределенноеЗначение("Справочник.ТелВнутренние.ПустаяСсылка") Тогда
		Возврат;
	КонецЕсли;
	ПослеВыбораТочкиОформления = Новый ОписаниеОповещения("ПослеВыбораТочкиОформления", ЭтаФорма, ТелВнутр);
	ВыбЗнач = ПредопределенноеЗначение("Справочник.ТочкиЦелевые.ПустаяСсылка");
	ПоказатьВводЗначения(ПослеВыбораТочкиОформления, ВыбЗнач, "Выберите целевую точку", Тип("СправочникСсылка.ТочкиЦелевые"));
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТочкиОформления(Парам1, Парам2) Экспорт
	// Парам1 - точка целевая ссылка
	// Парам2 - телефон внутренний ссылка
	Результат = ЦелевымАгентомУстановитьНаСервере(Парам1, Парам2);
	Если Результат <> "" Тогда
		Сообщить(Результат);
		Возврат;
	КонецЕсли;
	СписокСформироватьНаСервере();
КонецПроцедуры

&НаСервере
Функция ЦелевымАгентомУстановитьНаСервере(ТочкаЦелевая, Телефон)
	
	Результат = "ошибка";
	
	Доступно = ТипЗнч(Телефон) = Тип("СправочникСсылка.ТелВнутренние");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Доступно = Доступно И ТипЗнч(ТочкаЦелевая) = Тип("СправочникСсылка.ТочкиЦелевые");
	Доступно = Доступно И ЗначениеЗаполнено(ТочкаЦелевая);
	Доступно = Доступно И ТочкаЦелевая.ЭтоГруппа = Ложь;
	
	Если Не Доступно Тогда
		Возврат Результат+" в типе или заполнении параметров";
	КонецЕсли;
	
	Зап = РегистрыСведений.АгентыЦелевые.СоздатьМенеджерЗаписи();
	Зап.Телефон = Телефон;
	Зап.Прочитать();
	Если Зап.Выбран() Тогда 
		Возврат Результат+": уже целевой";
	КонецЕсли;
	
	Зап.Телефон = Телефон;
	Зап.ТочкаЦелевая = ТочкаЦелевая;
	Попытка
		Зап.Записать();
		Результат = "";
	Исключение
		Данные = "Телефон = "+Телефон+"; ТочкаЦелевая = "+ТочкаЦелевая;
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ЦелевымАгентомУстановить", УровеньЖурналаРегистрации.Ошибка,, Данные, Комментарий);
		Результат = "ошибка: "+ Комментарий;
	КонецПопытки;
	
	Возврат Результат
КонецФункции
#КонецОбласти

#Область Целевой_агент_отменить
&НаКлиенте
Процедура ЦелевымАгентомОтменить(Команда)
	
	Телефон =Элементы.Агенты.ТекущиеДанные.Телефон;
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Если Не Доступно Тогда
		Возврат
	КонецЕсли;
	Результат = ЦелевымАгентомОтменитьНаСервере(Телефон);
	Если Результат <> "" Тогда
		Сообщить(Результат);
		Возврат;
	КонецЕсли;
	СписокСформироватьНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЦелевымАгентомОтменитьНаСервере(Телефон)
	Результат = "ошибка";	
	ТелВнутр = ТелВнутрСсылка(Телефон);
	Если ТелВнутр = ПредопределенноеЗначение("Справочник.ТелВнутренние.ПустаяСсылка") Тогда
		Возврат Результат+": не найден внутренний телефон";
	КонецЕсли;
	Зап = РегистрыСведений.АгентыЦелевые.СоздатьМенеджерЗаписи();
	Зап.Телефон = ТелВнутр;
	Зап.Прочитать();
	Если Не Зап.Выбран() Тогда
		Возврат Результат+": не найден агент целевой точки";
	КонецЕсли;
	Попытка
		Зап.Удалить();
		Результат = "";
	Исключение
		Данные = "Телефон = "+Телефон;
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ЦелевымАгентомОтменить", УровеньЖурналаРегистрации.Ошибка,, Данные, Комментарий);
		Результат = "ошибка: "+ Комментарий;
	КонецПопытки;
	Возврат  Результат;
КонецФункции
#КонецОбласти




