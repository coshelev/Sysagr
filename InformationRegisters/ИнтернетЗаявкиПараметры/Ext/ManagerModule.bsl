Функция Добавить(Сигнатура,  Комментарий) Экспорт
	//Возвращает 
	//	"ошибка" если свойства не записаны
	//	"Выполнено. Заказать выездную презентацию" - свойства записаны и интернет-заявка имееет свойство "form_type" = "Заказать выездную презентацию"
	//  "Выполнено"  - свойства записаны
	
	Данные = "Сигнатура=" + Сигнатура+"; Комментарий=" + Комментарий;
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = "ошибка";
		
	Доступно = ТипЗнч(Сигнатура) 				= Тип("Строка");
	Доступно = Доступно И ТипЗнч(Комментарий)	= Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Сигнатура);
	Доступно = Доступно И ЗначениеЗаполнено(Комментарий);
	
	Если Не Доступно Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;
	
	тз = ПолучиТаблицуСвойств(Комментарий);
	Если тз.Количество()=0 Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;
		
	НЗ = РегистрыСведений.ИнтернетЗаявкиСвойства.СоздатьНаборЗаписей();
	НЗ.Отбор.Сигнатура.Установить(Сигнатура);

	Для Каждого СтрокаТЗ Из тз Цикл
		
		// Не записывай пары свойство-значение, если значение не указано
		//--------------------------------------------------------------
		Если СтрокаТЗ.Значение = "" Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НЗ.Добавить();
		НоваяСтрока.Сигнатура 	= Сигнатура;
		НоваяСтрока.Свойство 	= СтрокаТЗ.ИмяСсылка;
		НоваяСтрока.Значение	= СтрокаТЗ.ЗначениеСсылка;
		
		Если НоваяСтрока.Свойство.Наименование="form_type" И НоваяСтрока.Значение.Наименование = "Заказать выездную презентацию" Тогда
			ЗначениеВозврата = "Выполнено. Заказать выездную презентацию"
		КонецЕсли;
		
		Если НоваяСтрока.Свойство.Наименование="form_type" И НоваяСтрока.Значение.Наименование = "Регистрация" Тогда
			ЗначениеВозврата = "Выполнено. Регистрация"
		КонецЕсли;
		
		Если НоваяСтрока.Свойство.Наименование="form_type" И НоваяСтрока.Значение.Наименование = "Диалог в чате" Тогда
			ЗначениеВозврата = "Выполнено. Регистрация"
		КонецЕсли;
	
	КонецЦикла;
	
	Попытка
		НЗ.Записать();
	Исключение
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Добавить()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ИнтернетЗаявкиСвойства, Данные, Комментарий);
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецПопытки;

	Если ЗначениеВозврата = "Выполнено. Заказать выездную презентацию" Тогда
		Возврат ЗначениеВозврата;
	ИначеЕсли ЗначениеВозврата = "Выполнено. Регистрация" Тогда
		Возврат ЗначениеВозврата;
	Иначе
		Возврат "Выполнено"
	КонецЕсли;
КонецФункции

Функция ПолучиТаблицуСвойств(Значение) Экспорт
	
		
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТипСсылка = Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокИнтернетЗаявок");
	
	тзСвойства = Новый ТаблицаЗначений();
	тзСвойства.Колонки.Добавить("Имя", 			ТипСтрока);
	тзСвойства.Колонки.Добавить("Описание", 			ТипСтрока);
	тзСвойства.Колонки.Добавить("Значение", 	ТипСтрока);
	
	тзСвойства.Колонки.Добавить("ИмяСсылка", 		ТипСсылка);
	тзСвойства.Колонки.Добавить("ЗначениеСсылка", 	ТипСсылка);

	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = тзСвойства;	
	
	КоллекцияЗн = JSON_в_КоллекциюЗначений(Значение);
	Доступно = ТипЗнч(КоллекцияЗн) = Тип("Соответствие");
	Если Не Доступно Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	Для Каждого КлЗн_Уровень1 Из КоллекцияЗн Цикл
		ИмяСвойства = "";
		
		Если ТипЗнч(КлЗн_Уровень1) <> Тип("КлючИЗначение") Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяСвойства  = КлЗн_Уровень1.Ключ;
		Соотв2 = КлЗн_Уровень1.Значение;
		
		Если ТипЗнч(Соотв2)<> Тип("Соответствие") Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеСвойства ="";
		ОписаниеСвойства = "";
		Для Каждого КлЗн_Уровень2 Из Соотв2 Цикл
			Если КлЗн_Уровень2.Ключ="value" Тогда
				ЗначениеСвойства = КлЗн_Уровень2.Значение;
			ИначеЕсли КлЗн_Уровень2.Ключ="name" Тогда
				ОписаниеСвойства = КлЗн_Уровень2.Значение
			КонецЕсли;				
		КонецЦикла;	
		
		НоваяСтрока = тзСвойства.Добавить();
		НоваяСтрока.Имя 		= ИмяСвойства;
		НоваяСтрока.Описание 	= ОписаниеСвойства;
		НоваяСтрока.Значение 	= ЗначениеСвойства;	
	КонецЦикла;
	
	Для Каждого СтрокаТЗ Из тзСвойства Цикл
		СтрокаТЗ.ИмяСсылка = Справочники.ИдентификаторыСтрокИнтернетЗаявок.УстановиИдентификаторСтроки(СтрокаТЗ.Имя, "Имя параметра",СтрокаТЗ.Имя);	
		СтрокаТЗ.ЗначениеСсылка = Справочники.ИдентификаторыСтрокИнтернетЗаявок.УстановиИдентификаторСтроки(СтрокаТЗ.Значение,"Значение параметра", СтрокаТЗ.Значение);
	КонецЦикла;
		
	Возврат тзСвойства;

КонецФункции 

Функция JSON_в_КоллекциюЗначений (Значение, Стандарт = Истина, ПредставленияСсылок = Ложь) Экспорт
   	ЧтениеJSON = Новый ЧтениеJSON;
    ЧтениеJSON.УстановитьСтроку(Значение);
    
    Результат = Неопределено;
    СформироватьДерево(ЧтениеJSON, Результат);
    
    ЧтениеJSON.Закрыть();

    Возврат Результат;
КонецФункции // ПрочитатьJSON()

Процедура СформироватьДерево(ЧтениеJSON, Дерево)
    
    ИмяСвойства = Неопределено;
    
    Пока ЧтениеJSON.Прочитать() Цикл
        TипJSON = ЧтениеJSON.ТипТекущегоЗначения;
        
        Если TипJSON = ТипЗначенияJSON.НачалоОбъекта 
        ИЛИ TипJSON = ТипЗначенияJSON.НачалоМассива Тогда
		
            НовыйОбъект = ?(TипJSON = ТипЗначенияJSON.НачалоОбъекта, Новый Соответствие, Новый Массив);
            
            Если ТипЗнч(Дерево) = Тип("Массив") Тогда
                Дерево.Добавить(НовыйОбъект);
            ИначеЕсли ТипЗнч(Дерево) = Тип("Соответствие") И ЗначениеЗаполнено(ИмяСвойства) Тогда
                Дерево.Вставить(ИмяСвойства, НовыйОбъект);
            КонецЕсли;
            
            СформироватьДерево(ЧтениеJSON, НовыйОбъект);
            
            Если Дерево = Неопределено Тогда
                Дерево = НовыйОбъект;
            КонецЕсли;
        ИначеЕсли TипJSON = ТипЗначенияJSON.ИмяСвойства Тогда
            ИмяСвойства = ЧтениеJSON.ТекущееЗначение;
        ИначеЕсли TипJSON = ТипЗначенияJSON.Число 
        ИЛИ TипJSON = ТипЗначенияJSON.Строка 
        ИЛИ TипJSON = ТипЗначенияJSON.Булево 
        ИЛИ TипJSON = ТипЗначенияJSON.Null Тогда
            Если ТипЗнч(Дерево) = Тип("Массив") Тогда
                Дерево.Добавить(ЧтениеJSON.ТекущееЗначение);
            ИначеЕсли ТипЗнч(Дерево) = Тип("Соответствие") Тогда
                Дерево.Вставить(ИмяСвойства, ЧтениеJSON.ТекущееЗначение);
            КонецЕсли;
        Иначе
            Возврат;
        КонецЕсли;
    КонецЦикла;
    
КонецПроцедуры

