Функция УстановиЗначениеРеквизита(Телефон, ИмяРеквизита, ЗначениеРеквизита) Экспорт
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Доступно = Доступно И ТипЗнч(ИмяРеквизита)=Тип("Строка");
	Доступно = Доступно И ТипЗнч(ЗначениеРеквизита)<> Тип("Неопределено");
	Доступно = Доступно И ЗначениеЗаполнено(ЗначениеРеквизита);
	
	Если Не Доступно Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	НЗ 				= 	РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	НЗ.Телефон		=	Телефон;
	НЗ.ДатаЗакрытия	=	'00010101';
	НЗ.Прочитать();
	
	Если Не НЗ.Выбран() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	ИзмененоЗначениеРеквизита = Ложь;
	НЗ.Телефон 		=	Телефон;
	НЗ.ДатаЗакрытия =	'00010101';
	Для Каждого Рекв Из Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок.Реквизиты Цикл
		НЗ[Рекв.Имя] = НЗ[Рекв.Имя];
		Если Рекв.Имя <> ИмяРеквизита Тогда
			Продолжить
		КонецЕсли;
		Если Не Рекв.Тип.СодержитТип(ТипЗнч(ЗначениеРеквизита)) Тогда
			Продолжить
		КонецЕсли;
		
		НЗ.Комментарий = НЗ.Комментарий + Символы.ПС+" "+ТекущаяДата()+" изменен "  +ИмяРеквизита+ " с """+НЗ[Рекв.Имя]+""" на """+ЗначениеРеквизита+""" пользователем "+ПараметрыСеанса.ТекущийПользователь;
		НЗ[Рекв.Имя] = ЗначениеРеквизита;
		ИзмененоЗначениеРеквизита = Истина;
		Прервать;
	КонецЦикла;

	
	Если Не ИзмененоЗначениеРеквизита Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;

	Попытка
			НЗ.Записать();
			Возврат Истина;
	Исключение
			ЗаписьЖурналаРегистрации("УстановиЗначениеРеквизита()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок, , ОписаниеОшибки());
			Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецПопытки;
		
КонецФункции

Функция УстановиЗначениеРеквизитаИЗакройЗадачу(Телефон, ДатаЗакрытия, ИмяРеквизита, ЗначениеРеквизита, ТекущийПользователь="") Экспорт
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = ЛОЖЬ;
	
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Доступно = Доступно И ТипЗнч(ДатаЗакрытия)=Тип("Дата");
	Доступно = Доступно И ЗначениеЗаполнено(ДатаЗакрытия);
	Доступно = Доступно И ТипЗнч(ИмяРеквизита)=Тип("Строка");
	
	Если Не Доступно Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	НЗ = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	НЗ.Телефон=Телефон;
	НЗ.ДатаЗакрытия=Дата("00010101");
	НЗ.Прочитать();
	
	Если Не НЗ.Выбран() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
	
	ИзмененоЗначениеРеквизита = Ложь;
	НЗ.Телефон = НЗ.Телефон;
	НЗ.ДатаЗакрытия = НЗ.ДатаЗакрытия;
	Для Каждого Рекв Из Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок.Реквизиты Цикл
		НЗ[Рекв.Имя] = НЗ[Рекв.Имя];
		Если Рекв.Имя <> ИмяРеквизита Тогда
			Продолжить
		КонецЕсли;
		Если Не Рекв.Тип.СодержитТип(ТипЗнч(ЗначениеРеквизита)) Тогда
			Продолжить
		КонецЕсли;
		 НЗ[Рекв.Имя] = ЗначениеРеквизита;
		 ИзмененоЗначениеРеквизита = ИСТИНА;
		 Прервать;
	КонецЦикла;
	
	Если ИзмененоЗначениеРеквизита Тогда
		НЗ.ДатаЗакрытия = ДатаЗакрытия;
		Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
			НЗ.Исполнитель = ТекущийПользователь;
		КонецЕсли;
		Попытка
			НЗ.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("РегистрСведений.ЗадачиОбратныйЗвонок.УстановиЗначениеРеквизитаИЗакройЗадачу()",, ,, "Ошибка записи");
			Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
		КонецПопытки;
		
		Возврат ИСТИНА;
		
	КонецЕсли;
	
	
КонецФункции

Функция УстановиЗначениеИзмерения(Телефон, НовыйТелефон, ДатаЗакрытия='00010101000000', НоваяДатаЗакрытия='00010101000000') Экспорт
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = ЛОЖЬ;
	 
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Доступно = Доступно И ТипЗнч(НовыйТелефон) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(НовыйТелефон);
	Доступно = Доступно И ТипЗнч(ДатаЗакрытия)=Тип("Дата");
	Доступно = Доступно И ТипЗнч(НоваяДатаЗакрытия)=Тип("Дата");

	НЗ = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	НЗ.Телефон=Телефон;
	НЗ.ДатаЗакрытия = ДатаЗакрытия;
	НЗ.Прочитать();
	
	Если Не НЗ.Выбран() Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ
	КонецЕсли;
 
	НЗ.Телефон = НовыйТелефон;
	НЗ.ДатаЗакрытия = НоваяДатаЗакрытия;
	
	Для Каждого Рекв Из Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок.Реквизиты Цикл
		НЗ[Рекв.Имя] = НЗ[Рекв.Имя];
	КонецЦикла;
	
	НЗ.Комментарий = НЗ.Комментарий + Символы.ПС+" "+ТекущаяДата()+" изменен телефон с "+Телефон +" на "+НовыйТелефон+" пользователем "+ПараметрыСеанса.ТекущийПользователь;
	
	Попытка
		НЗ.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("РегистрСведений.ЗадачиОбратныйЗвонок.УстановиЗначениеИзмерения()",, ,, "Ошибка записи");
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецПопытки;
	
	Возврат ИСТИНА;

КонецФункции

Функция Добавить(Телефон, ДатаЗакрытия='00010101000000', Тип, Исполнитель, Комментарий="", ДатаПостановки = '00010101000000', ЗвонокИнициатор = "", ДатаАктуальности='00010101000000', ПисьмоИнициатор = "", СоИсполнительПлан = Неопределено, СоИсполнителиПлан="", Основание = "") Экспорт
	//ЗвонокИнициатор - сигнатура звонка
	
	ЗначениеПоУмолчанию = Ложь;
	
	//Проверка типов значений
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И СтрДлина(СокрЛП(Телефон))>=10;
	Доступно = Доступно И СтрНайти(Телефон, "<UNKNOWN>") = Ложь;
	Доступно = Доступно И ТипЗнч(ДатаЗакрытия) = Тип("Дата"); 
	
	Данные = "Телефон = "+ Телефон +" ;ДатаЗакрытия = "+ДатаЗакрытия+" ;ПисьмоИнициатор = "+ПисьмоИнициатор;

	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("Добавить()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок, Данные , "Ошибка проверки типов и заполнения аргументов");
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
		
	НЗ = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	НЗ.Телефон 			= Телефон;
	НЗ.ДатаЗакрытия 	= ДатаЗакрытия;
	НЗ.Прочитать();
	Если НЗ.Выбран() Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	НЗ.Телефон 			= Телефон;
	НЗ.ДатаЗакрытия 	= ДатаЗакрытия;
	НЗ.Тип				= Тип;
	НЗ.Исполнитель 		= Исполнитель;
	НЗ.Комментарий		= Комментарий;
	НЗ.ДатаПостановки	= ДатаПостановки;
	НЗ.ЗвонокИнициатор  = ЗвонокИнициатор;
	НЗ.ДатаАктуальности = ДатаАктуальности;
	НЗ.ПисьмоИнициатор  = ПисьмоИнициатор;
	НЗ.ИсполнительПлан	= Исполнитель;
	
	Если СоИсполнительПлан <> Неопределено Тогда
	    НЗ.СоИсполнительПлан =СоИсполнительПлан;
	КонецЕсли;
	
	НЗ.Основание		= Основание;
		
	Попытка
		НЗ.Записать();
		Возврат Истина;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Комментарий = "Ошибка добавления записи. Описание ошибки: "+ ОписаниеОшибки;
		ЗаписьЖурналаРегистрации("Добавить()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок, Данные, Комментарий);
		Возврат Ложь;
	КонецПопытки
КонецФункции

Функция ДобавитьСЗаменой(Телефон, ДатаЗакрытия='00010101000000', Тип, Исполнитель, Комментарий="", ДатаПостановки = '00010101000000', ЗвонокИнициатор = "", ДатаАктуальности='00010101000000', ПисьмоИнициатор = "", СоИсполнительПлан = Неопределено, СоИсполнителиПлан="", Основание = "") Экспорт
	//В отличие от Добавить(), если находит открытую задачу, то не завершается, а изменяет в ней реквизиты
	
	ЗначениеПоУмолчанию = Ложь;
	
	//Проверка типов значений
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И СтрДлина(СокрЛП(Телефон))>=10;
	Доступно = Доступно И СтрНайти(Телефон, "<UNKNOWN>") = Ложь;
	Доступно = Доступно И ТипЗнч(ДатаЗакрытия) = Тип("Дата"); 
	
	Данные = "Телефон = "+ Телефон +" ;ДатаЗакрытия = "+ДатаЗакрытия+" ;ПисьмоИнициатор = "+ПисьмоИнициатор;

	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("Добавить()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок, Данные , "Ошибка проверки типов и заполнения аргументов");
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
		
	НЗ = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	НЗ.Телефон 			= Телефон;
	НЗ.ДатаЗакрытия 	= ДатаЗакрытия;
	НЗ.Прочитать();
	
	//Не зависимо от того, найдена ли существующая открытая задача, создай новую
	//---------------------------------------------------------------------------
	
	НЗ.Телефон 			= Телефон;
	НЗ.ДатаЗакрытия 	= ДатаЗакрытия;
	НЗ.Тип				= Тип;
	НЗ.Исполнитель 		= Исполнитель;
	Если ЗначениеЗаполнено(НЗ.Комментарий) Тогда
		НЗ.Комментарий		= НЗ.Комментарий+";"+Символы.ПС+Комментарий;
	Иначе
		НЗ.Комментарий		= Комментарий;
	КонецЕсли;
	НЗ.ДатаПостановки	= ДатаПостановки;
	НЗ.ЗвонокИнициатор  = ЗвонокИнициатор;
	НЗ.ДатаАктуальности = ДатаАктуальности;
	НЗ.ПисьмоИнициатор  = ПисьмоИнициатор;
	НЗ.ИсполнительПлан	= Исполнитель;
	
	Если СоИсполнительПлан <> Неопределено Тогда
	    НЗ.СоИсполнительПлан =СоИсполнительПлан;
	КонецЕсли;
	
	НЗ.Основание		= Основание;
		
	Попытка
		НЗ.Записать();
		Возврат Истина;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Комментарий = "Ошибка добавления записи. Описание ошибки: "+ ОписаниеОшибки;
		ЗаписьЖурналаРегистрации("Добавить()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ЗадачиОбратныйЗвонок, Данные, Комментарий);
		Возврат Ложь;
	КонецПопытки
КонецФункции

Функция ЗакрытьАвтоматически(Телефон, ТелефонСотрудникаОП, СигнатураПропущенногоЗвонка) Экспорт
		
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И СтрДлина(СокрЛП(Телефон))>=10;
	Доступно = Доступно И ТипЗнч(ТелефонСотрудникаОП) = Тип("Строка");
	Доступно = Доступно И СтрДлина(СокрЛП(ТелефонСотрудникаОП))=4;	
	
	Если Не Доступно Тогда
		Возврат "Попытка автозакрытия. Неудача. Ошибка в аргументах";
	КонецЕсли;
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	Зап.Телефон 			= Телефон;
	Зап.ДатаЗакрытия 	= '00010101000000'; 
	Зап.Прочитать();
	Если Не Зап.Выбран() Тогда
		Возврат "Попытка автозакрытия. Неудача. Открытая задача не найдена";
	КонецЕсли; 
	
	//Найди внутр. тел. сотрудника ОП в справочнике
	//----------------------------------------------------------------------------------
	ТелСсылка = Справочники.ТелВнутренние.НайтиПоКоду(ТелефонСотрудникаОП);
	Если ТелСсылка = Справочники.ТелВнутренние.ПустаяСсылка() Тогда
		Возврат "Попытка автозакрытия. Неудача. Не найден внутр. телефон в справочнике";
	КонецЕсли;

	//Если оказались здесь, значит почтовое сообщение успешно отправлено, переопределим исполнителя задачи
	//-------------------------------------------------------------------------------------------------------
	
	Зап.ДатаАктуальности = ТекущаяДата() + 600*6;	
	Зап.Тип = Перечисления.ТипЗадачи.Непринятый; //default value	
	
	Зап.Комментарий = Зап.Комментарий	+ ". Закрыта автоматом отправкой пропущенного звонка в ОУ";
	Зап.Исполнитель 		= ТелСсылка;
	Зап.ИсполнительПлан 	= ТелСсылка;
	Зап.ДатаЗакрытия		= ТекущаяДата();
	
	Попытка
		Зап.Записать();
	Исключение
		Данные = "Телефон="+Зап.Телефон+" ;ДатаПостановки="+Зап.ДатаПостановки;
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("СоздатьЗадачу()", УровеньЖурналаРегистрации.Ошибка, Данные, Комментарий);
		Возврат "Попытка автозакрытия. Неудача. Ошибка записи задачи при смене исполнителя";
	КонецПопытки;
		
	Возврат "Попытка автозакрытия. Успех";

КонецФункции

Функция ЗакройНетПерезвона(ДатаПостановки) Экспорт
	// Закрывает задачи с датой постановки меньшей или равной переданной
	
	Доступно = 		ТипЗнч(ДатаПостановки) = Тип("Дата")
				И 	ЗначениеЗаполнено(ДатаПостановки);	
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Текст = "ВЫБРАТЬ Т.Телефон КАК Телефон ИЗ РегистрСведений.ЗадачиОбратныйЗвонок КАК Т ГДЕ Т.ДатаЗакрытия = &ДатаЗакрытия И Т.ДатаПостановки <= &ДатаПостановки";
	Парам = Новый Структура("ДатаЗакрытия, ДатаПостановки", '00010101', ДатаПостановки);
	Рез = ОбщегоНазначения.ЗапросВыполнить(Текст, Парам);
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
		
	ТекДата = ТекущаяДата();
	
	// Переменная будет содержать список номеров телефонов задач, при закрытии которых возникнут ошибки
	//--------------------------------------------------------------------------------------------------
	ТелефоныЗадачОшибкиЗакрытия = "";
	
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл	
		Выполнено = УстановиЗначениеРеквизитаИЗакройЗадачу(Выб.Телефон, ТекДата, "ПричинаЗакрытия", "Автозакрытие по причине отсутствия перезвона");
		
		Если Не Выполнено Тогда
			ТелефоныЗадачОшибкиЗакрытия = ТелефоныЗадачОшибкиЗакрытия+Выб.Телефон+ ";";
		КонецЕсли;
	КонецЦикла;

	//Если были ошибки закрытия задач
	//--------------------------------
	Если ЗначениеЗаполнено(ТелефоныЗадачОшибкиЗакрытия) Тогда
		ЗаписьЖурналаРегистрации("Возникали ошибки автозакрытия задач, по которым не было прозвона", УровеньЖурналаРегистрации.Ошибка, , СтрШаблон("ДатаПостановки = %1; Телефоны задач с ошибками закрытия = %2", ДатаПостановки, ТелефоныЗадачОшибкиЗакрытия));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции