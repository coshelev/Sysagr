&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОтображения(Элемент = Неопределено)

// Состояние данных формы
//-------------------------------------------------------------------------------------------------
	ЕстьОшибки = (ЭтаФорма.Ошибки.Количество() > 0);
	ЕстьОбновления = (ЕстьОшибки = Ложь) И (ЭтаФорма.Список.Количество() > 0);

// Видимость страниц
//-------------------------------------------------------------------------------------------------
    //<25.11.2019, =>, Отображаем всегда>
	//Элементы.СтраницаОшибки.Видимость = ЕстьОшибки;
	//Элементы.СтраницаСписок.Видимость = (ЕстьОшибки = Ложь);
	//=>
	Элементы.СтраницаОшибки.Видимость = Истина;
	Элементы.СтраницаСписок.Видимость = Истина;
	//</25.11.2019>

// Заголовки страниц
//-------------------------------------------------------------------------------------------------
	Темп = "Обновления готовые к загрузке в базу: " + СокрЛП(ЭтаФорма.Список.Количество());
	Элементы.СтраницаСписок.Заголовок = СокрЛП(Темп);

	Темп = "Записи для которых не удалось определить регион: " + СокрЛП(ЭтаФорма.Ошибки.Количество());
	Элементы.СтраницаОшибки.Заголовок = СокрЛП(Темп);

// Доступность команд получения и применения обновлений
//-------------------------------------------------------------------------------------------------
	 //<25.11.2019, =>, Отображаем всегда>
	//Элементы.ОбновленияПолучить.КнопкаПоУмолчанию = Истина;
	//Элементы.ОбновленияПрименить.Видимость = ЕстьОбновления;
	//Элементы.ОбновленияПрименить.КнопкаПоУмолчанию = ЕстьОбновления;
	//=>
	Элементы.ОбновленияПолучить.КнопкаПоУмолчанию 	= Истина;
	Элементы.ОбновленияПрименить.Видимость 			= Истина;
	Элементы.ОбновленияПрименить.КнопкаПоУмолчанию 	= Истина;
	//</25.11.2019>
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ОбновленияПолучить(Команда)

// Инициализация переменных
//-------------------------------------------------------------------------------------------------
	ЭтаФорма.Список.Очистить();
	ЭтаФорма.Ошибки.Очистить();
	ОбновлениеОтображения();
	ОчиститьСообщения();

// Загрузка данных Россвязь для диапазона ABC-3
//-------------------------------------------------------------------------------------------------
	Состояние("Получение обновлений для диапазона ABC-3");
	Результат = ДанныеРоссвязьПолучить("Kody_ABC-3kh");

	Если (ЗначениеЗаполнено(Результат)) Тогда
		ТекстСообщения = "Ошибка получения обновлений для диапазона ABC-3";
		ТекстСообщения = ТекстСообщения + Символы.ПС + СокрЛП(Результат);
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;

// Загрузка данных Россвязь для диапазона ABC-4
//-------------------------------------------------------------------------------------------------
	ТекстСообщения = "Всего записей для обновления: " + СокрЛП(ЭтаФорма.Список.Количество());
	ТекстСообщения = ТекстСообщения + Символы.ПС + "Получение обновлений для диапазона ABC-4";
	Состояние(ТекстСообщения);
	Результат = ДанныеРоссвязьПолучить("Kody_ABC-4kh");

	Если (ЗначениеЗаполнено(Результат)) Тогда
		ТекстСообщения = "Ошибка получения обновлений для диапазона ABC-4";
		ТекстСообщения = ТекстСообщения + Символы.ПС + СокрЛП(Результат);
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;

// Загрузка данных Россвязь для диапазона ABC-8
//-------------------------------------------------------------------------------------------------
	ТекстСообщения = "Всего записей для обновления: " + СокрЛП(ЭтаФорма.Список.Количество());
	ТекстСообщения = ТекстСообщения + Символы.ПС + "Получение обновлений для диапазона ABC-8";
	Состояние(ТекстСообщения);
	Результат = ДанныеРоссвязьПолучить("Kody_ABC-8kh");

	Если (ЗначениеЗаполнено(Результат)) Тогда
		ТекстСообщения = "Ошибка получения обновлений для диапазона ABC-8";
		ТекстСообщения = ТекстСообщения + Символы.ПС + СокрЛП(Результат);
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;

// Загрузка данных Россвязь для диапазона DEF-9
//-------------------------------------------------------------------------------------------------
	ТекстСообщения = "Всего записей для обновления: " + СокрЛП(ЭтаФорма.Список.Количество());
	ТекстСообщения = ТекстСообщения + Символы.ПС + "Получение обновлений для диапазона DEF-9";
	Состояние(ТекстСообщения);
	Результат = ДанныеРоссвязьПолучить("Kody_DEF-9kh");

	Если (ЗначениеЗаполнено(Результат)) Тогда
		ТекстСообщения = "Ошибка получения обновлений для диапазона DEF-9";
		ТекстСообщения = ТекстСообщения + Символы.ПС + СокрЛП(Результат);
		Предупреждение(ТекстСообщения);
		Возврат;
	КонецЕсли;

// Оптимизация ТЗ "Список"
//-------------------------------------------------------------------------------------------------
	ТекстСообщения = "Всего записей для обновления: " + СокрЛП(ЭтаФорма.Список.Количество());
	ТекстСообщения = ТекстСообщения + Символы.ПС + "Выполняется первичная оптимизация диапазонов";
	Состояние(ТекстСообщения);
	
	СписокОптимизировать();

// Преобразование строковых наименований регионов в ссылки на справочник "Страны"
//-------------------------------------------------------------------------------------------------
	ТекстСообщения = "Всего записей для обновления: " + СокрЛП(ЭтаФорма.Список.Количество());
	ТекстСообщения = ТекстСообщения + Символы.ПС + "Выполняется преобразование имен регионов к ссылкам";
	Состояние(ТекстСообщения);
	РегионыЗаполнить();

// Если после преобразования в ТЗ "Ошибки" появились записи, значит не все регионы удалось
// найти в справочнике "Страны". Очистим ТЗ "Список" и отобразим ТЗ "Ошибки"
//-------------------------------------------------------------------------------------------------
	Если (ЭтаФорма.Ошибки.Количество() > 0) Тогда
		//25.11.2019, //, не очищаем
		//ЭтаФорма.Список.Очистить();  
	Иначе
		СписокОптимизировать();
	КонецЕсли;

	ОбновлениеОтображения();
КонецПроцедуры

&НаСервере
Функция ДанныеРоссвязьПолучить(ФайлИмя)

// Функция получает файл с заданным именем с сервера Россвязь
//-------------------------------------------------------------------------------------------------
	//<25.11.2019, =>, изменили имя файла и путь>
	//ИсточникИмя = "docs/articles/" + СокрЛП(ФайлИмя) + ".csv"; 
	//=>	
	ИсточникИмя = "data/" + СокрЛП(ФайлИмя) + ".csv";
	ИсточникИмя = СтрЗаменить(ИсточникИмя, "Kody_", "");
	ИсточникИмя = СтрЗаменить(ИсточникИмя, "kh", "xx");
	//</25.11.2019>
	
	ПриемникИмя = ПолучитьИмяВременногоФайла(".csv");

// Установим соединение с сайтом и получим файл
//-------------------------------------------------------------------------------------------------
	Попытка
		ssl1 = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows(), Новый СертификатыУдостоверяющихЦентровWindows());
		Соединение = Новый HTTPСоединение("rossvyaz.ru",,,,,,ssl1);
		Запрос = Новый HTTPЗапрос(ИсточникИмя);
		Результат 	= Соединение.Получить(Запрос, ПриемникИмя);
	Исключение
	КонецПопытки;

// Убедимся в том, что файл-приемник получен и существует
//-------------------------------------------------------------------------------------------------
	ТекФайл = Новый Файл(ПриемникИмя);

	Если (ТекФайл.Существует() = Ложь) Тогда
		Ответ = "Файл """ + СокрЛП(ИсточникИмя) + """ не получен с сервера Россвязь";
		Возврат (Ответ);
	КонецЕсли;

// Файл-приемник успешно получен с WEB-Сервера
// Откроем файл для последовательного построчного чтения
//-------------------------------------------------------------------------------------------------
	Попытка
		Источник = Новый ЧтениеТекста;
		Источник.Открыть(ПриемникИмя, КодировкаТекста.UTF8);	
		НовСтрока = Источник.ПрочитатьСтроку();
	Исключение
		Ответ = "Файл """ + СокрЛП(ПриемникИмя) + """ не удалось открыть на чтение ";
		Ответ = Ответ + "по причине: " + СокрЛП(ОписаниеОшибки());
		Возврат (Ответ);
	КонецПопытки;

// Обработаем очередную строку файла
// Проверим валидность полученной строки
//-------------------------------------------------------------------------------------------------
	Пока (НовСтрока <> Неопределено) Цикл
		МассивСтрок = Конвертация.СтрокаРазделить(СокрЛП(НовСтрока),";");
		НовСтрока = Источник.ПрочитатьСтроку();

		Если (МассивСтрок.Количество() < 6) Тогда
			Продолжить;
		КонецЕсли;

// Код региона
// Начальный номер диапазона
// Конечный номер диапазона
//-------------------------------------------------------------------------------------------------
		КодДиапазона = "7" + Прав("000" + СокрЛП(МассивСтрок[0]),3);
		НачДиапазона = КодДиапазона + Прав("0000000" + СокрЛП(МассивСтрок[1]),7);
		КонДиапазона = КодДиапазона + Прав("0000000" + СокрЛП(МассивСтрок[2]),7);

// Регион
//-------------------------------------------------------------------------------------------------
		МассивАдресов = Конвертация.СтрокаРазделить(СокрЛП(МассивСтрок[5]),"|");
		ПозицияСлова = (МассивАдресов.Количество() - 1);
		Регион = ?(ПозицияСлова < 0,"",МассивАдресов[ПозицияСлова]);
		Регион = СтрЗаменить(СокрЛП(Регион),"ё","е");
		Регион = СтрЗаменить(СокрЛП(Регион),"""","");

// Преобразуем границы диапазона номеров в числовое значение и добавим данные в ТЗТемп
//-------------------------------------------------------------------------------------------------
		Попытка
			НачДиапазона = Число(НачДиапазона);
			КонДиапазона = Число(КонДиапазона);

			Доступно = (НачДиапазона > 0);
			Доступно = Доступно И (КонДиапазона >= НачДиапазона);
			Доступно = Доступно И ЗначениеЗаполнено(Регион);

			Если (Доступно = Истина) Тогда
				ДобСтрока = ЭтаФорма.Список.Добавить();
				ДобСтрока.НачДиапазона = НачДиапазона;
				ДобСтрока.КонДиапазона = КонДиапазона;
				ДобСтрока.Регион = СокрЛП(Регион);
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;

	Возврат ("");
КонецФункции

//-------------------------------------------------------------------------------------------------

&НаСервере
Процедура СписокОптимизировать()

// Выполним оптимизацию (склейку) диапазонов в ТЗ "Список"
//-------------------------------------------------------------------------------------------------
	ТЗТемп = ЭтаФорма.Список.Выгрузить();
	ЭтаФорма.Список.Очистить();

	ТЗТемп.Сортировать("Регион Возр,НачДиапазона Возр");
	ТекНачДиапазона = ТЗТемп.Получить(0).НачДиапазона;
	ТекКонДиапазона = ТекНачДиапазона - 1;
	ТекРегион = ТЗТемп.Получить(0).Регион;

	Для Каждого ТекСтрока Из ТЗТемп Цикл
		ЭтоПродолжение = (ТекРегион = ТекСтрока.Регион);
		ЭтоПродолжение = ЭтоПродолжение И (ТекСтрока.НачДиапазона = (ТекКонДиапазона + 1));

		Если (ЭтоПродолжение = Истина) Тогда
			ТекКонДиапазона = ТекСтрока.КонДиапазона;
		Иначе
			НовСтрока = ЭтаФорма.Список.Добавить();
			НовСтрока.Регион = ТекРегион;
			НовСтрока.НачДиапазона = ТекНачДиапазона;
			НовСтрока.КонДиапазона = ТекКонДиапазона;

			ТекРегион = ТекСтрока.Регион;
			ТекНачДиапазона = ТекСтрока.НачДиапазона;
			ТекКонДиапазона = ТекСтрока.КонДиапазона;
		КонецЕсли;
	КонецЦикла;

// Склейка закончена
// Перенесем последний диапазон в ТЗТемп
// Выгрузим данные из ТЗТемп в ТЗ "Список"
//-------------------------------------------------------------------------------------------------
	НовСтрока = ЭтаФорма.Список.Добавить();
	НовСтрока.Регион = ТекРегион;
	НовСтрока.НачДиапазона = ТекНачДиапазона;
	НовСтрока.КонДиапазона = ТекКонДиапазона;
КонецПроцедуры

&НаСервере
Процедура РегионыЗаполнить()

// Создадим таблицу значений с правилами подбора регионов
//-------------------------------------------------------------------------------------------------
	ТекстЗапроса = "
	|SELECT	Ссылка,Правило
	|FROM	Справочник.Страны.Правила
	|WHERE	(Ссылка = &Россия ИЛИ Ссылка.Родитель = &Россия) И (Правило <> """")
	|ORDER	BY Ссылка.Наименование";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Россия",Справочники.Страны.Россия);
	ТЗСтраны = Запрос.Выполнить().Выгрузить();

// Преобразуем значение из колонки "Регион" в ссылку на справочник "Страны"
//-------------------------------------------------------------------------------------------------
	Для Каждого ТекСтрока Из ЭтаФорма.Список Цикл
		Регион = СокрЛП(ТекСтрока.Регион);
		НачДиапазона = ТекСтрока.НачДиапазона;
		КонДиапазона = ТекСтрока.КонДиапазона;

		Для Каждого ТекСтрана Из ТЗСтраны Цикл
			Если (Вычислить(ТекСтрана.Правило) = Истина) Тогда
				ТекСтрока.Регион = ТекСтрана.Ссылка;
				Прервать;
			КонецЕсли;
		КонецЦикла;

// Если после перебора всех правил реквизит "Регион" все еще содержит строковое значение, значит
// для региона с такими характеристиками правило не найдено. Поместим данные в ТЗ "Ошибки"
//-------------------------------------------------------------------------------------------------
		Доступно = ЗначениеЗаполнено(ТекСтрока.Регион);
		Доступно = Доступно И (ТипЗнч(ТекСтрока.Регион) = Тип("Строка"));

		Если (Доступно = Истина) Тогда
			НовСтрока = ЭтаФорма.Ошибки.Добавить();
			НовСтрока.Регион = СокрЛП(ТекСтрока.Регион);
			НовСтрока.НачДиапазона = ТекСтрока.НачДиапазона;
			НовСтрока.КонДиапазона = ТекСтрока.КонДиапазона;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ОбновленияПрименить(Команда)

// Предварительно удалим все записи из регистра "ТелНомерныеПланы" относящиеся к России
//-------------------------------------------------------------------------------------------------
	Состояние("Предварительная очистка номерного плана Российской Федерации");
	ОбновленияПрименитьОчистить();

// Загрузка новых данных
//-------------------------------------------------------------------------------------------------
	Состояние("Загрузка номерного плана Российской Федерации");
	ОбновленияПрименитьЗагрузить();

// Все готово
//-------------------------------------------------------------------------------------------------
	Предупреждение("Номерной план Российской Федерации успешно обновлен");
	ЭтаФорма.Список.Очистить();
	ОбновлениеОтображения();
КонецПроцедуры

&НаСервере
Процедура ОбновленияПрименитьОчистить()

// Удалим из регистра сведений "ТелНомерныеПланы" все записи для номерного плана "Россия"
//-------------------------------------------------------------------------------------------------
	ТекстЗапроса = "
	|SELECT	Ссылка
	|FROM	Справочник.Страны
	|WHERE	(Ссылка = &Россия ИЛИ Родитель = &Россия)";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Россия",Справочники.Страны.Россия);
	Результат = Запрос.Выполнить().Выбрать();

	Пока (Результат.Следующий()) Цикл
		НаборЗаписей = РегистрыСведений.ТелНомерныеПланы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Страна.Установить(Результат.Ссылка);
		НаборЗаписей.Записать();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновленияПрименитьЗагрузить()

	// Перенесем записи из ТЗ "Список" в регистр сведений
	//-------------------------------------------------------------------------------------------------
	Для Каждого ТекСтрока Из ЭтаФорма.Список Цикл
		НовЗапись = РегистрыСведений.ТелНомерныеПланы.СоздатьМенеджерЗаписи();
		НовЗапись.Страна = ТекСтрока.Регион;
		НовЗапись.НачДиапазона = ТекСтрока.НачДиапазона;
		НовЗапись.КонДиапазона = ТекСтрока.КонДиапазона;
		Попытка
			НовЗапись.Записать(Истина);
		Исключение
			Продолжить;
		КонецПопытки
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Список.Очистить();
	Элементы.ОбновленияПрименить.Видимость = Истина;
КонецПроцедуры
