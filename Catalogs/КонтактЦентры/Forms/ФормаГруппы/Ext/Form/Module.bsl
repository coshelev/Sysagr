&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)

// Настроим отбор для списка "Панели"
//-------------------------------------------------------------------------------------------------
	ЭтаФорма.Панели.Параметры.УстановитьЗначениеПараметра("ЭтотОбъект",Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОтображения()

// Доступность страницы "Панели"
//-------------------------------------------------------------------------------------------------
	Доступно = ЗначениеЗаполнено(Объект.Ссылка);
	Элементы.СтраницаПанели.Видимость = Доступно;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись",Объект.Ссылка,ЭтаФорма);
	ПриСозданииНаСервере(Ложь,Истина);
	ПриОткрытии(Ложь);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение,ИсточникВыбора)

// В зависимости от типа выбранного значения выполним различные процедуры
//-------------------------------------------------------------------------------------------------
	Если (ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")) Тогда
		ОбработкаВыбораПользователь(ВыбранноеЗначение);
	ИначеЕсли (ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Предприятие")) Тогда
		Результат = ОбработкаВыбораПредприятие(ВыбранноеЗначение);
	Иначе
		Результат = "Обработка значения выбранного типа не поддерживается";
	КонецЕсли;

// Если функция обработки вернула непустой "Результат", то выведем сообщение с текстом результата
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(Результат)) Тогда
		Предупреждение(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОбработкаВыбораПользователь(ВыбранноеЗначение)

// Проверим ВыбранноеЗначение на наличие в ТЧ "Пользователи"
//-------------------------------------------------------------------------------------------------
	Фильтр = Новый Структура;
	Фильтр.Вставить("Пользователь",ВыбранноеЗначение);
	Результат = Объект.Пользователи.НайтиСтроки(Фильтр);
	Ответ = "";

	Если (Результат.Количество() > 0) Тогда
		Ответ = "Выбранный пользователь уже присутствует в списке сотрудников контакт-центра";
	Иначе
		НовСтрока = Объект.Пользователи.Добавить();
		НовСтрока.Пользователь = ВыбранноеЗначение;
	КонецЕсли;

	Возврат (Ответ);
КонецФункции

&НаСервере
Функция ОбработкаВыбораПредприятие(ВыбранноеЗначение)

// Сначала проверим не дублируется ли выбранное значение
//-------------------------------------------------------------------------------------------------
	Отбор = Новый Структура("Подразделение",ВыбранноеЗначение);
	НайденныеСтроки = Объект.Подразделения.НайтиСтроки(Отбор);

	Если (НайденныеСтроки.Количество() > 0) Тогда
		Возврат ("Выбранное подразделение уже присутствует в списке доступных");
	КонецЕсли;

// Выбранный элемент не дублируется явно
// Однако выбранный элемент может входить в иерархию другого присутствующего в списке элемента
//-------------------------------------------------------------------------------------------------
	Для Каждого ТекСтрока Из Объект.Подразделения Цикл
		Если (ВыбранноеЗначение.ПринадлежитЭлементу(ТекСтрока.Подразделение)) Тогда
			ТекстСообщения = "Выбранное подразделение находится в группе [" + СокрЛП(ТекСтрока.Подразделение);
			ТекстСообщения = ТекстСообщения + "], к которой у пользователя уже имеется доступ";
			Возврат (ТекстСообщения);
		КонецЕсли;
	КонецЦикла;

// Выбранный элемент не входит ни в какую присутствующую в списке иерархию
// Однако выбранный элемент может сам являться суперэлементом для каких-либо элементов списка
// Получим все элементы из ТЧ "Подразделения", которые входят в иерархию выбранного элемента
//-------------------------------------------------------------------------------------------------
	МассивУдаления = Новый Массив;
	ТекстУдаления = "";
	Ответ = "";

	Для Каждого ТекСтрока Из Объект.Подразделения Цикл
		Если (ТекСтрока.Подразделение.ПринадлежитЭлементу(ВыбранноеЗначение)) Тогда
			ТекстУдаления = ТекстУдаления + ?(ЗначениеЗаполнено(ТекстУдаления),Символы.ПС,"");
			ТекстУдаления = ТекстУдаления + СокрЛП(ТекСтрока.Подразделение.НаименованиеПолное);
			МассивУдаления.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;

// Если в МассивеУдаления есть элементы, значит они входят в иерархию выбранного подразделения
// Эти элементы необходимо удалить. Известим об этом пользователя
//-------------------------------------------------------------------------------------------------
	Если (МассивУдаления.Количество() > 0) Тогда
		Для Каждого ТекСтрока Из МассивУдаления Цикл
			Объект.Подразделения.Удалить(ТекСтрока);
		КонецЦикла;

		Ответ = "Следующие подразделения были удалены из списка доступных, т.к. ";
		Ответ = Ответ + "выбранный элемент является вышестоящим для них:";
		Ответ = Ответ + Символы.ПС + СокрЛП(ТекстУдаления);
	КонецЕсли;

// Все проверки пройдены успешно
//-------------------------------------------------------------------------------------------------
	НовСтрока = Объект.Подразделения.Добавить();
	НовСтрока.Подразделение = ВыбранноеЗначение;
	ЭтаФорма.Модифицированность = Истина;
	Возврат (Ответ);
КонецФункции

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ПользователиПередНачаломДобавления(Элемент,Отказ,Копирование,Родитель,Группа,Параметр)

// Откроем справочник для выбора добавляемых значений
//-------------------------------------------------------------------------------------------------
	СтрПараметры = Новый Структура("ЗакрыватьПриВыборе",Ложь);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора",СтрПараметры,ЭтаФорма);
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПередНачаломДобавления(Элемент,Отказ,Копирование,Родитель,Группа,Параметр)

// Откроем формы для подбора подразделений
//-------------------------------------------------------------------------------------------------
	СтрПараметры = Новый Структура("ЗакрыватьПриВыборе",Ложь);
	ОткрытьФорму("Справочник.Предприятие.ФормаВыбораГруппы",СтрПараметры,ЭтаФорма);
	Отказ = Истина;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ПанелиПередНачаломДобавления(Элемент,Отказ,Копирование,Родитель,Группа,Параметр)

// Создадим новый подчиненный элемент
//-------------------------------------------------------------------------------------------------
	ЗначенияЗаполнения = Новый Структура("Родитель",Объект.Ссылка);
	СтрПараметры = Новый Структура("ЗначенияЗаполнения",ЗначенияЗаполнения);
	ОткрытьФорму("Справочник.КонтактЦентры.ФормаОбъекта",СтрПараметры,ЭтаФорма);
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПанельПросмотр(Команда)

// Откроем панель для предварительного просмотра
//-------------------------------------------------------------------------------------------------
	СтрПараметры = Новый Структура("КонтактЦентр",Объект.Ссылка);
	ОткрытьФорму("Обработка.КонсольКонтактЦентра.Форма.ФормаБыстрогоВызова",СтрПараметры);
КонецПроцедуры
