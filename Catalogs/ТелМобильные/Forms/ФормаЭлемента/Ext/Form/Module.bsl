&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)

// Инициализация элементов
//-------------------------------------------------------------------------------------------------
	ПровайдерПриИзмененииНаСервере();

// Доступность реквизита "Код"
//-------------------------------------------------------------------------------------------------
	Доступно = (НЕ ЗначениеЗаполнено(Объект.Код));
	Элементы.Код.ТолькоПросмотр = (НЕ Доступно);

// Сформируем информацию о текущем владельце
//-------------------------------------------------------------------------------------------------
	ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);
	Элементы.НадписьВладелец.Видимость = Ложь;

	Если (ЗначениеЗаполнено(ВладСсылка)) Тогда
		Темп = СокрЛП(ВладСсылка.ТочкаРазмещения);
		Темп = Темп + ", " + СокрЛП(ВладСсылка.Наименование);
		Элементы.НадписьВладелец.Заголовок = СокрЛП(Темп);
		Элементы.НадписьВладелец.Видимость = Истина;
	КонецЕсли;

// Сформируем информацию о конвергенции
//-------------------------------------------------------------------------------------------------
	ПараФМС = Телефония.КонвергенцияПолучить(Объект.Ссылка);

	Если (ЗначениеЗаполнено(ПараФМС)) Тогда
		Элементы.НадписьФМС.Заголовок = "Переадресация на " + СокрЛП(ПараФМС.Код);
		Элементы.НадписьФМС.ЦветТекста = Новый Цвет(0,128,0);
		Элементы.НадписьФМС.Гиперссылка = Истина;
	Иначе
		Элементы.НадписьФМС.Заголовок = "Нет переадресации";
		Элементы.НадписьФМС.ЦветТекста = Новый Цвет(255,0,0);
		Элементы.НадписьФМС.Гиперссылка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись",Объект.Ссылка,ЭтаФорма);
	ПриСозданииНаСервере(Ложь,Истина);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ПровайдерПриИзменении(Элемент)

// Очистим связанные реквизиты
//-------------------------------------------------------------------------------------------------
	Элементы.ТипФМС.СписокВыбора.Очистить();
	Объект.ТипФМС = Неопределено;

// Переформируем список типов FMC в зависимости от выбранного провайдера
// Если в списке типов FMC есть только одна запись, то сразу поместим ее в реквизит "ТипФМС"
//-------------------------------------------------------------------------------------------------
	ПровайдерПриИзмененииНаСервере();

	Если (Элементы.ТипФМС.СписокВыбора.Количество() = 1) Тогда
		Объект.ТипФМС = Элементы.ТипФМС.СписокВыбора.Получить(0).Значение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПровайдерПриИзмененииНаСервере()

// Проверим правильность заполнения реквизитов
//-------------------------------------------------------------------------------------------------
	Если (НЕ ЗначениеЗаполнено(Объект.Провайдер)) Тогда
		Возврат;
	КонецЕсли;

// Получим список состояний, которые может обеспечить выбранный провайдер
//-------------------------------------------------------------------------------------------------
	ТекстЗапроса = "
	|SELECT	DISTINCT Ссылка
	|FROM	Справочник.ТелСостояния.Провайдеры
	|WHERE	(Провайдер = &Провайдер)
	|ORDER	BY Ссылка";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Провайдер",Объект.Провайдер);
	РезультатМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Элементы.ТипФМС.СписокВыбора.ЗагрузитьЗначения(РезультатМассив);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура НадписьВладелецНажатие(Элемент)
	Попытка
		ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);
		ОткрытьЗначение(ВладСсылка);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура НадписьФмсНажатие(Элемент)
	Попытка
		ПараФМС = Телефония.КонвергенцияПолучить(Объект.Ссылка);
		ОткрытьЗначение(ПараФМС);
	Исключение
	КонецПопытки;
КонецПроцедуры
