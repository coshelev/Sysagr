Процедура ОбработкаПроверкиЗаполнения(Отказ,ПроверяемыеРеквизиты)

// Линейный элемент обязательно должен принадлежать группе
//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.ЭтоГруппа = Ложь) Тогда
		ПроверяемыеРеквизиты.Добавить("Родитель");
	КонецЕсли;

// Нормализуем некоторые реквизиты
//-------------------------------------------------------------------------------------------------
	ЭтотОбъект.Наименование = СокрЛП(ЭтотОбъект.Наименование);

// Если текущий элемент является группой, то проверим на дублирование группы по наименованию
//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.ЭтоГруппа = Истина) Тогда
		ТекстЗапроса = "
		|SELECT	COUNT(*) AS Всего
		|FROM	Справочник.Провайдеры
		|WHERE	(ЭтоГруппа = Истина) И (Ссылка <> &ЭтотОбъект) И (Наименование = &Наименование)";

		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ЭтотОбъект",ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("Наименование",ЭтотОбъект.Наименование);
		Результат = Запрос.Выполнить().Выбрать();

		Если (Результат.Следующий()) И (Результат.Всего > 0) Тогда
			ТекстСообщения = "Провайдер (группа) с наименованием """ + СокрЛП(ЭтотОбъект.Наименование);
			ТекстСообщения = ТекстСообщения + """ уже присутствует в справочнике";
			Сообщить(ТекстСообщения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;

// Если текущий объект - линейный элемент, то проверим дублирование наименования в пределах
// текущего Родителя
//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.ЭтоГруппа = Ложь) Тогда
		ТекстЗапроса = "
		|SELECT	COUNT(*) AS Всего
		|FROM	Справочник.Провайдеры
		|WHERE	(ЭтоГруппа = Ложь) И (Родитель = &Родитель) И (Ссылка <> &ЭтотОбъект) И (Наименование = &Наименование)";

		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ЭтотОбъект",ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("Родитель",ЭтотОбъект.Родитель);
		Запрос.УстановитьПараметр("Наименование",ЭтотОбъект.Наименование);
		Результат = Запрос.Выполнить().Выбрать();

		Если (Результат.Следующий()) И (Результат.Всего > 0) Тогда
			ТекстСообщения = "Макрорегион """ + СокрЛП(ЭтотОбъект.Наименование) + """ уже присутствует у ";
			ТекстСообщения = ТекстСообщения + "провайдера """ + СокрЛП(ЭтотОбъект.Родитель.Наименование) + """";
			Сообщить(ТекстСообщения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если (НЕ ЭтотОбъект.ПроверитьЗаполнение()) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// Добавь запись во внешний источник данных, в таблицу Провайдеры (abonent_prov)	
	//------------------------------------------------------------------------------
	ДобавьЗапись_в_ВИД(ЭтотОбъект);
			
КонецПроцедуры

Функция ДобавьЗапись_в_ВИД(Об)
	// Добавляет запись во внешнем источнике данных, в таблицу Провайдеры (abonent_prov)
	
	ЗначениеПоУмолчанию = "Ошибка добавления записи в таблицу abonent_prov. Смотри журнал регистрации";
	Данные = "Код = "+Об.Код+"; Наименование = " + Об.Наименование;

	
	Если Не Об.ЭтоГруппа Тогда
		Возврат "ок";
	КонецЕсли;
	
	Серверы = Справочники.ТелСерверы.Выбрать();
	
	Пока Серверы.Следующий() Цикл
		ИсточникДанных = СокрЛП(Серверы.ИсточникДанных);
		Если Не ЗначениеЗаполнено(ИсточникДанных) Тогда 
			Продолжить;
		КонецЕсли;
		
		// По умолчанию обращаемся к внешнему источнику данных AsteriskNnov
		Запрос = Новый Запрос();
		Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
		                |	Провайдеры.code КАК code
		                |ИЗ
		                |	ВнешнийИсточникДанных.AsteriskNnov.Таблица.Провайдеры КАК Провайдеры
		                |ГДЕ
		                |	Провайдеры.code = &code";
		Если ИсточникДанных <> "AsteriskNnov" Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "AsteriskNnov", ИсточникДанных);	
		КонецЕсли;
		Запрос.УстановитьПараметр("code", Об.Код);
		Попытка 
			Рез = Запрос.Выполнить();
		Исключение
			Комментарий = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("Запись в abonent_prov", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);
			Возврат ЗначениеПоУмолчанию;
		КонецПопытки;
		
		Если Не Рез.Пустой() Тогда
			Возврат ("Предупреждение: запись с кодом "+Об.Код+" уже существует в таблице abonent_prov");;
		КонецЕсли;
		
		rec = ВнешниеИсточникиДанных[ИсточникДанных].Таблицы.Провайдеры.СоздатьОбъект();
		rec.code = Об.Код;
		rec.name = Об.Наименование;
		Попытка
			rec.write();
		Исключение
			Комментарий = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("Запись в abonent_prov", УровеньЖурналаРегистрации.Ошибка, Метаданные.ВнешниеИсточникиДанных[ИсточникДанных].Таблицы.Провайдеры, Данные, Комментарий);
			Возврат ЗначениеПоУмолчанию;
		КонецПопытки;
	КонецЦикла;
	
	Возврат "ок";

КонецФункции
