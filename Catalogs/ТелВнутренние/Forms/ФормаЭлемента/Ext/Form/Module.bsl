&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)

// Инициализация элементов
//-------------------------------------------------------------------------------------------------
	СерверПриИзмененииНаСервере();
	ДанныеСервераСформировать();

// Сформируем информацию о конвергенции и о владельце
//-------------------------------------------------------------------------------------------------
	ЭтаФорма.ПараФМС = Телефония.КонвергенцияПолучить(Объект.Ссылка);
	ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);
	Элементы.НадписьВладелец.Видимость = Ложь;

	Если (ЗначениеЗаполнено(ВладСсылка)) Тогда
		Темп = СокрЛП(ВладСсылка.ТочкаРазмещения);
		Темп = Темп + ", " + СокрЛП(ВладСсылка.Наименование);
		Элементы.НадписьВладелец.Заголовок = СокрЛП(Темп);
		Элементы.НадписьВладелец.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ,ТекущийОбъект,ПараметрыЗаписи)
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПараФмс",ЭтаФорма.ПараФМС);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись",Объект.Ссылка,ЭтаФорма);
	ПриСозданииНаСервере(Ложь,Истина);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

//&НаКлиенте
//Процедура СерверПриИзменении(Элемент)

//// Очистим связанные реквизиты
////-------------------------------------------------------------------------------------------------
//	Элементы.Состояние.СписокВыбора.Очистить();
//	Объект.Состояние = Неопределено;
//	ДанныеСервераСформировать();

//// Переформируем список состояний в зависимости от выбранного сервера
//// Если в списке состояний есть только одна запись, то сразу поместим ее в реквизит "Состояние"
////-------------------------------------------------------------------------------------------------
//	СерверПриИзмененииНаСервере();

//	Если (Элементы.Состояние.СписокВыбора.Количество() = 1) Тогда
//		Объект.Состояние = Элементы.Состояние.СписокВыбора.Получить(0).Значение;
//	КонецЕсли;
//КонецПроцедуры

&НаСервере
Процедура СерверПриИзмененииНаСервере()

// Проверим правильность заполнения реквизитов
//-------------------------------------------------------------------------------------------------
	Если (НЕ ЗначениеЗаполнено(Объект.Сервер)) Тогда
		Возврат;
	КонецЕсли;

// Получим список состояний, которые может обеспечить выбранный сервер
//-------------------------------------------------------------------------------------------------
	ТекстЗапроса = "
	|SELECT	DISTINCT Ссылка
	|FROM	Справочник.ТелСостояния.Провайдеры
	|WHERE	(Провайдер = &Сервер)
	|ORDER	BY Ссылка";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Сервер",Объект.Сервер);
	РезультатМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Элементы.Состояние.СписокВыбора.ЗагрузитьЗначения(РезультатМассив);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаСервере
Процедура ДанныеСервераСформировать()

// Инициализация элементов
//-------------------------------------------------------------------------------------------------
	Элементы.НадписьТерминал.Заголовок = "SIP-Объект не найден";
	Элементы.НадписьТерминал.ЦветТекста = Новый Цвет(255,0,0);
	Элементы.НадписьТерминал.Гиперссылка = Ложь;

	Элементы.НадписьОчереди.Заголовок = "Отсутствует в очередях";
	Элементы.НадписьОчереди.ЦветТекста = Новый Цвет(255,0,0);
	Элементы.НадписьОчереди.Гиперссылка = Ложь;

	Элементы.НадписьИсхКанал.Заголовок = "Не найден в ABONENTS";
	Элементы.НадписьИсхКанал.ЦветТекста = Новый Цвет(255,0,0);
	Элементы.НадписьИсхЗапрет.Видимость = Ложь;
	Элементы.НадписьИсхЗапись.Видимость = Ложь;

	Элементы.Состояние.ЦветФона = Новый Цвет(255,255,255);
	ЭтаФорма.Заголовок = "Создание телефонного номера";

	Если (НЕ ЗначениеЗаполнено(Объект.Код)) Тогда
		Возврат;
	КонецЕсли;

// Сформируем заголовок для формы
//-------------------------------------------------------------------------------------------------
	Статус = Телефония.ТелВнутреннийСостояниеПолучить(Объект.Код);

	Если (Статус = Неопределено) Тогда
		ЭтаФорма.Заголовок = СокрЛП(Объект.Код) + " - текущее состояние недоступно";
	Иначе
		ЭтаФорма.Заголовок = СокрЛП(Объект.Код) + " - " + СокрЛП(Статус.Представление);
	КонецЕсли;

// Заполним информацию о телефоне как о SIP-объекте
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(Статус.СипСсылка)) Тогда
		ТерминалИмя = СокрЛП(Статус.СипСсылка.UserAgent);
		ЭтаФорма.АдресТерминала = СокрЛП(Статус.СипСсылка.IpAddr);

		Темп = "Терминал: " + ?(ЗначениеЗаполнено(ТерминалИмя),СокрЛП(ТерминалИмя),"неизвестно");
		Темп = Темп + ", IP: " + ?(ЗначениеЗаполнено(ЭтаФорма.АдресТерминала),СокрЛП(ЭтаФорма.АдресТерминала),"неизвестно");
		Элементы.НадписьТерминал.Заголовок = СокрЛП(Темп);

// Если СипОбъект получен и необходимые реквизиты заполнены, значит данный телефон является SIP
// объектом и имеет стационарный телефонный аппарат. Проверим правильность заполнения реквизита
// "Состояние". В случае ошибки закрасим фон элемента в красный цвет
//-------------------------------------------------------------------------------------------------
		Если (ЗначениеЗаполнено(ТерминалИмя)) Тогда
			Элементы.НадписьТерминал.ЦветТекста = Новый Цвет(0,128,0);
			Элементы.НадписьТерминал.Гиперссылка = Истина;

			Если (Объект.Состояние <> Справочники.ТелСостояния.НеПодключен) Тогда
				Элементы.Состояние.ЦветФона = Новый Цвет(255,204,153);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

// Получим список системных очередей, в которых зарегистрирован данный телефон в качестве агента
//-------------------------------------------------------------------------------------------------
	МассивОчередей = ОчередиАгенты.ОчередиПолучитьПоАгенту(Объект.Код);

	Если (ТипЗнч(МассивОчередей) = Тип("Массив")) Тогда
		Темп = "Агент очередей (" + СокрЛП(МассивОчередей.Количество()) + ")";
		Элементы.НадписьОчереди.ЦветТекста = Новый Цвет(0,128,0);
		Элементы.НадписьОчереди.Заголовок = СокрЛП(Темп);
		Элементы.НадписьОчереди.Гиперссылка = Истина;
		
		//<Кошелев_01012017_10-43, +, Покажи очереди, агентом которых являетя это телефон>
	    Этаформа.СписокОчередей.ЗагрузитьЗначения(МассивОчередей);
		//</Кошелев_01012017_10-43>
	КонецЕсли;
	
	

// Сформируем сведения о настройках абонента телефонии
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(Статус.АбонСсылка)) Тогда
		КаналНомер = ВРег(СокрЛП(Статус.ИсхКанал));
		КаналСсылка = Справочники.ТелВнешние.НайтиПоКоду(КаналНомер);

		НовЦвет = ?(ЗначениеЗаполнено(КаналСсылка),Новый Цвет(0,128,0),Новый Цвет(255,0,0));
		Элементы.НадписьИсхКанал.Заголовок = "Исходящий канал: " + СокрЛП(КаналНомер);
		Элементы.НадписьИсхКанал.ЦветТекста = НовЦвет;

// Сформируем сведения о разрешении или запрете исходящих внешних звонков
//-------------------------------------------------------------------------------------------------
		Доступно = (Статус.ИсхЗапрет = Ложь);
		Элементы.НадписьИсхЗапрет.Заголовок = ?(Доступно,"Разрешено","Запрещено");
		Элементы.НадписьИсхЗапрет.ЦветТекста = ?(Доступно,Новый Цвет(0,128,0),Новый Цвет(255,0,0));
		Элементы.НадписьИсхЗапрет.Видимость = Истина;

// Сформируем сведения о состоянии функции записи исходящих внешних звонков
//-------------------------------------------------------------------------------------------------
		Доступно = (Статус.ИсхЗапись = Истина);
		Элементы.НадписьИсхЗапись.Заголовок = ?(Доступно,"Запись исходящих включена","Запись исходящих не включена");
		Элементы.НадписьИсхЗапись.ЦветТекста = ?(Доступно,Новый Цвет(0,128,0),Новый Цвет(255,0,0));
		Элементы.НадписьИсхЗапись.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	ДанныеСервераСформировать();
КонецПроцедуры

&НаКлиенте
Процедура ПараФмсНачалоВыбора(Элемент,ДанныеВыбора,СтандартнаяОбработка)

// Откроем форму для выбора пары
//-------------------------------------------------------------------------------------------------
	Форма = ПолучитьФорму("Справочник.ТелМобильные.ФормаВыбора",,Элемент);
	СтандартнаяОбработка = Ложь;

	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПараФМС");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование		= Истина;

	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ТипФМС");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.Использование		= Истина;

// Если у текущего объекта есть владелец, то дополнительно укажем, что подбираемый мобильный
// телефон тоже должен принадлежать этому владельцу
//-------------------------------------------------------------------------------------------------
	ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);

	Если (ЗначениеЗаполнено(ВладСсылка)) Тогда
		ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= ВладСсылка;
		ЭлементОтбора.Использование		= Истина;
	КонецЕсли;

	Форма.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура КаналВнешнийРазрешенПриИзменении(Элемент)

// Если телефону запретили внешние исходящие вызовы, то очистим сведения о канале
//-------------------------------------------------------------------------------------------------
	Если (ЭтаФорма.КаналВнешнийРазрешен = Ложь) Тогда
		ЭтаФорма.КаналВнешний = "";
	КонецЕсли;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура НадписьВладелецНажатие(Элемент)
	Попытка
		ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);
		ОткрытьЗначение(ВладСсылка);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура НадписьТерминалНажатие(Элемент)

// Откроем WEB-страницу с консолью администрирования телефонного аппарата (терминала)
//-------------------------------------------------------------------------------------------------
	Попытка
		АдресКонсоли = "HTTP://" + СокрЛП(ЭтаФорма.АдресТерминала);
		ЗапуститьПриложение(АдресКонсоли);
	Исключение
		Предупреждение(СокрЛП(ОписаниеОшибки()));
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура НадписьОчередиНажатие(Элемент)

// Получим список системных очередей, в которых зарегистрирован данный телефон в качестве агента
//-------------------------------------------------------------------------------------------------
	МассивОчередей = ОчередиАгенты.ОчередиПолучитьПоАгенту(Объект.Код);

	Если (ТипЗнч(МассивОчередей) = Тип("Массив")) Тогда
		Форма = ПолучитьФорму("Справочник.ТелОчереди.ФормаСписка",,,Истина,ВариантОткрытияОкна.ОтдельноеОкно);

		ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение	= МассивОчередей;
		ЭлементОтбора.Использование		= Истина;
		Форма.Открыть();
	КонецЕсли;
КонецПроцедуры
