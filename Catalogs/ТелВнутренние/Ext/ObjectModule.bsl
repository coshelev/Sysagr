Процедура ОбработкаПроверкиЗаполнения(Отказ,ПроверяемыеРеквизиты)

// Нормализация реквизитов
//-------------------------------------------------------------------------------------------------
	ЭтотОбъект.Код = СокрЛП(ЭтотОбъект.Код);
	ЭтотОбъект.Наименование = СокрЛП(ЭтотОбъект.Код);
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если (НЕ ЭтотОбъект.ПроверитьЗаполнение()) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

Процедура ПриЗаписи(Отказ)
	// С 18.11.2019 не пишем в абоненты
	Возврат;

	
	
	#Область Создание_записи_в_abonents_в_сервис_деске
	//Агрегатор оповещен через веб-сервис
	//-----------------------------------
	Если ДополнительныеСвойства.Свойство("ВнешняяЗапись") Тогда
		Если ДополнительныеСвойства.ВнешняяЗапись Тогда
			Если Не ЗначениеЗаполнено(Сервер) Тогда
				Сервер = Справочники.ТелСерверы.НайтиПоКоду("000000001");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Состояние) Тогда
				Состояние = Справочники.ТелСостояния.НайтиПоКоду("000000002");
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти
	
// Подготовим информационную базу для перезаписи объекта
// Сначала удалим все записи о текущем телефоне с домашнего сервера и с сервера FMC
//-------------------------------------------------------------------------------------------------
	ПриЗаписиТелАбонентыУдалить(ЭтотОбъект.Сервер);

// Получим сведения о текущем владельце номера
// Если владелец получен, то продолжим обработку записи
//-------------------------------------------------------------------------------------------------
	ВладСсылка = Телефония.ВладелецПолучить(ЭтотОбъект.Ссылка);
	
	//<17.06.2019_10-39, +, не очищается пара FMC если не заполнент владелец>	
	Если ВладСсылка = Неопределено Тогда
		ВладСсылка = Справочники.Предприятие.ПустаяСсылка();
	КонецЕсли;
	//</17.06.2019_10-39>
	
	//<17.06.2019_10-39,//, не очищается пара FMC если не заполнент владелец>
	//Если (ЗначениеЗаполнено(ВладСсылка)) Тогда
	//</17.06.2019_10-39>
		ПриЗаписиТелАбоненты(Отказ,ВладСсылка);
	//<17.06.2019_10-39,//, не очищается пара FMC если не заполнент владелец>
	//КонецЕсли;
	//</17.06.2019_10-39>	

	Телефония.ТелВнутреннийСостояниеОбновить(ЭтотОбъект.Ссылка);
КонецПроцедуры

Процедура ПриЗаписиТелАбоненты(Отказ,ВладСсылка)
	
// Выполним корректировки в таблицах ABONENTS для данного номера телефона
// Получим сведения о текущем состоянии телефона
//-------------------------------------------------------------------------------------------------
	СтрСостояния = Телефония.ТелВнутреннийСостояниеПолучить(ЭтотОбъект.Ссылка);

	Если (ТипЗнч(СтрСостояния) <> Тип("Структура")) Тогда
		ТекстСообщения = СокрЛП(ЭтотОбъект.Код) + " - при записи данных в таблицу ABONENTS произошла ";
		ТекстСообщения = ТекстСообщения + "ошибка: не удалось получить структуру текущего состояния";
		Сообщить(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

// Очистим сведения о конвергенции для текущего телефона и для его мобильной пары
//-------------------------------------------------------------------------------------------------
	Телефония.КонвергенцияРегистрУдалить(СтрСостояния.ПараФмс);
	Телефония.КонвергенцияРегистрУдалить(ЭтотОбъект.Ссылка);

// Получим сведения о наличии и типе конвергенции на номере
// Если объект записывается интерактивно, то получим данные переданные из формы
// Пересоздадим конвергентную пару в регистре если это необходимо и возможно
//-------------------------------------------------------------------------------------------------
	Доступно = (ЭтотОбъект.ДополнительныеСвойства.Свойство("ПараФМС") = Истина);
	ПараФмс = ?(Доступно,ЭтотОбъект.ДополнительныеСвойства.ПараФМС,СтрСостояния.ПараФмс);
	ТипФмс = ?(ЗначениеЗаполнено(ПараФмс),ПараФмс.ТипФмс.СерверныйКод,"");

	Если (ЗначениеЗаполнено(ТипФмс)) Тогда
		НовЗапись = РегистрыСведений.ТелКонвергенция.СоздатьМенеджерЗаписи();
		НовЗапись.ТелВнутренний = ЭтотОбъект.Ссылка;
		НовЗапись.ТелМобильный = ПараФмс;
		НовЗапись.Записать(Истина);
	КонецЕсли;

// Для владельца телефона получим ссылку на подразделение
// Выполним формирование записи ABONENTS для домашнего сервера
//-------------------------------------------------------------------------------------------------
	ВладСсылка = ?(ВладСсылка.ЭтоГруппа,ВладСсылка,ВладСсылка.Родитель);
	СерверИмя = СокрЛП(ЭтотОбъект.Сервер.ИсточникДанных);

	Если (ЗначениеЗаполнено(СерверИмя)) Тогда
		АбонОбъект = ВнешниеИсточникиДанных[СерверИмя].Таблицы.ТелАбоненты.СоздатьОбъект();
		АбонОбъект.abonent_num = ВРег(СокрЛП(ЭтотОбъект.Код));
		АбонОбъект.additions = "";
		АбонОбъект.custom = "";

// Тип абонента (тип стационарного телефона и тип услуги FMC)
//-------------------------------------------------------------------------------------------------
		Доступно = (СтрСостояния.ТипТерминала = "S");
		Доступно = Доступно ИЛИ (СтрСостояния.ТипТерминала = "A");
		АбонОбъект.abonent_type = ?(Доступно,СтрСостояния.ТипТерминала,"");
		АбонОбъект.abonent_type = СокрЛП(АбонОбъект.abonent_type) + ВРег(СокрЛП(ТипФмс));


// Разрешение записи исходящих звонков
//-------------------------------------------------------------------------------------------------
		Доступно = (СтрНайти(АбонОбъект.additions,"Z") = 0);
		Доступно = Доступно И (ВладСсылка.ИсхЗапись = Истина);
		Доступно = Доступно И (ВладСсылка.Состояние <> Перечисления.СостояниеЭлементаПредприятия.Отключен);
		АбонОбъект.additions = СокрЛП(АбонОбъект.additions) + ?(Доступно,"R","");
		

// Если тип абонента заполнен, то выполним запись объекта
//-------------------------------------------------------------------------------------------------
		Если (ЗначениеЗаполнено(АбонОбъект.abonent_type)) Тогда
			Попытка
				АбонОбъект.Записать();
			Исключение
				ТекстСообщения = СокрЛП(ЭтотОбъект.Код) + " - при записи объекта в таблицу ";
				ТекстСообщения = ТекстСообщения + "ABONENTS произошла ошибка источника данных ";
				ТекстСообщения = ТекстСообщения + СокрЛП(СерверИмя) + ": " + СокрЛП(ОписаниеОшибки());
				Сообщить(ТекстСообщения);
				Отказ = Истина;
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;

// Корректировка ABONENTS на домашнем сервере выполнена
// Выполним формирование записи ABONENTS для сервера услуги FMC (если необходимо)
//-------------------------------------------------------------------------------------------------
	Доступно = (ЭтотОбъект.Сервер <> Константы.СерверФМС.Получить());
	Доступно = Доступно И ЗначениеЗаполнено(ТипФмс);

	Если (Доступно = Ложь) Тогда
		Возврат;
	КонецЕсли;

// Создадим объект ABONENTS
//-------------------------------------------------------------------------------------------------
	СерверИмя = СокрЛП(Константы.СерверФМС.Получить().ИсточникДанных);

	АбонОбъект = ВнешниеИсточникиДанных[СерверИмя].Таблицы.ТелАбоненты.СоздатьОбъект();
	АбонОбъект.abonent_num = ВРег(СокрЛП(ЭтотОбъект.Код));
	АбонОбъект.abonent_type = ВРег(СокрЛП(ТипФмс));
	АбонОбъект.additions = "Z";
	АбонОбъект.custom = "";
	
	// Выполним запись объекта
	//-------------------------------------------------------------------------------------------------
	Попытка
		// С 18.11.2019 не пишем в абоненты
		//АбонОбъект.Записать();
	Исключение
		ТекстСообщения = СокрЛП(ЭтотОбъект.Код) + " - при записи объекта в таблицу ";
		ТекстСообщения = ТекстСообщения + "ABONENTS произошла ошибка источника данных ";
		ТекстСообщения = ТекстСообщения + СокрЛП(СерверИмя) + ": " + СокрЛП(ОписаниеОшибки());
		Сообщить(ТекстСообщения);
		Отказ = Истина;
	КонецПопытки;
КонецПроцедуры

Процедура ПриЗаписиТелАбонентыУдалить(СерверСсылка)

// Процедура удаляет записи о телефоне из таблиц ABONENTS на домашнем сервере и на сервере FMC
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(СерверСсылка.ИсточникДанных)) Тогда
		ТелНомер = ВРег(СокрЛП(ЭтотОбъект.Код));
		СерверИмя = СокрЛП(СерверСсылка.ИсточникДанных);
		Попытка
			АбонСсылка="";
			АбонСсылка = ВнешниеИсточникиДанных[СерверИмя].Таблицы.ТелАбоненты.НайтиПоПолю("abonent_num",ТелНомер);
		Исключение
			Данные = "СерверСсылка = "+СерверСсылка;
			Комментарий = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("ПриЗаписиТелАбонентыУдалить", УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.ТелВнутренние, Данные, Комментарий);
		КонецПопытки;
		Если (ЗначениеЗаполнено(АбонСсылка)) Тогда
			АбонСсылка.ПолучитьОбъект().Удалить();
		КонецЕсли;
	КонецЕсли;

// Если переданный Сервер не является сервером FMC, то выполним удаление записи и с сервера FMC
//-------------------------------------------------------------------------------------------------
	Если (СерверСсылка <> Константы.СерверФМС.Получить()) Тогда
		ПриЗаписиТелАбонентыУдалить(Константы.СерверФМС.Получить());
	КонецЕсли;
КонецПроцедуры
