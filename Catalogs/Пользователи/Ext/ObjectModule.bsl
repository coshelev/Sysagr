Процедура ОбработкаПроверкиЗаполнения(Отказ,ПроверяемыеРеквизиты)

// Обработка предопределенного объекта
// Убедимся в том что объект не деактивирован
//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.Предопределенный = Истина) И (ЭтотОбъект.Активность = Ложь) Тогда
		ТекстСообщения = "Пользователь с наименованием """ + СокрЛП(ЭтотОбъект.Наименование);
		ТекстСообщения = ТекстСообщения + """ является предопределенным. Деактивация запрещена";
		Сообщить(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

// Если текущий объект деактивирован, то отключим проверку некоторых реквизитов
//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.Активность = Ложь) Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("АутентификацияПараметр"));
		ЭтотОбъект.АутентификацияСтандартная = Истина;

// Если текущий объект активен, то нормализуем некоторые реквизиты
//-------------------------------------------------------------------------------------------------
	Иначе
		ЭтотОбъект.АутентификацияПараметр = СокрЛП(ЭтотОбъект.АутентификацияПараметр);
		ЭтотОбъект.Наименование = СокрЛП(ЭтотОбъект.Наименование);

// Проверим на дублирование по Наименованию
//-------------------------------------------------------------------------------------------------
		ТекстЗапроса = "
		|SELECT	COUNT(*) AS Всего
		|FROM	Справочник.Пользователи
		|WHERE	(Ссылка <> &ЭтотОбъект) И (Наименование = &Наименование)";

		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ЭтотОбъект",ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("Наименование",ЭтотОбъект.Наименование);
		Результат = Запрос.Выполнить().Выбрать();

		Если (Результат.Следующий()) И (Результат.Всего > 0) Тогда
			ТекстСообщения = "Пользователь с наименованием """ + СокрЛП(ЭтотОбъект.Наименование);
			ТекстСообщения = ТекстСообщения + """ уже существует в справочнике пользователей";
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

// Сформируем реквизит "УчетнаяЗаписьИБ"
//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.Предопределенный = Истина) Тогда
		ЭтотОбъект.УчетнаяЗаписьИБ = СокрЛП(ЭтотОбъект.ИмяПредопределенныхДанных);
	ИначеЕсли (ЭтотОбъект.Активность = Истина) Тогда
		ЭтотОбъект.УчетнаяЗаписьИБ = СокрЛП(ЭтотОбъект.Наименование);
	Иначе
		ЭтотОбъект.УчетнаяЗаписьИБ = "";
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если (НЕ ЭтотОбъект.ПроверитьЗаполнение()) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Обработаем создание, корректировку или удаление пользователя информационной базы
	// Обработаем ситуацию при которой учетная запись пользователя ИБ требует удаления
	//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(ЭтотОбъект.Ссылка) И (ЭтотОбъект.Предопределенный = Ложь)) Тогда
		СтарИмя = ВРег(СокрЛП(ЭтотОбъект.Ссылка.УчетнаяЗаписьИБ));
		НовИмя = ВРег(СокрЛП(ЭтотОбъект.УчетнаяЗаписьИБ));
		
		Если (СтарИмя <> НовИмя) Тогда
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(ЭтотОбъект.Ссылка.УчетнаяЗаписьИБ));
			
			Если (ПользовательИБ <> Неопределено) Тогда
				ПользовательИБ.Удалить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Если реквизит "УчетнаяЗаписьИБ" не заполнен (объект деактивирован)
	//-------------------------------------------------------------------------------------------------
	Если (НЕ ЗначениеЗаполнено(ЭтотОбъект.УчетнаяЗаписьИБ)) Тогда
		Возврат;
	КонецЕсли;
	
	// Найдем пользователя ИБ с учетной записью, заданной в объекте. Если не найдем, то создадим нового
	//-------------------------------------------------------------------------------------------------
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(ЭтотОбъект.УчетнаяЗаписьИБ));
	
	Если (ПользовательИБ = Неопределено) Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	КонецЕсли;
	
	// Выполним корректировку основных реквизитов
	//-------------------------------------------------------------------------------------------------
	ПользовательИБ.ПолноеИмя = СокрЛП(ЭтотОбъект.Наименование);
	ПользовательИБ.Имя = СокрЛП(ЭтотОбъект.УчетнаяЗаписьИБ);
	ПользовательИБ.Язык = Метаданные.Языки.Русский;
	
	// Настроим реквизиты отвечающие за авторизацию
	//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.АутентификацияСтандартная = Истина) Тогда
		ПользовательИБ.Пароль = СокрЛП(ЭтотОбъект.АутентификацияПараметр);
		ПользовательИБ.АутентификацияСтандартная = Истина;
		ПользовательИБ.ПоказыватьВСпискеВыбора = Истина;
		ПользовательИБ.ЗапрещеноИзменятьПароль = Ложь;
		ПользовательИБ.АутентификацияОС = Ложь;
		ПользовательИБ.ПользовательОС = "";
	Иначе
		ПользовательИБ.ПользовательОС = СокрЛП(ЭтотОбъект.АутентификацияПараметр);
		ПользовательИБ.АутентификацияСтандартная = Ложь;
		ПользовательИБ.ЗапрещеноИзменятьПароль = Истина;
		ПользовательИБ.ПоказыватьВСпискеВыбора = Ложь;
		ПользовательИБ.АутентификацияОС = Истина;
		ПользовательИБ.Пароль = "";
	КонецЕсли;
	
	// Если в структуре "ДополнительныеСвойства" передана информация о наборе ролей, то скорректируем
	// набор ролей пользователя информационной базы
	//-------------------------------------------------------------------------------------------------
	Если (ЭтотОбъект.ДополнительныеСвойства.Свойство("Роли") = Истина) Тогда
		СписокРолей = СтрЗаменить(ЭтотОбъект.ДополнительныеСвойства.Роли,",",Символы.ПС);
		ПользовательИБ.Роли.Очистить();
		
		Для ТекСтрока = 1 По СтрЧислоСтрок(СписокРолей) Цикл
			ИмяРоли = СокрЛП(СтрПолучитьСтроку(СписокРолей,ТекСтрока));
			Попытка ПользовательИБ.Роли.Добавить(Метаданные.Роли[ИмяРоли]); Исключение КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	//Доступные целевые точки сформируй
	//----------------------------------
	СформируйДоступныеЦелевыеТочки();
		
	// Выполним запись пользователя информационной базы
	//-------------------------------------------------------------------------------------------------
	Попытка
		ПользовательИБ.Записать();
	Исключение
		ТекстСообщения = "При записи пользователя информационной базы с именем [" + СокрЛП(ЭтотОбъект.Наименование);
		ТекстСообщения = ТекстСообщения + "] произошла ошибка: " + СокрЛП(ОписаниеОшибки());
		Сообщить(ТекстСообщения);
		Отказ = Истина;
	КонецПопытки;
КонецПроцедуры

Процедура СформируйДоступныеЦелевыеТочки()
	
	ДоступныеЦелевыеТочки.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Рег.ТочкаЦелевая КАК Ссылка
	|ИЗ
	|	РегистрСведений.АгентыЦелевые КАК Рег
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыПривязка КАК Прив
	|		ПО (Прив.Владелец В ИЕРАРХИИ (&Подразделения))
	|			И (Прив.Объект = Рег.Телефон)";

	Запрос.УстановитьПараметр("Подразделения",ЭтотОбъект.Подразделения.ВыгрузитьКолонку("Подразделение"));

	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Новая = ДоступныеЦелевыеТочки.Добавить();
		Новая.ЦелеваяТочка = Выборка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры
