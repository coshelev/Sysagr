&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)

// Если объект не новый, то проверим есть ли у него подчиненные элементы
// Если подчиненные элементы найдены, значит этот номер является пилотирующим для телефонной серии
// Скроем группу "Родитель", т.к. у самостоятельного номера Родителя быть не может
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(Объект.Ссылка)) Тогда
		ТекстЗапроса = "
		|SELECT	Код
		|FROM	Справочник.ТелВнешние
		|WHERE	(Родитель = &ЭтотОбъект)
		|ORDER	BY Код";

		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ЭтотОбъект",Объект.Ссылка);
		РезультатМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");

		ЭтаФорма.СписокПодчиненных.Очистить();
		ЭтаФорма.СписокПодчиненных.ЗагрузитьЗначения(РезультатМассив);
		Элементы.ГруппаРодитель.Видимость = (ЭтаФорма.СписокПодчиненных.Количество() = 0);

// Перенесем ТЧ "Варианты" с вариантами написания номера в список значений
//-------------------------------------------------------------------------------------------------
		ЭтаФорма.СписокВариантов.Очистить();
		ЭтаФорма.СписокВариантов.ЗагрузитьЗначения(Объект.Варианты.Выгрузить().ВыгрузитьКолонку("Код"));
	КонецЕсли;

// Настроим "СписокВариантов" на ввод только строк
//-------------------------------------------------------------------------------------------------
	КвалификаторНомера = Новый КвалификаторыСтроки(11,ДопустимаяДлина.Переменная);
	ЭтаФорма.СписокВариантов.ТипЗначения = Новый ОписаниеТипов("Строка",,,,КвалификаторНомера);

// Сформируем информацию о владельце
//-------------------------------------------------------------------------------------------------
	ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);
	Элементы.НадписьВладелец.Видимость = Ложь;

	Если (ЗначениеЗаполнено(ВладСсылка)) Тогда
		Темп = СокрЛП(ВладСсылка.ТочкаРазмещения);
		Темп = Темп + ", " + СокрЛП(ВладСсылка.Наименование);
		Элементы.НадписьВладелец.Заголовок = СокрЛП(Темп);
		Элементы.НадписьВладелец.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОтображения(Элемент = Неопределено)

// Видимость группы "ГруппаПараметры"
//-------------------------------------------------------------------------------------------------
	Доступно = (НЕ ЗначениеЗаполнено(Объект.Родитель));
	Элементы.ГруппаПараметры.Видимость = Доступно;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись",Объект.Ссылка,ЭтаФорма);
	ПриСозданииНаСервере(Ложь,Истина);
	ПриОткрытии(Ложь);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура РодительНачалоВыбора(Элемент,ДанныеВыбора,СтандартнаяОбработка)

// Заполненный реквизит "Родитель" указывает на то, что текущий номер не является самостоятельным,
// а включен в серию телефонных номеров. Серия управляется номером, на который указывает Родитель
// Предоставим пользователю возможность выбрать Родителя для текущего номера
//-------------------------------------------------------------------------------------------------
	Форма = ПолучитьФорму("Справочник.ТелВнешние.ФормаВыбора",,Элемент);
	СтандартнаяОбработка = Ложь;

	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Родитель");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование		= Истина;

	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Код");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеСодержит;
	ЭлементОтбора.ПравоеЗначение	= ВРег(СокрЛП(Объект.Код));
	ЭлементОтбора.Использование		= Истина;
	Форма.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура СписокВариантовПриИзменении(Элемент)

// Перенесем данные из списка значений в ТЧ "Варианты"
//-------------------------------------------------------------------------------------------------
	Объект.Варианты.Очистить();

	Для Каждого ТекСтрока Из ЭтаФорма.СписокВариантов Цикл
		Если (ЗначениеЗаполнено(ТекСтрока.Значение)) Тогда
			НовСтрока = Объект.Варианты.Добавить();
			НовСтрока.Код = ВРег(СокрЛП(ТекСтрока.Значение));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НадписьВладелецНажатие(Элемент)
	Попытка
		ВладСсылка = Телефония.ВладелецПолучить(Объект.Ссылка);
		ОткрытьЗначение(ВладСсылка);
	Исключение
	КонецПопытки;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура РаспределениеОчередьНачалоВыбора(Элемент,ДанныеВыбора,СтандартнаяОбработка)

// Предоставим пользователю выбор рекомендуемой очереди из тех, что расположены на сервере
// текущего выбранного в строке контакт-центра
//-------------------------------------------------------------------------------------------------
	Если (Элементы.Распределение.ТекущиеДанные <> Неопределено) Тогда
		ТекДанные = Элементы.Распределение.ТекущиеДанные;
		ТелОчередь = ЗначенияСервера.ПолучитьЗначениеРеквизита(ТекДанные.КонтактЦентр,"Очередь");
		ТелСервер = ЗначенияСервера.ПолучитьЗначениеРеквизита(ТелОчередь,"Сервер");

		Если (ЗначениеЗаполнено(ТелСервер)) Тогда
			МассивПараметров = Новый Массив();
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Сервер",ТелСервер));
			Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

