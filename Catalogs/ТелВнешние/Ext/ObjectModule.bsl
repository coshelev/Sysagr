Процедура ОбработкаПроверкиЗаполнения(Отказ,ПроверяемыеРеквизиты)

// Если реквизит "Родитель" заполнен
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(ЭтотОбъект.Родитель)) Тогда
		ЭтотОбъект.КонтактЦентр = ЭтотОбъект.Родитель.КонтактЦентр;
		ЭтотОбъект.Назначение = ЭтотОбъект.Родитель.Назначение;
		ЭтотОбъект.Провайдер = ЭтотОбъект.Родитель.Провайдер;
		ЭтотОбъект.КодГорода = ЭтотОбъект.Родитель.КодГорода;
		ЭтотОбъект.Сервер = ЭтотОбъект.Родитель.Сервер;
		ЭтотОбъект.ЕстьИсходящие = Ложь;

		ЭтотОбъект.Распределение.Очистить();
		ЭтотОбъект.Распределение.Загрузить(ЭтотОбъект.Родитель.Распределение.Выгрузить());
	КонецЕсли;

// Нормализация реквизитов
//-------------------------------------------------------------------------------------------------
	ЭтотОбъект.Код = ВРег(СокрЛП(ЭтотОбъект.Код));
	ЭтотОбъект.Назначение = СокрЛП(ЭтотОбъект.Назначение);
	ЭтотОбъект.КодГорода = ВРег(СокрЛП(ЭтотОбъект.КодГорода));

// Если код элемента (фактически это префикс "8" + номер телефона) не равен 11 знакам - ошибка
//-------------------------------------------------------------------------------------------------
	Если (СтрДлина(СокрЛП(ЭтотОбъект.Код)) <> 11) Тогда
		ТекстСообщения = "Код телефона должен содержать 11 цифр, включая префикс ""8""";
		Сообщить(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

// Сформируем реквизит "Наименование"
//-------------------------------------------------------------------------------------------------
	ЭтотОбъект.Наименование = ВРег(СокрЛП(ЭтотОбъект.Код));

	Если (ЗначениеЗаполнено(ЭтотОбъект.Родитель)) Тогда
		ЭтотОбъект.Наименование = ЭтотОбъект.Наименование + " (в серии ";
		ЭтотОбъект.Наименование = ЭтотОбъект.Наименование + СокрЛП(ЭтотОбъект.Родитель.Код) + ")";
	КонецЕсли;

// Заполним ТЧ "ВариантыНомера"
// Сразу добавим в качестве варианта текущий номер телефона
//-------------------------------------------------------------------------------------------------
	НовСтрока = ЭтотОбъект.Варианты.Добавить();
	НовСтрока.Код = ВРег(СокрЛП(ЭтотОбъект.Код));

// Если номер телефона начинается с кодов "8800", "8804", "8808", то больше вариантов не добавляем
//-------------------------------------------------------------------------------------------------
	Глобальный = (Лев(ЭтотОбъект.Код,4) = "8800");
	Глобальный = Глобальный ИЛИ (Лев(ЭтотОбъект.Код,4) = "8804");
	Глобальный = Глобальный ИЛИ (Лев(ЭтотОбъект.Код,4) = "8808");

	Если (Глобальный = Ложь) Тогда
		НомерБезПрефикса = Конвертация.ТелефонВнешнийНормализовать(ЭтотОбъект.Код,ЭтотОбъект.КодГорода);

		НовСтрока = ЭтотОбъект.Варианты.Добавить();
		НовСтрока.Код = ВРег(СокрЛП(НомерБезПрефикса));

		НовСтрока = ЭтотОбъект.Варианты.Добавить();
		НовСтрока.Код = "7" + ВРег(СокрЛП(НомерБезПрефикса));

		НовСтрока = ЭтотОбъект.Варианты.Добавить();
		НовСтрока.Код = "8" + ВРег(СокрЛП(НомерБезПрефикса));
	КонецЕсли;

// Свернем и отсортируем список вариантов написания номера телефона
//-------------------------------------------------------------------------------------------------
	ЭтотОбъект.Варианты.Свернуть("Код");
	ЭтотОбъект.Варианты.Сортировать("Код");
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если (НЕ ЭтотОбъект.ПроверитьЗаполнение()) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Дубли = ЕстьДубли();
	
	Если ЗначениеЗаполнено(Дубли) Тогда
		Отказ = Истина;
		ЗаписьЖурналаРегистрации("ТелВнешние. В записи отказано: образуются дубли", УровеньЖурналаРегистрации.Ошибка, , Дубли);
		Сообщить(СтрШаблон("В записи отказано: образуются дубли %1", Дубли)); 
	КонецЕсли;
КонецПроцедуры  

Функция ЕстьДубли()
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ			Код,	КОЛИЧЕСТВО(Код) КАК Количество
	|ИЗ 				Справочник.ТелВнешние
	|СГРУППИРОВАТЬ ПО 	Код
	|ИМЕЮЩИЕ			КОЛИЧЕСТВО(Код) > 1";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Стр		= "";
	Пока Выборка.Следующий() Цикл
		Стр = Стр + ";" + Выборка.Код;	
	КонецЦикла;    
	Возврат Стр;
КонецФункции
