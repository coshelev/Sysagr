&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)

// Сформируем сведения о принадлежности элемента
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(Объект.Родитель)) Тогда
		Темп = "Точка размещения: " + СокрЛП(Объект.ТочкаРазмещения.Наименование);
		Темп = Темп + ", Родитель: " + СокрЛП(Объект.Родитель.Наименование);
		Элементы.НадписьПринадлежность.Заголовок = СокрЛП(Темп);
		Элементы.НадписьПринадлежность.Гиперссылка = Истина;
	Иначе
		Темп = СокрЛП(Объект.ТочкаРазмещения.Наименование);
		Элементы.НадписьПринадлежность.Заголовок = СокрЛП(Темп);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТелефоныСформироватьНаСервере();
	ОбновлениеОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОтображения(Элемент = Неопределено)

// Сформируем заголовок для формы
//-------------------------------------------------------------------------------------------------
	Темп = ?(ЗначениеЗаполнено(Объект.Родитель),СокрЛП(Объект.Родитель) + ": ","");
	Темп = Темп + СокрЛП(Объект.Наименование);
	ЭтаФорма.Заголовок = СокрЛП(Темп);

// Доступность реквизитов отвечающих за внешние исходящие звонки
//-------------------------------------------------------------------------------------------------
	Доступно = (Объект.ИсхЗапрет = Ложь);
	Элементы.ГруппаИсходящиеНастройки.Видимость = Доступно;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись",Объект.Ссылка,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия,Параметр,Источник)
	ТелефоныСформировать(Неопределено);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура НадписьПринадлежностьНажатие(Элемент)
	Попытка
		ОткрытьЗначение(Объект.Родитель);
	Исключение
	КонецПопытки;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ИсхЗапретПриИзменении(Элемент)
	Если (Объект.ИсхЗапрет = Истина) Тогда
		Объект.ИсхЗапись = Ложь;
	КонецЕсли;

	ОбновлениеОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ИсхКаналПриИзменении(Элемент)
	Если (НЕ ЗначениеЗаполнено(Объект.ИсхКанал)) Тогда
		Объект.ИсхЗапрет = Истина;
		Объект.ИсхЗапись = Ложь;
	КонецЕсли;

	ОбновлениеОтображения();
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ТелефоныСформировать(Команда)
	ТелефоныСформироватьНаСервере();
	ОбновлениеОтображения();
КонецПроцедуры

&НаСервере
Процедура ТелефоныСформироватьНаСервере()

// Проверим заполненность реквизитов
//-------------------------------------------------------------------------------------------------
	Доступно = ЗначениеЗаполнено(Объект.Ссылка);
	ЭтаФорма.Телефоны.Очистить();

	Если (Доступно = Ложь) Тогда
		Возврат;
	КонецЕсли;

// Получим все телефоны закрепленные за объектом
//-------------------------------------------------------------------------------------------------
	ТЗТемп = Телефония.ТелефоныВладельцаПолучить(Объект.Ссылка);

	Для Каждого ТекСтрока Из ТЗТемп Цикл
		НовСтрока = ЭтаФорма.Телефоны.Добавить();
		НовСтрока.Комментарий = СокрЛП(ТекСтрока.Комментарий);
		НовСтрока.Тип = СокрЛП(ТекСтрока.Тип);
		НовСтрока.Ссылка = ТекСтрока.Телефон;
		НовСтрока.Наименование = СокрЛП(ТекСтрока.Телефон);

// Получим сведения о наличии дополнительных опций на номере
//-------------------------------------------------------------------------------------------------
		Если (ВРег(СокрЛП(ТекСтрока.Тип)) = "ВНУТРЕННИЙ") Тогда
			СтрСостояние = Телефония.ТелВнутреннийСостояниеПолучить(ТекСтрока.Телефон);
			Доступно = (СтрСостояние <> Неопределено) И (ЗначениеЗаполнено(СтрСостояние.АбонСсылка));
			СписокОпций = ?(Доступно,СтрСостояние.АбонСсылка.additions,"");

			Если (ЗначениеЗаполнено(СписокОпций)) Тогда
				НовСтрока.Наименование = НовСтрока.Наименование + " (" + ВРег(СокрЛП(СписокОпций)) + ")";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныДобавить(Команда)

// Сформируем имя формы для выбора добавляемого объекта
//-------------------------------------------------------------------------------------------------
	Если (Команда.Имя = "ТелОчередьДобавить") Тогда
		ФормаВыбора = "ТелОчереди";
	ИначеЕсли (Команда.Имя = "ТелВнешнийДобавить") Тогда
		ФормаВыбора = "ТелВнешние";
	ИначеЕсли (Команда.Имя = "ТелМобильныйДобавить") Тогда
		ФормаВыбора = "ТелМобильные";
	Иначе
		ФормаВыбора = "ТелВнутренние";
	КонецЕсли;

// Откроем форму выбора
//-------------------------------------------------------------------------------------------------
	ФормаВыбора = "Справочник." + СокрЛП(ФормаВыбора) + ".ФормаВыбора";
	СтрПараметры = Новый Структура("ВыборСвободного",Истина);
	Результат = ОткрытьФормуМодально(ФормаВыбора,СтрПараметры);

	Если (Результат = Неопределено) Тогда
		Возврат;
	КонецЕсли;

// Если пользователь выбрал телефон
// Сохраним все изменения выполненные в объекте
// Назначим текущий объект владельцем для выбранного телефона
//-------------------------------------------------------------------------------------------------
	Если (ЭтаФорма.Записать() = Истина) Тогда
		Телефония.ВладелецНазначить(Результат,Объект.Ссылка);
		ТелефоныСформировать(Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныПередУдалением(Элемент,Отказ)

// В зависимости от типа удаляемого объекта
//-------------------------------------------------------------------------------------------------
	Если (Элемент.ТекущиеДанные <> Неопределено) Тогда
		Телефония.ВладелецОчистить(Элемент.ТекущиеДанные.Ссылка);
		ТелефоныСформировать(Неопределено);
	КонецЕсли;

	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныВыбор(Элемент,ВыбраннаяСтрока,Поле,СтандартнаяОбработка)
	Попытка
		ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
	Исключение
	КонецПопытки;

	СтандартнаяОбработка = Ложь;
КонецПроцедуры
