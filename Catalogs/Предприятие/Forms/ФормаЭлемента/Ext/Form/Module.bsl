&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)

// Линейный элемент справочника не может находиться вне группы
//-------------------------------------------------------------------------------------------------
	Если ЗначениеЗаполнено(Объект.Ссылка) И (НЕ ЗначениеЗаполнено(Объект.Родитель)) Тогда
		Сообщить("Линейное рабочее место должно обязательно принадлежать группе (подразделению)");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

// Сформируем сведения о принадлежности элемента
//-------------------------------------------------------------------------------------------------
	Темп = "Точка размещения: "+СокрЛП(Объект.ТочкаРазмещения.Наименование);
	Темп = Темп + ", Родитель: " + СокрЛП(Объект.Родитель.Наименование);
	Элементы.НадписьПринадлежность.Заголовок = СокрЛП(Темп);

//// Получим сведения о сумме компенсации за мобильную связь
////-------------------------------------------------------------------------------------------------
//	Если (ЗначениеЗаполнено(Объект.Ссылка)) Тогда
//		Компенсация = РегистрыСведений.ПредприятиеКомпенсации.СоздатьМенеджерЗаписи();
//		Компенсация.Владелец = Объект.Ссылка;
//		Компенсация.Прочитать();

//		Если (Компенсация.Выбран() = Истина) Тогда
//			ЭтаФорма.СуммаКомпенсации = Компенсация.Сумма;
//		КонецЕсли;
//	КонецЕсли;

// Заполним список выбора для элемента "Должность" всеми существующими значениями
//-------------------------------------------------------------------------------------------------
	ТекстЗапроса = "
	|SELECT	DISTINCT Должность
	|FROM	Справочник.Предприятие
	|WHERE	(ЭтоГруппа = Ложь) И (Должность <> """")
	|ORDER	BY Должность";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	РезультатМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Должность");
	Элементы.Должность.СписокВыбора.ЗагрузитьЗначения(РезультатМассив);
	
	//Если ВнешниеИсточникиДанных.AsteriskNnov.ПолучитьСостояние()=СостояниеВнешнегоИсточникаДанных.Подключен Тогда
	ТелефоныСформироватьНаСервере();
	//КонецЕсли;
	
	//Если форма вызвана из другой формы и переданы параметры
	Доступно = Истина;
	Доступно = Доступно И Не ЗначениеЗаполнено(Объект.Ссылка);
	Доступно = Доступно И Параметры.Свойство("Наименование");
	Доступно = Доступно И ЗначениеЗаполнено(Параметры.Наименование);
	Если Доступно Тогда
		Объект.Наименование = Параметры.Наименование;
		Объект.Снилс		= Параметры.Снилс;
		Объект.Должность	= Параметры.Должность;
		Объект.Состояние	= Перечисления.СостояниеЭлементаПредприятия.РабочееМесто;
		Объект.Холдер		= Справочники.Холдеры.НайтиПоНаименованию("ООО ""Луидор"" - Нижний Новгород");
		
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОУ_Сотрудники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОУ_Сотрудники КАК ОУ_Сотрудники
		|ГДЕ
		|	ОУ_Сотрудники.Снилс = &Снилс";
		Запрос.УстановитьПараметр("Снилс", Параметры.Снилс);
		РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
		Если Не РезультатЗапроса.Пустой() Тогда
			Объект.СотрудникОУ = РезультатЗапроса.Выгрузить()[0][0];
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОтображения(Элемент = Неопределено)

// Сформируем заголовок для формы
//-------------------------------------------------------------------------------------------------
	ЭтаФорма.Заголовок = ?(ЗначениеЗаполнено(Объект.Наименование),Объект.Наименование,Объект.Состояние);
	ЭтаФорма.Заголовок = СокрЛП(ЭтаФорма.Заголовок);

// Установим видимость реквизита "Должность"
// Сформируем заголовок для реквизита "Наименование"
// Установим видимость группы "ГруппаКомпенсация"
//-------------------------------------------------------------------------------------------------
	РабочееМесто = (Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостояниеЭлементаПредприятия.РабочееМесто"));
	Элементы.ГруппаКомпенсация.Видимость = (РабочееМесто И ЭтаФорма.ЕстьМобильные);
	Элементы.Наименование.Заголовок = ?(РабочееМесто,"Сотрудник","Элемент");
	Элементы.Должность.Видимость = РабочееМесто;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Телефония.ВладелецУстановитьКомпенсацию(Объект.Ссылка,ЭтаФорма.СуммаКомпенсации);
	Оповестить("Запись",Объект.Ссылка,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия,Параметр,Источник)
	ТелефоныСформировать(Неопределено);
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ДолжностьАвтоПодбор(Элемент,Текст,ДанныеВыбора,Параметры,Ожидание,СтандартнаяОбработка)

// Если параметр "Текст" заполнен, то выполним подбор должностей, у которых введенный Текст
// содержится в наименовании должности
//-------------------------------------------------------------------------------------------------
	Если (СтрДлина(СокрЛП(Текст)) > 1) Тогда
		ДанныеВыбора = Новый СписокЗначений;
		ИскомаяСтрока = ВРег(СокрЛП(Текст));
		СтандартнаяОбработка = Ложь;

		Для Каждого ТекСтрока Из Элементы.Должность.СписокВыбора Цикл
			Если (Найти(ВРег(СокрЛП(ТекСтрока.Значение)),ИскомаяСтрока)) Тогда
				ДанныеВыбора.Добавить(СокрЛП(ТекСтрока.Значение));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НадписьПринадлежностьНажатие(Элемент)
	Попытка
		ОткрытьЗначение(Объект.Родитель);
	Исключение
	КонецПопытки;
КонецПроцедуры

//-------------------------------------------------------------------------------------------------

&НаКлиенте
Процедура ТелефоныСформировать(Команда)
	ТелефоныСформироватьНаСервере();
	ОбновлениеОтображения();
КонецПроцедуры

&НаСервере
Процедура ТелефоныСформироватьНаСервере()

// Проверим заполненность реквизитов
//-------------------------------------------------------------------------------------------------
	Доступно = ЗначениеЗаполнено(Объект.Ссылка);
	ЭтаФорма.ЕстьМобильные = Ложь;
	ЭтаФорма.Телефоны.Очистить();

	Если (Доступно = Ложь) Тогда
		Возврат;
	КонецЕсли;

// Получим все телефоны закрепленные за объектом
//-------------------------------------------------------------------------------------------------
	ТЗТемп = Телефония.ТелефоныВладельцаПолучить(Объект.Ссылка);

	Для Каждого ТекСтрока Из ТЗТемп Цикл
		НовСтрока = ЭтаФорма.Телефоны.Добавить();
		НовСтрока.Комментарий = СокрЛП(ТекСтрока.Комментарий);
		НовСтрока.Тип = СокрЛП(ТекСтрока.Тип);
		НовСтрока.Ссылка = ТекСтрока.Телефон;
		НовСтрока.Наименование = СокрЛП(ТекСтрока.Телефон);

// Дополнительно получим сведения о наличии мобильных телефонов
//-------------------------------------------------------------------------------------------------
		Если (ВРег(СокрЛП(ТекСтрока.Тип)) = "МОБИЛЬНЫЙ") Тогда
			ЭтаФорма.ЕстьМобильные = Истина;
		КонецЕсли;

// Получим сведения о наличии дополнительных опций на номере
//-------------------------------------------------------------------------------------------------
		Если (ВРег(СокрЛП(ТекСтрока.Тип)) = "ВНУТРЕННИЙ") Тогда
			СтрСостояние = Телефония.ТелВнутреннийСостояниеПолучить(ТекСтрока.Телефон);
			Доступно = (СтрСостояние <> Неопределено) И (ЗначениеЗаполнено(СтрСостояние.АбонСсылка));
			СписокОпций = ?(Доступно,СтрСостояние.АбонСсылка.additions,"");

			Если (ЗначениеЗаполнено(СписокОпций)) Тогда
				НовСтрока.Наименование = НовСтрока.Наименование + " (" + ВРег(СокрЛП(СписокОпций)) + ")";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныДобавить(Команда)

// Сформируем имя формы для выбора добавляемого объекта
//-------------------------------------------------------------------------------------------------
	Если (Команда.Имя = "ТелОчередьДобавить") Тогда
		ФормаВыбора = "ТелОчереди";
	ИначеЕсли (Команда.Имя = "ТелВнешнийДобавить") Тогда
		ФормаВыбора = "ТелВнешние";
	ИначеЕсли (Команда.Имя = "ТелМобильныйДобавить") Тогда
		ФормаВыбора = "ТелМобильные";
	Иначе
		ФормаВыбора = "ТелВнутренние";
	КонецЕсли;

// Откроем форму выбора
//-------------------------------------------------------------------------------------------------
	ФормаВыбора = "Справочник." + СокрЛП(ФормаВыбора) + ".ФормаВыбора";
	СтрПараметры = Новый Структура("ВыборСвободного",Истина);
	Результат = ОткрытьФормуМодально(ФормаВыбора,СтрПараметры);

	Если (Результат = Неопределено) Тогда
		Возврат;
	КонецЕсли;

// Если пользователь выбрал телефон
// Сохраним все изменения выполненные в объекте
// Назначим текущий объект владельцем для выбранного телефона
//-------------------------------------------------------------------------------------------------
	Если (ЭтаФорма.Записать() = Истина) Тогда
		Телефония.ВладелецНазначить(Результат,Объект.Ссылка);
		ТелефоныСформировать(Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныПередУдалением(Элемент,Отказ)

// В зависимости от типа удаляемого объекта
//-------------------------------------------------------------------------------------------------
	Если (Элемент.ТекущиеДанные <> Неопределено) Тогда
		Телефония.ВладелецОчистить(Элемент.ТекущиеДанные.Ссылка);
		ТелефоныСформировать(Неопределено);
		ЭтаФорма.Записать();
	КонецЕсли;

	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныВыбор(Элемент,ВыбраннаяСтрока,Поле,СтандартнаяОбработка)
	Попытка
		ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
	Исключение
	КонецПопытки;

	СтандартнаяОбработка = Ложь;
КонецПроцедуры
