
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	//Выполни запрос в базе ОУ по выставкам и встречам
	//-------------------------------------------------
	//ДатаНачала					=	Период.ДатаНачала;
	//ДатаОкончания				=	Период.ДатаОкончания;
	
	// Заполнит ТЧ Звонки, Встречи, Задачи по эл. почте
	//-----------------------------------------------------
	СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДОБАВИТЬМЕСЯЦ(Период.ДатаНачала, -2), Период.ДатаОкончания, ДОБАВИТЬМЕСЯЦ(Период.ДатаНачала, -2), Период.ДатаОкончания, "");
	
	ЗначениеПоУмолчанию = Ложь;

	 //Статусы звонков в ОУ с 07.05.2020
	 //--------------------------------
	 //Первое слово ОТКАЗ/ВРАБОТЕ означет что произошло со звонком (отказ от обратботки или создание/привязка к сделке)
	 
	//ЗВОНОК-АВТОПРИВЯЗКА   , пропущенный звонок закрывается следующим состоявшимся звонком
	//ОТКАЗ-ВРАБОТЕ			, означает в работе у другого менеджера
	//ОТКАЗ-КЛИЕНТ			, означает клиент отказался от покупки
	//ОТКАЗ-НЕЦЕЛЕВОЙ       , означает, что звонок не связан с покупкой/продажей автомобиля
	//ОТКАЗ-ОПЕРАТОР		, означает, что менеджер откзывается от обработки этого звонка, не будет перезванивать. Устанавливается состояние "Справочник.СтатусыОбъектов.ОбщийОтменен" 
	//РАБОТА-АВТОПРИВЯЗКА   , звонок автоматически привязался к существующей сделке
	//РАБОТА-НОВЫЙ			, значит по звонку создана новая сделка
	//РАБОТА-ПРИВЯЗКА       , значит менеджер сам привязал звонок к существущей сделке
	//<пустая строка>		, значит в состоянии Новый ("ожидает обработки")
	
	//ВТ00_ЦелевыеАгрегатора - звонки признанные целевыми в Агрегаторе и прошедшие через контакт-центр
	//ВТ01_ЦелевыеОУ	- звонки целевые ОУ
	
	//	КоличествоА - признанный целевым в Агрегаторе, прошедный через контакт-центр, но отсутствующий в целевых ОУ
	//	КоличествоБ - признанный целевым в ОУ, но не целевой в Агрегаторе
    //	КоличествоГ - целевой в Агр, нет в ОУ, но это не ошибка, сотрудник определился, но он не принял звонок. Т.е. это непринятый
	//	Количество1 - целевой ОУ, не используется, в резерве
	//	Количество2 - целевой ОУ, ожидает обработки, состояние = новый, статус = <пустая строка>
	//	Количество3 - целевой в ОУ, клиент отказался от покупки, статус = ОТКАЗ-КЛИЕНТ
	//	Количество4 - нецелевой в ОУ, статус = "ОТКАЗ-НЕЦЕЛЕВОЙ"
	//	Количество5 - целевой, статус = "ЗВОНОК-АВТОПРИВЯЗКА", в основании этого звонка - звонок ,которым перезвонили 
	//	Количество6 - нецелевой,статус= "ОТКАЗ-ОПЕРАТОР"
	//	Количество7 - целевой ОУ, повторный
	//	Количество8 -  целевой ОУ, создана сделка
	//	Количество81,
	//	КоличествоИтогоПоСтатусам - сумма количеств по разным статусам ОУ
	//	КоличествоОбщееБезПочты - общее количество звонков из ОУ, без учета статуса, т.е. с учетом ошибочных
	//	КоличествоЦелевыхБезПочты
	
   	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК ДатаЗвонка,
	|	Звонки.ЭтоВходящий КАК Входящий,
	|	Звонки.Принят КАК Принят,
	|	ЗвонкиДоп.ЦелеваяТочка КАК ЦелеваяТочка,
	|	ЗвонкиДоп.СотрудникОУ КАК Сотрудник,
	|	0 КАК КоличествоА,
	|	0 КАК КоличествоБ,
	|	0 КАК Количество1,
	|	0 КАК Количество2,
	|	0 КАК Количество3,
	|	0 КАК Количество4,
	|	0 КАК Количество5,
	|	0 КАК Количество6,
	|	0 КАК Количество7,
	|	0 КАК Количество8,
	|	0 КАК Количество9,
	|	0 КАК КоличествоИтогоПоСтатусам,
	|	0 КАК КоличествоОбщееБезПочты,
	|	0 КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой,
	|	0 КАК КоличествоЧатовЦелевых
	|ПОМЕСТИТЬ ВТ00_ЦелевыеАгрегатора
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиДоп КАК ЗвонкиДоп
	|		ПО Звонки.Сигнатура = ЗвонкиДоп.Сигнатура
	|ГДЕ
	|	Звонки.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -2) И &ДатаОкончания
	|	И ВЫБОР
	|			КОГДА Звонки.ЭтоВходящий
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Звонки.Инициатор В (&ТелефоныКонтактЦентра)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	|	Т.Сигнатура КАК Сигнатура,
	|	Т.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	Т.Входящий КАК Входящий,
	|	Т.Количество1 КАК Количество1,
	|	Т.Количество2 КАК Количество2,
	|	Т.Количество3 КАК Количество3,
	|	Т.Количество4 КАК Количество4,
	|	Т.Количество5 КАК Количество5,
	|	Т.Количество6 КАК Количество6,
	|	Т.Количество7 КАК Количество7,
	|	Т.Количество8 КАК Количество8,
	|	0 КАК Количество9,
	|	Т.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	Т.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	Т.КоличествоОбщееБезПочты КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой,
	|	1 КАК Принят,
	|	0 КАК КоличествоЧатовЦелевых
	|ПОМЕСТИТЬ ВТ01_ЦелевыеОУ_0
	|ИЗ
	|	&РеестрЦелевыхТек КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЧата КАК ДатаЗвонка,
	|	Т.Сигнатура КАК Сигнатура,
	|	Т.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	Т.ТочкаОформленияНаименование КАК ТочкаОформленияПредставление,
	|	ИСТИНА КАК Входящий,
	|	0 КАК Количество1,
	|	0 КАК Количество2,
	|	0 КАК Количество3,
	|	0 КАК Количество4,
	|	0 КАК Количество5,
	|	0 КАК Количество6,
	|	0 КАК Количество7,
	|	0 КАК Количество8,
	|	0 КАК Количество9,
	|	0 КАК КоличествоИтогоПоСтатусам,
	|	0 КАК КоличествоОбщееБезПочты,
	|	0 КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой,
	|	1 КАК Принят,
	|	1 КАК КоличествоЧатовЦелевых
	|ПОМЕСТИТЬ ВТ02_ЧатыЦелевыеОУ
	|ИЗ
	|	&Чаты КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.ДатаЗвонка КАК ДатаЗвонка,
	|	А.Сигнатура КАК Сигнатура,
	|	А.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	А.Входящий КАК Входящий,
	|	А.Количество1 КАК Количество1,
	|	А.Количество2 КАК Количество2,
	|	А.Количество3 КАК Количество3,
	|	А.Количество4 КАК Количество4,
	|	А.Количество5 КАК Количество5,
	|	А.Количество6 КАК Количество6,
	|	А.Количество7 КАК Количество7,
	|	А.Количество8 КАК Количество8,
	|	А.Количество9 КАК Количество9,
	|	А.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	А.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	А.КоличествоОбщее КАК КоличествоОбщее,
	|	А.КоличествоЦелевыхБезПочты КАК КоличествоЦелевыхБезПочты,
	|	А.КоличествоЦелевых КАК КоличествоЦелевых,
	|	А.ОбщийЦелевой КАК ОбщийЦелевой,
	|	А.Принят КАК Принят,
	|	А.КоличествоЧатовЦелевых КАК КоличествоЧатовЦелевых,
	|	ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка) КАК ТочкаЦелевая
	|ПОМЕСТИТЬ ВТ01_ЦелевыеОУ
	|ИЗ
	|	ВТ01_ЦелевыеОУ_0 КАК А
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Б.ДатаЗвонка,
	|	Б.Сигнатура,
	|	Б.СотрудникОУГУИД,
	|	Б.Входящий,
	|	Б.Количество1,
	|	Б.Количество2,
	|	Б.Количество3,
	|	Б.Количество4,
	|	Б.Количество5,
	|	Б.Количество6,
	|	Б.Количество7,
	|	Б.Количество8,
	|	Б.Количество9,
	|	Б.КоличествоИтогоПоСтатусам,
	|	Б.КоличествоОбщееБезПочты,
	|	Б.КоличествоОбщее,
	|	Б.КоличествоЦелевыхБезПочты,
	|	Б.КоличествоЦелевых,
	|	Б.ОбщийЦелевой,
	|	Б.Принят,
	|	Б.КоличествоЧатовЦелевых,
	|	ЕСТЬNULL(Г.Ссылка, ""<Точка целевая чата не определена>"")
	|ИЗ
	|	ВТ02_ЧатыЦелевыеОУ КАК Б
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТочкиЦелевые.КлючиВИсточникахДанных КАК Г
	|		ПО Б.ТочкаОформленияПредставление = Г.ПредставлениеКлюча
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ01.Сигнатура КАК Сигнатура,
	|	ВТ01.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	ВТ01.Входящий КАК Входящий,
	|	ВТ01.Количество1 КАК Количество1,
	|	ВТ01.Количество2 КАК Количество2,
	|	ВТ01.Количество3 КАК Количество3,
	|	ВТ01.Количество4 КАК Количество4,
	|	ВТ01.Количество5 КАК Количество5,
	|	ВТ01.Количество6 КАК Количество6,
	|	ВТ01.Количество7 КАК Количество7,
	|	ВТ01.Количество8 КАК Количество8,
	|	ВТ01.Количество9 КАК Количество9,
	|	ВТ01.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ01.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ01.КоличествоОбщееБезПочты КАК КоличествоОбщее,
	|	ВТ01.Количество1 + ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК КоличествоЦелевыхБезПочты,
	|	ВТ01.Количество1 + ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК КоличествоЦелевых,
	|	ВТ01.Количество1 + ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК ОбщийЦелевой,
	|	ВТ01.Принят КАК Принят,
	|	ВТ01.КоличествоЧатовЦелевых КАК КоличествоЧатовЦелевых,
	|	ЕСТЬNULL(СотрОУ.Ссылка, ЗНАЧЕНИЕ(Справочник.ОУ_Сотрудники.ПустаяСсылка)) КАК Сотрудник,
	|	ВТ01.ТочкаЦелевая КАК ТочкаЦелевая
	|ПОМЕСТИТЬ ВТ03_ЦелевыеОУ
	|ИЗ
	|	ВТ01_ЦелевыеОУ КАК ВТ01
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОУ_Сотрудники КАК СотрОУ
	|		ПО ВТ01.СотрудникОУГУИД = СотрОУ.ГУИД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ00.ДатаЗвонка, ВТ03.ДатаЗвонка) КАК ДатаЗвонка,
	|	ЕСТЬNULL(ВТ00.Сигнатура, ВТ03.Сигнатура) КАК Сигнатура,
	|	ЕСТЬNULL(ВТ00.ЦелеваяТочка, ВТ03.ТочкаЦелевая) КАК ТочкаЦелевая,
	|	ЕСТЬNULL(ВТ00.Сотрудник, ВТ03.Сотрудник) КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА НЕ ВТ00.Сигнатура ЕСТЬ NULL
	|				И ЕСТЬNULL(ВТ00.Принят, ЛОЖЬ) = ИСТИНА
	|				И ВТ03.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоА,
	|	ВЫБОР
	|		КОГДА НЕ ВТ03.Сигнатура ЕСТЬ NULL
	|				И ВТ00.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоБ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ00.Сигнатура ЕСТЬ NULL
	|				И ЕСТЬNULL(ВТ00.Принят, ЛОЖЬ) = ЛОЖЬ
	|				И ВТ03.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоГ,
	|	ЕСТЬNULL(ВТ03.Количество1, 0) КАК Количество1,
	|	ЕСТЬNULL(ВТ03.Количество2, 0) КАК Количество2,
	|	ЕСТЬNULL(ВТ03.Количество3, 0) КАК Количество3,
	|	ЕСТЬNULL(ВТ03.Количество4, 0) КАК Количество4,
	|	ЕСТЬNULL(ВТ03.Количество5, 0) КАК Количество5,
	|	ЕСТЬNULL(ВТ03.Количество6, 0) КАК Количество6,
	|	ЕСТЬNULL(ВТ03.Количество7, 0) КАК Количество7,
	|	ЕСТЬNULL(ВТ03.Количество8, 0) КАК Количество8,
	|	ЕСТЬNULL(ВТ03.Количество9, 0) КАК Количество9,
	|	ЕСТЬNULL(ВТ03.КоличествоИтогоПоСтатусам, 0) КАК КоличествоИтогоПоСтатусам,
	|	ЕСТЬNULL(ВТ03.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщееБезПочты,
	|	ЕСТЬNULL(ВТ03.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщее,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевыхБезПочты,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевых,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК ОбщийЦелевой,
	|	ЕСТЬNULL(ВТ00.Принят, ВТ03.Принят) КАК Принят,
	|	ЕСТЬNULL(ВТ00.КоличествоЧатовЦелевых, ВТ03.КоличествоЧатовЦелевых) КАК КоличествоЧатовЦелевых
	|ПОМЕСТИТЬ ВТ05_Звонки
	|ИЗ
	|	ВТ00_ЦелевыеАгрегатора КАК ВТ00
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ03_ЦелевыеОУ КАК ВТ03
	|		ПО ВТ00.Сигнатура = ВТ03.Сигнатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТ05.ДатаЗвонка, ДЕНЬ) КАК ДатаЗвонка,
	|	ВТ05.Сигнатура КАК Сигнатура,
	|	ВТ05.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ05.Сотрудник КАК Сотрудник,
	|	ВТ05.КоличествоА КАК КоличествоА,
	|	ВТ05.КоличествоБ КАК КоличествоБ,
	|	ВТ05.КоличествоГ КАК КоличествоГ,
	|	ВТ05.Количество1 КАК Количество1,
	|	ВТ05.Количество2 КАК Количество2,
	|	ВТ05.Количество3 КАК Количество3,
	|	ВТ05.Количество4 КАК Количество4,
	|	ВТ05.Количество5 КАК Количество5,
	|	ВТ05.Количество6 КАК Количество6,
	|	ВТ05.Количество7 КАК Количество7,
	|	ВТ05.Количество8 КАК Количество8,
	|	ВТ05.Количество9 КАК Количество9,
	|	ВТ05.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ05.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ05.КоличествоОбщее КАК КоличествоОбщее,
	|	ВТ05.КоличествоЦелевыхБезПочты + ВТ05.КоличествоГ КАК КоличествоЦелевыхБезПочты,
	|	ВТ05.КоличествоЦелевых + ВТ05.КоличествоГ КАК КоличествоЦелевых,
	|	ВТ05.ОбщийЦелевой + ВТ05.КоличествоГ КАК ОбщийЦелевой,
	|	ВТ05.КоличествоЧатовЦелевых КАК КоличествоЧатовЦелевых,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1 > 0
	|			ТОГДА ВТ05.КоличествоЦелевых / (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), КОНЕЦПЕРИОДА(&ДатаОкончания, МЕСЯЦ), ДЕНЬ) + 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщийЦелевойПрогноз,
	|	ВТ05.ТочкаЦелевая.Регион КАК РегионСтрокой,
	|	ВТ05.ТочкаЦелевая.НаправлениеДеятельности КАК НазваниеНаправления,
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ06
	|ИЗ
	|	ВТ05_Звонки КАК ВТ05
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ВТ05.ТочкаЦелевая) = ТИП(Справочник.ТочкиЦелевые)
	|				ТОГДА ВТ05.ТочкаЦелевая В (&ДоступныеЦелевыеТочки)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВТ05.ТочкаЦелевая.Родитель В ИЕРАРХИИ(&ГруппаЦелевыхТочек)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ06.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ06.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВЫБОР
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ТОГДА &Тек
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -1) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -1)
	|			ТОГДА &ТекМинус1
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -2) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -2)
	|			ТОГДА &ТекМинус2
	|	КОНЕЦ КАК ТипПериода,
	|	СУММА(ВТ06.КоличествоЦелевых) КАК КоличествоЦелевых
	|ПОМЕСТИТЬ ВТ07
	|ИЗ
	|	ВТ06 КАК ВТ06
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ06.ДатаЗвонка,
	|	ВТ06.ТочкаЦелевая,
	|	ВЫБОР
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ТОГДА &Тек
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -1) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -1)
	|			ТОГДА &ТекМинус1
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -2) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -2)
	|			ТОГДА &ТекМинус2
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ТОГДА &Тек
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -1) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -1)
	|			ТОГДА &ТекМинус1
	|		КОГДА ВТ06.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -2) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -2)
	|			ТОГДА &ТекМинус2
	|	КОНЕЦ <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка
	|ПОМЕСТИТЬ ВТ08_ВсеДаты
	|ИЗ
	|	&ВсеДаты КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	|	Д.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВЫБОР
	|		КОГДА Т.ДатаЗвонка МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ТОГДА &Тек
	|		КОГДА Т.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -1) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -1)
	|			ТОГДА &ТекМинус1
	|		КОГДА Т.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -2) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -2)
	|			ТОГДА &ТекМинус2
	|	КОНЕЦ КАК ТипПериода
	|ПОМЕСТИТЬ ВТ09_ВсеДатыТочки
	|ИЗ
	|	ВТ08_ВсеДаты КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВТ07.ТочкаЦелевая КАК ТочкаЦелевая
	|		ИЗ
	|			ВТ07 КАК ВТ07) КАК Д
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Т.ДатаЗвонка МЕЖДУ &ДатаНачала И &ДатаОкончания
	|				ТОГДА &Тек
	|			КОГДА Т.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -1) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -1)
	|				ТОГДА &ТекМинус1
	|			КОГДА Т.ДатаЗвонка МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -2) И ДОБАВИТЬКДАТЕ(&ДатаОкончания, МЕСЯЦ, -2)
	|				ТОГДА &ТекМинус2
	|		КОНЕЦ <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.ДатаЗвонка КАК ДатаЗвонка,
	|	А.ТочкаЦелевая КАК ТочкаЦелевая,
	|	А.ТипПериода КАК ТипПериода,
	|	ЕСТЬNULL(Т.КоличествоЦелевых, 0) КАК КоличествоЦелевых
	|ПОМЕСТИТЬ ВТ10_ЦелевыеТекДаты
	|ИЗ
	|	ВТ09_ВсеДатыТочки КАК А
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ07 КАК Т
	|		ПО А.ДатаЗвонка = Т.ДатаЗвонка
	|			И А.ТочкаЦелевая = Т.ТочкаЦелевая
	|			И А.ТипПериода = Т.ТипПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	|	Т.ТочкаЦелевая КАК ТочкаЦелевая,
	|	Т.ТипПериода КАК ТипПериода,
	|	СУММА(ЕСТЬNULL(Д.КоличествоЦелевых, 0)) КАК КоличествоЦелевыхПредыдущихДней
	|ПОМЕСТИТЬ ВТ11_ПредыдущиеДни
	|ИЗ
	|	ВТ10_ЦелевыеТекДаты КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ10_ЦелевыеТекДаты КАК Д
	|		ПО Т.ТочкаЦелевая = Д.ТочкаЦелевая
	|			И Т.ТипПериода = Д.ТипПериода
	|			И (Д.ДатаЗвонка < Т.ДатаЗвонка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ДатаЗвонка,
	|	Т.ТочкаЦелевая,
	|	Т.ТипПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	//|	Т.ТипПериода КАК ТипПериода,
	|	Т.ТочкаЦелевая КАК ТочкаЦелевая,
	|	Т.ТочкаЦелевая.Регион КАК РегионСтрокой,
	|	Т.ТочкаЦелевая.НаправлениеДеятельности КАК НазваниеНаправления,
	|	ВЫБОР
	|		КОГДА Т.ТипПериода = &Тек
	|			ТОГДА Т.КоличествоЦелевых
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевых,
	|	ВЫБОР
	|		КОГДА Т.ТипПериода = &ТекМинус1
	|			ТОГДА Т.КоличествоЦелевых
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевыхМинус1,
	|	ВЫБОР
	|		КОГДА Т.ТипПериода = &ТекМинус2
	|			ТОГДА Т.КоличествоЦелевых
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевыхМинус2,
	|	ВЫБОР
	|		КОГДА Т.ТипПериода = &Тек
	|			ТОГДА ЕСТЬNULL(Д.КоличествоЦелевыхПредыдущихДней, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевыхНар,
	|	ВЫБОР
	|		КОГДА Т.ТипПериода = &ТекМинус1
	|			ТОГДА ЕСТЬNULL(Д.КоличествоЦелевыхПредыдущихДней, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевыхНарМинус1,
	|	ВЫБОР
	|		КОГДА Т.ТипПериода = &ТекМинус2
	|			ТОГДА ЕСТЬNULL(Д.КоличествоЦелевыхПредыдущихДней, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевыхНарМинус2
	|ИЗ
	|	ВТ10_ЦелевыеТекДаты КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ11_ПредыдущиеДни КАК Д
	|		ПО Т.ТочкаЦелевая = Д.ТочкаЦелевая
	|			И Т.ТипПериода = Д.ТипПериода
	|			И (Д.ДатаЗвонка = Т.ДатаЗвонка)";
	
	//Все даты диапазона
	//------------------------
	ВсеДаты = Новый ТаблицаЗначений();
	ВсеДаты.Колонки.Добавить("ДатаЗвонка", Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));	
	Начало = ДОБАВИТЬМЕСЯЦ(Период.ДатаНачала, -2);
	Пока Начало <= Период.ДатаОкончания Цикл
		Нов = ВсеДаты.Добавить();
		Нов.ДатаЗвонка = Начало;
		Начало = Начало + 24*60*60;
	КонецЦикла;
	
 	Запрос.УстановитьПараметр("ДатаНачала", 				Период.ДатаНачала);
 	Запрос.УстановитьПараметр("ДатаОкончания", 				Период.ДатаОкончания);
	Запрос.УстановитьПараметр("РеестрЦелевыхТек", 			РеестрЦелевыхТек);
	Запрос.УстановитьПараметр("Чаты",						Чаты);
	Запрос.УстановитьПараметр("ДоступныеЦелевыеТочки",		ДоступныеЦелевыеТочки);
	Запрос.УстановитьПараметр("ТелефоныКонтактЦентра",		ТелефоныКонтактЦентра);
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек",			ГруппаЦелевыхТочек); 
	
	Запрос.УстановитьПараметр("ВсеДаты",					ВсеДаты); 
	
	Запрос.УстановитьПараметр("Тек",					"Текущий период");
	Запрос.УстановитьПараметр("ТекМинус1",				"Текущий период -1 мес");
	Запрос.УстановитьПараметр("ТекМинус2",				"Текущий период -2 мес");
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	
	//Определи количество дней
	//------------------------
	Начало 				= НачалоДня(Период.ДатаНачала);
	Окончание 			= НачалоДня(Период.ДатаОкончания);
	КоличествоДней 		= 0;
	КоличествоБудней 	= 0;
	КоличествоВыходных 	= 0;
	Пока Начало <= Окончание Цикл	
		КоличествоДней 		= КоличествоДней + 1;
		
		ДеньНедели 			= ДеньНедели(Начало);
		КоличествоБудней 	= ?(ДеньНедели < 6, (КоличествоБудней + 1), 	КоличествоБудней);
		КоличествоВыходных	= ?(ДеньНедели > 5, (КоличествоВыходных + 1), 	КоличествоВыходных);
	
		Начало				= Начало				+ 1*24*60*60;
	КонецЦикла;
	
	//Определи количество дней за месяц
	Начало 						= НачалоДня(Период.ДатаНачала);
	КоличествоБуднейВМесяце 	= 0;
	КоличествоВыходныхВМесяце 	= 0;
	Пока Начало <= КонецМесяца(Окончание) Цикл		
		ДеньНедели 					= ДеньНедели(Начало);
		КоличествоБуднейВМесяце  	= ?(ДеньНедели < 6, (КоличествоБуднейВМесяце + 1), 		КоличествоБуднейВМесяце);
		КоличествоВыходныхВМесяце	= ?(ДеньНедели > 5, (КоличествоВыходныхВМесяце + 1), 	КоличествоВыходныхВМесяце);
		Начало						= Начало + 1*24*60*60;
	КонецЦикла;
	
	Даты = Новый ТаблицаЗначений();
	Даты.Колонки.Добавить("КоличествоДней", 			Новый ОписаниеТипов("Число"));
	Даты.Колонки.Добавить("КоличествоБудней",			Новый ОписаниеТипов("Число"));
	Даты.Колонки.Добавить("КоличествоВыходных", 		Новый ОписаниеТипов("Число"));
	Даты.Колонки.Добавить("КоличествоБуднейВМесяце", 	Новый ОписаниеТипов("Число"));
	Даты.Колонки.Добавить("КоличествоВыходныхВМесяце", 	Новый ОписаниеТипов("Число"));

	Зап = Даты.Добавить();
	Зап.КоличествоДней				= КоличествоДней;
	Зап.КоличествоБудней			= КоличествоБудней;
	Зап.КоличествоВыходных			= КоличествоВыходных;
	Зап.КоличествоБуднейВМесяце		= КоличествоБуднейВМесяце;
	Зап.КоличествоВыходныхВМесяце	= КоличествоВыходныхВМесяце;

	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", 		РезультатЗапроса);
	ВнешниеНаборыДанных.Вставить("Даты",	Даты);
	
	СКД = ПолучитьМакет("ОсновнаяСКД");
	
	//ПользНастр = КомпоновщикНастроек.ПользовательскиеНастройки;
	Настр = КомпоновщикНастроек.ПолучитьНастройки(); //Получи установленный пользователем отбор

	#Область Выбрать_вариант_программно
	//Создаем структуру с настройками
	//---------------------------------	
	СтруктураВариантов = Новый Структура();
	Для Каждого Эл ИЗ  СхемаКомпоновкиДанных.ВариантыНастроек Цикл
	    СтруктураВариантов.Вставить(Эл.Имя,Эл.Настройки);
		Если Эл.Имя = ЭтотОбъект.ВыбранныйВариантОтчета Тогда
			//Получи настройки варианта, но в отборе варианта нет отбора, установленного пользователем
			пНастройки = Эл.Настройки;
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	//Обогати настройки варианта отбором, установленным пользователем
	//----------------------------------------------------------------
	Для Каждого Эл Из Настр.Отбор.Элементы Цикл
		Элп = пНастройки.Отбор.Элементы.Добавить(ТипЗнч(Эл));
		ЗаполнитьЗначенияСвойств(Элп, Эл);
	КонецЦикла;

	// Загрузи настройки варианта, обогащенного отбором пользователя
	//--------------------------------------------------------------
	КомпоновщикНастроек.ЗагрузитьНастройки(пНастройки);
	
	
	//КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ПользНастр);
	#КонецОбласти
	
	Настройки = ЭтотОбъект.КомпоновщикНастроек.Настройки;
	
	// Для набора данных ДеталиЗвонка
	//-------------------------------
	Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала2").Значение 			= Период.ДатаНачала;
	Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала2").Использование		= Истина;
	Настройки.ПараметрыДанных.Элементы.Найти("ДатаОкончания2").Значение 		= Период.ДатаОкончания;
	Настройки.ПараметрыДанных.Элементы.Найти("ДатаОкончания2").Использование 	= Истина;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(3);
КонецПроцедуры

Функция СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ДатаПредНачала, ДатаПредОкончания, ТаблДок) Экспорт
	
	ЗначениеПоУмолчанию = "";
	
	ЭтотОбъект.РеестрЦелевыхТек.Очистить();
	
	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	
			
	//Реестр целевых текущего периода из ОУ загрузить
	//-------------------------------------------------
	КодТочкиОформленияУфа = "000000008";
	РеестрЦелевых_Загрузить(БИ, "РеестрЦелевыхТек", ДатаНачала, ДатаОкончания, КодТочкиОформленияУфа, "");
	
	Чаты_Загрузить(БИ, ДатаНачала, ДатаОкончания);
			
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);

КонецФункции

Функция РеестрЦелевых_Загрузить(БИ, ИмяТаблЧасти, ДатаНачала, ДатаОкончания, КодТочкиОформленияКорректировки, ПустаяСтрока) Экспорт
	
	ЗначениеПоУмолчанию = Ложь;
	
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = ОбработкаОтчетов.ТексЗапросаРеестрЦелевыхОУ();	
	
	БИ_Запрос.Текст = СтрЗаменить(БИ_Запрос.Текст, "ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ПродажаНовые)", "ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.Вторичные)");
	
	БИ_Запрос.УстановитьПараметр("ДатаНачала",				ДатаНачала);
	БИ_Запрос.УстановитьПараметр("ДатаОкончания", 			ДатаОкончания);	
	БИ_Запрос.УстановитьПараметр("КодТочкиОформленияУфа", 	КодТочкиОформленияКорректировки);	
	БИ_Запрос.УстановитьПараметр("ПустаяСтрока",		 	ПустаяСтрока);
	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = ЭтотОбъект[ИмяТаблЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(Новая, БИ_Выборка, "ДатаЗвонка, Сигнатура, НомерВнутреннегоТелефона, Состояние, Статус, ОснованиеДля, Количество1, Количество2, Количество3, Количество4, Количество5, Количество6, Количество7, Количество8, КоличествоИтогоПоСтатусам, КоличествоОбщееБезПочты, КоличествоЦелевыхБезПочты, Входящий, Направление");

		Новая.СотрудникОУГУИД				= БИ.XMLСтрока(БИ_Выборка.СотрудникСсылка);	
		Новая.СотрудникНаименование			= БИ_Выборка.СотрудникПредставление;	
		Новая.ТочкаОформленияОУГУИД			= БИ.XMLСтрока(БИ_Выборка.ТочкаОформленияСсылка);
		Новая.ТочкаОформленияНаименование	= БИ_Выборка.ТочкаОформленияПредставление;
		Новая.НавСсылка                     = БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
	КонецЦикла;

	Возврат  Истина;
КонецФункции

Функция Чаты_Загрузить(БИ, Начало, Окончание) Экспорт
	
	ЗначениеПоУмолчанию = Ложь;
	
	Чаты.Очистить();
	
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = 
	"ВЫБРАТЬ
	|   АвитоОбсуждения.Ссылка КАК Ссылка,
	|	АвитоОбсуждения.Код КАК Код,
	|	АвитоОбсуждения.ДатаПоступления КАК ДатаЧата,
	|	АвитоОбсуждения.Основание.СотрудникОтветственный КАК Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(АвитоОбсуждения.Основание.СотрудникОтветственный) КАК СотрудникПредставление,
	|	АвитоОбсуждения.Основание.СотрудникОтветственный.ТелефонКор КАК НомерВнутреннегоТелефона,
	|	АвитоОбсуждения.Основание.ТочкаОформления КАК ТочкаОформления,
	|   ПРЕДСТАВЛЕНИЕ(АвитоОбсуждения.Основание.ТочкаОформления) ТочкаОформленияПредставление,
	|	1 КАК КоличествоЧатовЦелевых
	|ИЗ
	|	Справочник.АвитоОбсуждения КАК АвитоОбсуждения
	|ГДЕ
	|	АвитоОбсуждения.ДатаПоступления МЕЖДУ &Начало И &Окончание
	|	И ТИПЗНАЧЕНИЯ(АвитоОбсуждения.Основание) = ТИП(Документ.СделкаРеализации)
	|	И АвитоОбсуждения.Основание <> ЗНАЧЕНИЕ(Документ.СделкаРеализации.ПустаяСсылка)";

	БИ_Запрос.УстановитьПараметр("Начало",		Начало);
	БИ_Запрос.УстановитьПараметр("Окончание", 	Окончание);		
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая =Чаты.Добавить();
		Новая.ДатаЧата						= БИ_Выборка.ДатаЧата;
		Новая.Сигнатура						= БИ_Выборка.Код;
		Новая.СотрудникОУГУИД				= БИ.XMLСтрока(БИ_Выборка.Сотрудник);	
		Новая.СотрудникНаименование			= БИ_Выборка.СотрудникПредставление;
		Новая.НомерВнутреннегоТелефона		= БИ_Выборка.НомерВнутреннегоТелефона;
		Новая.ТочкаОформленияОУГУИД			= БИ.XMLСтрока(БИ_Выборка.ТочкаОформления);
		Новая.ТочкаОформленияНаименование	= БИ_Выборка.ТочкаОформленияПредставление;
		Новая.КоличествоЧатовЦелевых		= БИ_Выборка.КоличествоЧатовЦелевых;
		Новая.НавСсылка                     = БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
	КонецЦикла;

	Возврат  Истина;
КонецФункции

