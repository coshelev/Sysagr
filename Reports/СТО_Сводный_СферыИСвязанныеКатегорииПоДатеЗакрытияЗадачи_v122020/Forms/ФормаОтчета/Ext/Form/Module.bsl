&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Элементы.Вариант.СписокВыбора.Добавить("СводныйОбщий",		"Сводный общий");
	//Элементы.Вариант.СписокВыбора.Добавить("СводныйГАЗ",		"Сводный ГАЗ");
	//Элементы.Вариант.СписокВыбора.Добавить("СводныйУАЗ",		"Сводный УАЗ");
	//Элементы.Вариант.СписокВыбора.Добавить("СводныйFord",		"Сводный Ford");
	//Элементы.Вариант.СписокВыбора.Добавить("Детальный общий", 	"Детальный");
	//
	////Если открываемый отчет - расшифровка основного отчета, установи вариант как в основном отчете
	////---------------------------------------------------------------------------------------------
	//Вар = "";
	//Доступно = Истина;
	//Доступно = Доступно И Параметры.Свойство("ТекВариант", Вар) = Истина;
	//Доступно = Доступно И ЗначениеЗаполнено(Параметры.ТекВариант);
	//Если Доступно Тогда
	//	Отчет.ТекВариант = Параметры.ТекВариант;
	//Иначе
	//	//Вариант по умолчанию, при вызове отчета из меню
	//	//-----------------------------------------------
	//	Отчет.ТекВариант = "СводныйОбщий";
	//КонецЕсли;
	//
	//ВариантОбработкаВыбораНаСервере(Отчет.ТекВариант);
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьНастроек(Команда)
	Элементы.ГруппаСтраницы.Видимость = НЕ Элементы.ГруппаСтраницы.Видимость;
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Отчет.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Отчет.Период.ДатаОкончания = КонецМесяца(Отчет.Период.ДатаНачала);
	
	Элементы.ГруппаСтраницы.Видимость = Ложь;
	
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериода(Команда)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода(); 
	Диалог.Период = Отчет.Период;
	
	Оп = Новый ОписаниеОповещения("НаЗакрытиеДиалогаПериода", ЭтаФорма);
	Диалог.Показать(Оп);
КонецПроцедуры

&НаКлиенте
Процедура НаЗакрытиеДиалогаПериода(Парам1, Парам2) Экспорт
	Если Парам1 = Неопределено Тогда
		Возврат
	КонецЕсли;
	Отчет.Период = Парам1;
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображение()
	Элементы.ВыборПериода.Заголовок = " "+Формат(Отчет.Период.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Отчет.Период.ДатаОкончания, "ДЛФ=Д");
	Элементы.ВидимостьНастроек.Пометка = Элементы.ГруппаСтраницы.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	рез = РезультатОбработкаРасшифровкиНаСервере(Расшифровка);
	
	Если Не ЗначениеЗаполнено(Рез) Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(Рез)<>Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Рез, "#", , 2) =0 Тогда
		Возврат
	КонецЕсли;
	
	Парам = Новый Структура();
	Парам.Вставить("Сигнатура", рез);
	Если Лев(Рез,1) = "0" Тогда
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение";
	Иначе
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаВходящегоЧтение";
	КонецЕсли;
	ОткрытьФорму(ИмяОткрываемойФормы, Парам, ЭтаФорма);

КонецПроцедуры

&НаСервере
Функция РезультатОбработкаРасшифровкиНаСервере(Расшифровка)
	РасшифровкаОтчета = ПолучитьИзВременногоХранилища(ЭтаФорма.ДанныеРасшифровки);
	ЭлементыРасшифровки = РасшифровкаОтчета.Элементы;
	РасшифровкаЯчейки =  ЭлементыРасшифровки.Получить(Расшифровка);
	ЗначенияПолейРасш = РасшифровкаЯчейки.ПолучитьПоля();
	ЗначениеПоляРасш = ЗначенияПолейРасш.Получить(0);
	Возврат ЗначениеПоляРасш.Значение;
КонецФункции

//#Область Выбор_Варианта
//&НаСервере
//Процедура ВариантОбработкаВыбораНаСервере(ИмяВарианта)
//	Результат.Очистить();
//	
//	Об = 	РеквизитФормыВЗначение("Отчет");
//	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Отчет").ПолучитьСКД(ИмяВарианта, "C:\Users\Public\Documents\"+ИмяВарианта+".xml");
//	АдресВремХран	=  ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);

//	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВремХран);
//	Отчет.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
//	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
//КонецПроцедуры

//&НаКлиенте
//Процедура ТекВариантОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	ВариантОбработкаВыбораНаСервере(ВыбранноеЗначение)
//КонецПроцедуры
//#КонецОбласти

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПрефиксов(Команда)
	Парам = Новый Структура();
	Парам.Вставить("РегистрСведений",	"УчетнаяПолитика");
	Парам.Вставить("Измерение",			"Параметр");
	Парам.Вставить("Ресурс",			"Значение");
	Парам.Вставить("ЗначениеИзмерения",	"Лояльность_ПрефиксыКатегорий");
	ОткрытьФорму("Обработка.НастроечныеТаблицыXMLвУчетнойПолитике.Форма.Форма", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	УстановиОтборы();
КонецПроцедуры

&НаСервере
Процедура УстановиОтборы()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПользователиПодразделения.Подразделение.Код КАК Код,
	|	ПользователиПодразделения.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ01
	|ИЗ
	|	Справочник.Пользователи.Подразделения КАК ПользователиПодразделения
	|ГДЕ
	|	ПользователиПодразделения.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Предприятие.Код КАК Код
	|ИЗ
	|	Справочник.Предприятие КАК Предприятие
	|ГДЕ
	|	Предприятие.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ
	|				ВТ01.Подразделение
	|			ИЗ
	|				ВТ01)";
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийПользователь);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	ДоступныеПодразделенияКоды = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
	
	МассивДоступныхТочекПродаж = Новый Массив();
	
	Если ДоступныеПодразделенияКоды.Количество()>0 Тогда
		Обр = Обработки.НастроечныеТаблицыXMLвУчетнойПолитике.Создать();
		Обр.УстановитьНастройки();
		Обр.Прочитать();
		
		Для Каждого Эл Из ДоступныеПодразделенияКоды Цикл
			Отб = Новый Структура();
			Отб.Вставить("Колонка2", Эл);
			Найденные = Обр.ТЗ.НайтиСтроки(Отб);
			Для Каждого Найденная Из Найденные Цикл
				МассивДоступныхТочекПродаж.Добавить(Найденная.Колонка1);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	//Получи перечень точек оформления, фигуировавших в течении последнего месяца
	//---------------------------------------------------------------------------
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Точка ИЗ РегистрСведений.Продажи ГДЕ Вид = &Вид И Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок, МЕСЯЦ, -3) И &ДатаДок УПОРЯДОЧИТЬ ПО Точка");
	Запрос.УстановитьПараметр("Вид", "Ремонт авто") ;
	Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат
	КонецЕсли;

	ДоступныеТочки = Новый Массив();
	Если Не ПараметрыСеанса.РольДоступнаАдминистратор Тогда
		//Определи доступные точки для отбора
		//-----------------------------------
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(ТвП.Точка КАК СТРОКА(32)) КАК Точка
		|ИЗ
		|	Справочник.Предприятие КАК П
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТочкиПродажВподразделения КАК ТвП
		|		ПО П.Ссылка = ТвП.Подразделение
		|ГДЕ
		|	П.Ссылка В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Подразделение ИЗ Справочник.Пользователи.Подразделения ГДЕ Ссылка = &Ссылка)";
		Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийПользователь);
		Рзт = Запрос.Выполнить();
		Если Не Рзт.Пустой() Тогда
			ДоступныеТочки = Рзт.Выгрузить().ВыгрузитьКолонку(0);
		КонецЕсли;
	КонецЕсли;
	
	ГрОтбора1 = ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		ЭлОтбора1 = ГрОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлОтбора1.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Точка");
		ЭлОтбора1.ПравоеЗначение=Выб.Точка;
		ЭлОтбора1.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		
		Если ДоступныеТочки.Количество()>0 Тогда
			ЭлОтбора1.Использование = ?(ДоступныеТочки.Найти(Выб.Точка)=Неопределено, Ложь, Истина);
		Иначе
			ЭлОтбора1.Использование=Истина;		
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ		Т.ХарактеристикаОбъекта КАК ВидРемонта
	|ИЗ						РегистрСведений.Продажи КАК Т
	|ГДЕ					Т.Вид = &Вид	И Т.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок, МЕСЯЦ, -3) И &ДатаДок
	|УПОРЯДОЧИТЬ ПО			Т.ХарактеристикаОбъекта";
	Запрос.УстановитьПараметр("Вид", "Ремонт авто") ;
	Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат
	КонецЕсли;
	ГрОтбора2 = ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрОтбора2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		ЭлОтбора2 = ГрОтбора2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлОтбора2.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ВидРемонта");
		ЭлОтбора2.ПравоеЗначение=Выб.ВидРемонта;
		ЭлОтбора2.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		ЭлОтбора2.Использование=Истина;	
	КонецЦикла;
КонецПроцедуры





 
