
&НаСервере
Функция РезультатОбработкаРасшифровкиНаСервере(Расшифровка)
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	//Получи расшифровку отчета из временного хранилища, адрес расшифровки содержится в свойстве формы 
	РасшифровкаОтчета = ПолучитьИзВременногоХранилища(ЭтаФорма.ДанныеРасшифровки);
	
	//Получи параметры данных отчета из ДанныеРасшифровкиКД.Настройки
	Парам = Новый ПараметрКомпоновкиДанных("Период");
	ЗначПарам = РасшифровкаОтчета.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Парам);
	
	ДатаПостановкиНачало = Дата(1,1,1);
	Если ЗначПарам = Неопределено Тогда
		ЗаписьЖурналаРегистрации("Обработка расшифровки", УровеньЖурналаРегистрации.Ошибка, Метаданные.Отчеты.KPIЗадачПоПропущеннымЗвонкам, , "Ошибка поиска параметра ДатаПостановкиНачало"); 
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	Иначе 
		Период = ЗначПарам.Значение;
	КонецЕсли;
	
	//Получи имя показателя KPI для расшифровки  из ДанныеРасшифровкиКД.Элементы
	ЭлементыРасшКД	 	= РасшифровкаОтчета.Элементы;
	ЭлементРасшКДПоля 	= ЭлементыРасшКД[Расшифровка];
	ЗначенияПолейРасшКД = ЭлементРасшКДПоля.ПолучитьПоля();
	ЗначениеПоляРасшКД 	= ЗначенияПолейРасшКД[0];
	
	Если ЗначениеПоляРасшКД.Поле = "ИмяПоказателя" Тогда
		
		//Если 	  ЗначениеПоляРасшКД.Значение = "Количество задач всего" Тогда				
		//ИначеЕсли ЗначениеПоляРасшКД.Значение = "Количество успешных переключений" Тогда
		//ИначеЕсли ЗначениеПоляРасшКД.Значение = "Количество закрытых вручную" Тогда
		//ИначеЕсли ЗначениеПоляРасшКД.Значение = "Доля успешных закрытий" Тогда
		//ИначеЕсли ЗначениеПоляРасшКД.Значение = "Количество успешных переключений не обработанных в срок" Тогда
		//КонецЕсли;
		
		НастройкиКД_ТекущегоОтчета = ЭтаФорма.Отчет.КомпоновщикНастроек.ПолучитьНастройки();
		АдресНастроекКД_ТекущегоОтчета = ПоместитьВоВременноеХранилище(НастройкиКД_ТекущегоОтчета);
		
		Парам = Новый Структура();
		Парам.Вставить("АдресНастроекКДМастерОтчета",АдресНастроекКД_ТекущегоОтчета);
		Парам.Вставить("ИмяПоказателяКРасшифровке", ЗначениеПоляРасшКД.Значение);
		
		
		Парам.Вставить("КонтактЦентрВРасшифровке", Справочники.КонтактЦентры.ПустаяСсылка());  //default value
		//Получи значение родительской группировки, т.е. КонтактЦентр
		РодительскиеЭлементыРасшифровки = ЭлементРасшКДПоля.ПолучитьРодителей();
		Если РодительскиеЭлементыРасшифровки.Количество()>0 Тогда
			РодительскийЭлементРасшифровки = РодительскиеЭлементыРасшифровки[0];
			ИдентификаторРодительскогоЭлементаРашифровки = РодительскийЭлементРасшифровки.Идентификатор;
			ЭлементРасшКДГруппировка  = РасшифровкаОтчета.Элементы[ИдентификаторРодительскогоЭлементаРашифровки];
			МассивЭлементовРасшКДПоля = ЭлементРасшКДГруппировка.ПолучитьРодителей();
			ЭлементРасшКДПоля = МассивЭлементовРасшКДПоля[0];
			ЗначенияПолейРасшКД = ЭлементРасшКДПоля.ПолучитьПоля();
			ЗначениеПоляРасшКД 	= ЗначенияПолейРасшКД[0];
			КонтактЦентр		= ЗначениеПоляРасшКД.Значение;
			
			Если ЗначениеЗаполнено(КонтактЦентр) Тогда
				Парам.Вставить("КонтактЦентрВРасшифровке", КонтактЦентр);
			КонецЕсли;
		КонецЕсли;
		
		
		ДляОткрытьФормуНаКлиенте = Новый Структура();
		ДляОткрытьФормуНаКлиенте.Вставить("ИмяФормы", "Отчет.ЗадачиПоПропушеннымЗвонкам.Форма.ФормаОтчета");
		ДляОткрытьФормуНаКлиенте.Вставить("ПараметрыФормы", Парам);
		
		Возврат ДляОткрытьФормуНаКлиенте;

	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Рез = РезультатОбработкаРасшифровкиНаСервере(Расшифровка);
	
	Если ТипЗнч(Рез) <> Тип("Структура") Тогда
		Возврат
	КонецЕсли;
	
	ОткрытьФорму(Рез.ИмяФормы, Рез.ПараметрыФормы);
КонецПроцедуры
