
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
			
	Если ТекВариант = "ЗвонкиВсеПоИнтернетЗаявкам" Тогда
		ТекстЗапроса = ЗвонкиВсеПоИнтернетЗаявкам();
		Парам = Новый Структура("Начало, Окончание", Период.ДатаНачала, Период.ДатаОкончания);
		РезультатЗапроса 	= ЗапросВыполнить(ТекстЗапроса, Парам, "C:\Users\Public\Documents\"+ТекВариант+".sql"); 
		Если РезультатЗапроса.Пустой() Тогда
			Возврат
		КонецЕсли;
		СхемаКомпоновкиДанных 	= ПолучитьСКД(ТекВариант, "C:\Users\Public\Documents\"+ТекВариант+".xml");
		ВнешниеНаборыДанных 	= Новый Структура("ТЗ", РезультатЗапроса);
	КонецЕсли;  
	
    Если ТекВариант = "ЗвонкиВсеПоИнтернетЗаявкамДетально" Тогда
		ТекстЗапроса = ЗвонкиВсеПоИнтернетЗаявкамДетально();
		Парам = Новый Структура("Начало, Окончание", Период.ДатаНачала, Период.ДатаОкончания);
		РезультатЗапроса 	= ЗапросВыполнить(ТекстЗапроса, Парам, "C:\Users\Public\Documents\"+ТекВариант+".sql"); 
		Если РезультатЗапроса.Пустой() Тогда
			Возврат
		КонецЕсли;
		СхемаКомпоновкиДанных 	= ПолучитьСКД(ТекВариант, "C:\Users\Public\Documents\"+ТекВариант+".xml");
		ВнешниеНаборыДанных 	= Новый Структура("ТЗ", РезультатЗапроса);
	КонецЕсли;  
	
	 Если ТекВариант = "ЗвонкиНесостоявшиесяПоИнтернетЗаявкамДетально" Тогда
		ТекстЗапроса = ЗвонкиНесостоявщиесяПоИнтернетЗаявкамДетально();
		Парам = Новый Структура("Начало, Окончание", Период.ДатаНачала, Период.ДатаОкончания);
		РезультатЗапроса 	= ЗапросВыполнить(ТекстЗапроса, Парам, "C:\Users\Public\Documents\"+ТекВариант+".sql"); 
		Если РезультатЗапроса.Пустой() Тогда
			Возврат
		КонецЕсли;
		СхемаКомпоновкиДанных 	= ПолучитьСКД(ТекВариант, "C:\Users\Public\Documents\"+ТекВариант+".xml");
		ВнешниеНаборыДанных 	= Новый Структура("ТЗ", РезультатЗапроса);
	КонецЕсли;  

    Если ТекВариант = "ЗвонкиНесостоявшиесяПоИнтернетЗаявкамСводно" Тогда
		ТекстЗапроса = ЗвонкиНесостоявщиесяПоИнтернетЗаявкамСводно();
		Парам = Новый Структура("Начало, Окончание", Период.ДатаНачала, Период.ДатаОкончания);
		РезультатЗапроса 	= ЗапросВыполнить(ТекстЗапроса, Парам, "C:\Users\Public\Documents\"+ТекВариант+".sql"); 
		Если РезультатЗапроса.Пустой() Тогда
			Возврат
		КонецЕсли;
		СхемаКомпоновкиДанных 	= ПолучитьСКД(ТекВариант, "C:\Users\Public\Documents\"+ТекВариант+".xml");
		ВнешниеНаборыДанных 	= Новый Структура("ТЗ", РезультатЗапроса);
	КонецЕсли;  

 	КомпоновщикМакет 	= Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет 				= КомпоновщикМакет.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	ПроцессорВывода 	= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);	
КонецПроцедуры   

Функция ЗвонкиВсеПоИнтернетЗаявкам() 
	//На одну заявку может быть несколько звонков
	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	Зв.Сигнатура КАК Звонок,
	|	Зв.Дата КАК Дата,
	|	Зв.АбонентВнешний КАК Абонент,
	|	Ст.ОПСсылка КАК ОпСсылка,
	|	Ст.ОПРазговор КАК ОПРазговор,
	|	Здч.Сигнатура КАК Заявка,
	|	Здч.Инициатор КАК Сайт
	|ПОМЕСТИТЬ ВТ01_НесколькоЗвонковНаЗаявку
	|ИЗ
	|	РегистрСведений.Звонки КАК Зв
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Ст
	|		ПО Зв.Сигнатура = Ст.Сигнатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиИнтернетЗаявки КАК Здч
	|		ПО (""iq_"" + Здч.Сигнатура = Ст.Основание)
	|ГДЕ
	|	Здч.ДатаПостановки МЕЖДУ &Начало И &Окончание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Заявка КАК Заявка,
	|	МАКСИМУМ(ВТ01.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ02_КлючПоследнихЗвонков
	|ИЗ
	|	ВТ01_НесколькоЗвонковНаЗаявку КАК ВТ01
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ01.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Звонок КАК Звонок,
	|	ВТ01.Дата КАК Дата,
	|	ВТ01.Абонент КАК Абонент,
	|	ВТ01.Заявка КАК Заявка,
	|	ВТ01.Сайт КАК Сайт,
	|	ВЫБОР
	|		КОГДА НЕ Цл.ТочкаЦелевая ЕСТЬ NULL
	|			ТОГДА Цл.ТочкаЦелевая
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ01.ОПРазговор > 0
	|					ТОГДА ВТ01.ОпСсылка
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦелеваяТочка,
	|	1 КАК Количество
	|ИЗ
	|	ВТ02_КлючПоследнихЗвонков КАК ВТ02
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ01_НесколькоЗвонковНаЗаявку КАК ВТ01
	|		ПО (ВТ01.Заявка = ВТ02.Заявка)
	|			И (ВТ01.Дата = ВТ02.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиЦелевые КАК Цл
	|		ПО (ВТ01.Звонок = Цл.Сигнатура)";
	
	
	
	//"ВЫБРАТЬ
	//|	Зв.Сигнатура КАК Звонок,
	//|	Зв.Дата КАК Дата,
	//|	ВЫБОР
	//|		КОГДА НЕ Цл.ТочкаЦелевая ЕСТЬ NULL
	//|			ТОГДА Цл.ТочкаЦелевая
	//|		ИНАЧЕ ВЫБОР
	//|				КОГДА Ст.ОПРазговор > 0
	//|					ТОГДА Ст.ОПСсылка
	//|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)
	//|			КОНЕЦ
	//|	КОНЕЦ КАК ЦелеваяТочка,
	//|	Здч.Сигнатура КАК Заявка,
	//|	Здч.Инициатор КАК Сайт,
	//|	1 КАК Количество
	//|ПОМЕСТИТЬ ВТ01
	//|ИЗ
	//|	РегистрСведений.Звонки КАК Зв
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Ст
	//|		ПО Зв.Сигнатура = Ст.Сигнатура
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиИнтернетЗаявки КАК Здч
	//|		ПО (""iq_"" + Здч.Сигнатура = Ст.Основание)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиЦелевые КАК Цл
	//|		ПО Зв.Сигнатура = Цл.Сигнатура
	//|ГДЕ
	//|	Здч.ДатаПостановки МЕЖДУ &Начало И &Окончание
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ01.Звонок КАК Звонок,
	//|	ВТ01.Дата КАК Дата,
	//|	ВТ01.ЦелеваяТочка КАК ЦелеваяТочка,
	//|	ВТ01.Заявка КАК Заявка,
	//|	ВТ01.Сайт КАК Сайт,
	//|	ВТ01.Количество КАК Количество
	//|ИЗ
	//|	ВТ01 КАК ВТ01
	//|ГДЕ ";
	Возврат ТекстЗапроса;
КонецФункции  

Функция ЗвонкиВсеПоИнтернетЗаявкамДетально() 
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Зв.Сигнатура КАК Звонок,
	|	Зв.Дата КАК Дата,
	|	Зв.АбонентВнешний КАК Абонент,
	|	ВЫБОР
	|		КОГДА НЕ Цл.ТочкаЦелевая ЕСТЬ NULL
	|			ТОГДА Цл.ТочкаЦелевая
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Ст.ОПРазговор > 0
	|					ТОГДА Ст.ОПСсылка
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦелеваяТочка,
	|	Здч.Сигнатура КАК Заявка,
	|	Здч.Инициатор КАК Сайт,
	|	Ст.ОПРазговор КАК ОПРазговор,
	|	1 КАК Количество
	|ИЗ
	|	РегистрСведений.Звонки КАК Зв
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Ст
	|		ПО Зв.Сигнатура = Ст.Сигнатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиИнтернетЗаявки КАК Здч
	|		ПО (""iq_"" + Здч.Сигнатура = Ст.Основание)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиЦелевые КАК Цл
	|		ПО Зв.Сигнатура = Цл.Сигнатура
	|ГДЕ
	|	Здч.ДатаПостановки МЕЖДУ &Начало И &Окончание";
	Возврат ТекстЗапроса;
КонецФункции 

Функция ЗвонкиНесостоявщиесяПоИнтернетЗаявкамДетально()    
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Зв.Сигнатура КАК Звонок,
	|	Зв.Дата КАК Дата,
	|	Зв.АбонентВнешний КАК Абонент,
	|	Ст.ОПСсылка КАК ОпСсылка,
	|	Ст.ОПРазговор КАК ОПРазговор,
	|	Здч.Сигнатура КАК Заявка,
	|	Здч.Инициатор КАК Сайт
	|ПОМЕСТИТЬ ВТ01_НесколькоЗвонковНаЗаявку
	|ИЗ
	|	РегистрСведений.Звонки КАК Зв
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Ст
	|		ПО Зв.Сигнатура = Ст.Сигнатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиИнтернетЗаявки КАК Здч
	|		ПО (""iq_"" + Здч.Сигнатура = Ст.Основание)
	|ГДЕ
	|	Здч.ДатаПостановки МЕЖДУ &Начало И &Окончание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Заявка КАК Заявка,
	|	МАКСИМУМ(ВТ01.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ02_КлючПоследнихЗвонков
	|ИЗ
	|	ВТ01_НесколькоЗвонковНаЗаявку КАК ВТ01
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ01.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Звонок КАК Звонок,
	|	ВТ01.Дата КАК Дата,
	|	ВТ01.Абонент КАК Абонент,
	|	ВТ01.Заявка КАК Заявка,
	|	ВТ01.Сайт КАК Сайт,
	|	ВЫБОР
	|		КОГДА НЕ Цл.ТочкаЦелевая ЕСТЬ NULL
	|			ТОГДА Цл.ТочкаЦелевая
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ01.ОПРазговор > 0
	|					ТОГДА ВТ01.ОпСсылка
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦелеваяТочка,
	|	ВТ01.ОПРазговор КАК ОПРазговор,
	|	1 КАК Количество,
	|	Здч.Комментарий КАК ЗаявкаКомментарий,
	|	Здч.ПричинаЗакрытия КАК ЗаявкаПричинаЗакрытия,
	|	Здч.ДатаПостановки КАК ДатаПостановки,
	|	Здч.ДатаЗакрытия КАК ДатаЗакрытия,
	|	ЕСТЬNULL(ЗОбр.Основание, """") КАК ИнтернетЗаявка,
	|	ЕСТЬNULL(ЗОбр.ПричинаЗакрытия, """") КАК ЗобрПричинаЗакрытия,
	|	ЕСТЬNULL(ЗОбр.ЗвонокЗакрытия, """") КАК ЗвонокЗакрытия,
	|	ЕСТЬNULL(ЗОбр.Комментарий, """") КАК Комментарий,
	|	ВЫБОР
	|		КОГДА Здч.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ""Незакрытая""
	|		КОГДА Здч.ПричинаЗакрытия <> """"
	|			ТОГДА ""Вручную""
	|		КОГДА ЕСТЬNULL(ЗОбр.ПричинаЗакрытия, """") <> """"
	|			ТОГДА ""Вручную""
	|		КОГДА ЕСТЬNULL(ЗОбр.ЗвонокЗакрытия, """") <> """"
	|			ТОГДА ""Перезвон""
	|		КОГДА ЕСТЬNULL(ЗОбр.Комментарий, """") ПОДОБНО ""%Создана эл.письмом%""
	|			ТОГДА ""Эл. письмо""
	|		КОГДА ЕСТЬNULL(ЗОбр.Комментарий, """") ПОДОБНО ""%Закрыта автоматом отправкой пропущенного звонка в ОУ""
	|			ТОГДА ""Автоотправка звонка в ОУ""
	|		КОГДА ЕСТЬNULL(ЗОбр.Комментарий, """") ПОДОБНО ""Закрыта автоматически отправкой оповещения в ОУ""
	|			ТОГДА ""Автоотправка звонка в ОУ""
	|		ИНАЧЕ ""<не установлено>""
	|	КОНЕЦ КАК СпособЗакрытия,
	|	ВЫБОР
	|		КОГДА Здч.ПричинаЗакрытия <> """"
	|			ТОГДА Здч.ПричинаЗакрытия
	|		КОГДА ЕСТЬNULL(ЗОбр.ПричинаЗакрытия, """") <> """"
	|			ТОГДА ЗОбр.ПричинаЗакрытия
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПричинаЗакрытия,
	|	ВЫБОР
	|		КОГДА Здч.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Здч.Комментарий
	|		КОГДА Здч.ПричинаЗакрытия <> """"
	|			ТОГДА Здч.Комментарий
	|		КОГДА ЕСТЬNULL(ЗОбр.ПричинаЗакрытия, """") <> """"
	|			ТОГДА ЗОбр.Комментарий
	|		КОГДА ЕСТЬNULL(ЗОбр.ЗвонокЗакрытия, """") <> """"
	|			ТОГДА ""Звонок закрытия: "" + ЗОбр.ЗвонокЗакрытия
	|		КОГДА ЕСТЬNULL(ЗОбр.Комментарий, """") ПОДОБНО ""%Создана эл.письмом%""
	|			ТОГДА ""Эл. письмо""
	|		КОГДА ЕСТЬNULL(ЗОбр.Комментарий, """") ПОДОБНО ""%Закрыта автоматом отправкой пропущенного звонка в ОУ""
	|			ТОГДА ЗОбр.Комментарий
	|		КОГДА ЕСТЬNULL(ЗОбр.Комментарий, """") ПОДОБНО ""Закрыта автоматически отправкой оповещения в ОУ""
	|			ТОГДА ЗОбр.Комментарий
	|		ИНАЧЕ ЕСТЬNULL(Здч.Комментарий, """")
	|	КОНЕЦ КАК ОтчетКомментарий
	|ИЗ
	|	ВТ02_КлючПоследнихЗвонков КАК ВТ02
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ01_НесколькоЗвонковНаЗаявку КАК ВТ01
	|		ПО (ВТ01.Заявка = ВТ02.Заявка)
	|			И (ВТ01.Дата = ВТ02.Дата)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиИнтернетЗаявки КАК Здч
	|		ПО (Здч.Сигнатура = ВТ01.Заявка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиОбратныйЗвонок КАК ЗОбр
	|		ПО (ЗОбр.Основание = ""iq_"" + Здч.Сигнатура
	|				ИЛИ ВТ01.Звонок = ЗОбр.ЗвонокИнициатор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиЦелевые КАК Цл
	|		ПО (ВТ01.Звонок = Цл.Сигнатура)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ Цл.ТочкаЦелевая ЕСТЬ NULL
	|				ТОГДА Цл.ТочкаЦелевая
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВТ01.ОПРазговор > 0
	|						ТОГДА ВТ01.ОпСсылка
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)
	|				КОНЕЦ
	|		КОНЕЦ = ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)";
	
	Возврат ТекстЗапроса;
КонецФункции 

Функция ЗвонкиНесостоявщиесяПоИнтернетЗаявкамСводно() 
	Возврат ЗвонкиНесостоявщиесяПоИнтернетЗаявкамДетально();
КонецФункции 

Функция ЗапросВыполнить(Текст, Параметры, ИмяФайла = "");
	
	//Значение по умолчанию - пустой результат запроса
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ГДЕ
	|	ИСТИНА = ЛОЖЬ";
	РезультатЗапроса = Запрос.Выполнить();
	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Текст) = Тип("Строка");
	Доступно = Доступно И ТипЗнч(Параметры) = Тип("Структура");
	
	Если Не Доступно Тогда
		Возврат РезультатЗапроса;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Для Каждого i Из Параметры Цикл
		Запрос.УстановитьПараметр(i.key, i.value);
	КонецЦикла;

	Запрос.Текст = Текст;
	
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		Ф = Новый Файл(ИмяФайла);
		Если Ф.Существует() Тогда
			ТекстДок = Новый ТекстовыйДокумент();
			ТекстДок.Прочитать(ИмяФайла);
			ТекстИзФайла = ТекстДок.ПолучитьТекст();
			Если СтрДлина(ТекстИзФайла)>0 Тогда
				Запрос.Текст = ТекстИзФайла;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса;
КонецФункции

Функция ПолучитьСКД(ИмяМакета, ИмяФайла = "") Экспорт
	
	СхемаКомпоновкиДанных = Неопределено;
	
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		Ф = Новый Файл(ИмяФайла);
		Если Ф.Существует() Тогда			
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.ОткрытьФайл(ИмяФайла);
			СхемаКомпоновкиДанных = СериализаторXDTO.ПрочитатьXML(ЧтениеXML, Тип("СхемаКомпоновкиДанных"));
			ЧтениеXML.Закрыть();
			Возврат СхемаКомпоновкиДанных;
		КонецЕсли;
	КонецЕсли;

	Доступно = Истина;
	Доступно = ТипЗнч(ИмяМакета) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(ИмяМакета);
	Если Не Доступно Тогда
		Возврат СхемаКомпоновкиДанных;
	КонецЕсли;
	СхемаКомпоновкиДанных = ПолучитьМакет(ИмяМакета);  
	
	//Для тех макетов, в которых используются свойства автомобилей
	МакетыСоСвойствами = СтрРазделить("ОстаткиАвтомобилейСобственныхКомиссионныхСвойстваПодробно,ПродажиСвойстваПодробно,Спрос,СпросПредложениеФильтры",",");
	Доступно = МакетыСоСвойствами.Найти(ИмяМакета)<> Неопределено;
	Если Доступно Тогда
		
		СвойстваАвто = СтрРазделить("ВычАвитоМодель,ВычПосадочныхМест,ВычСнятСУчета,ВычКппТип,ВычКузовТип,ВычПриводТип,ВычТопливоТип,ВычКлиматТип", ",");
		
		Для Каждого i Из СхемаКомпоновкиДанных.ВычисляемыеПоля Цикл
	
			Если СвойстваАвто.Найти(i.ПутьКДанным)=Неопределено Тогда
				Продолжить
			КонецЕсли;      
			
			ИмяПоля = i.ПутьКДанным;
			ИмяПоля = СтрЗаменить(ИмяПоля, "Выч", "");
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Вариант ИЗ Справочник.СвойстваАвтомобилей.Варианты ГДЕ Ссылка.ИмяПредопределенныхДанных = &Наименование УПОРЯДОЧИТЬ ПО Вариант ВОЗР");
			Запрос.УстановитьПараметр("Наименование", ИмяПоля);	
			РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				Продолжить;
			КонецЕсли;
			
			Сп = Новый СписокЗначений();
			Сп.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0)); 
			i.УстановитьДоступныеЗначения(Сп);
			
		КонецЦикла;
	КонецЕсли;
		
	Возврат СхемаКомпоновкиДанных;
КонецФункции
