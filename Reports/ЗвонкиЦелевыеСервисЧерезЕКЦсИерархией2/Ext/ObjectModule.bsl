
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	РезультатЗапроса = РезультатЗапроса();
		
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", РезультатЗапроса);
	
	СКД = ПолучитьМакет("ОсновнаяСКД");
	
	Настройки = ЭтотОбъект.КомпоновщикНастроек.Настройки;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
КонецПроцедуры

Функция РезультатЗапроса() Экспорт
	//Выполни запрос в базе ОУ по выставкам и встречам
	//-------------------------------------------------
	ДатаНачала					=	Период.ДатаНачала; 
	ДатаОкончания				=	Период.ДатаОкончания;
	
	// Заполнит ТЧ Звонки, Встречи, Задачи по эл. почте
	//-----------------------------------------------------
	СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, "");
	
	ЗначениеПоУмолчанию = Ложь;
	
	//Получи иерархию каналов и сайтов звонков из учетной политики в таблицу значений
	ИмяИерархии = "Отчет_ВходящиеЗвонкиПоКлассифайдам_Иерархия2";
	ИерархияМаркетинга = ОбработкаОтчетов.ПолучитьИерархиюПоИмени(ИмяИерархии);
	Если ИерархияМаркетинга.Количество()=0 Тогда
		Сообщить(СтрШаблон("Не найдена иерархия %1",ИерархияМаркетинга));
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК ДатаЗвонка,
	|	ЗвонкиДоп.ЦелеваяТочка КАК ТочкаЦелевая,
	|	1 КАК КоличествоЦелевых
	|ПОМЕСТИТЬ ВТ00_ЦелевыеАгрегатора
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиДоп КАК ЗвонкиДоп
	|		ПО Звонки.Сигнатура = ЗвонкиДоп.Сигнатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные КАК Анкеты
	|		ПО Звонки.Сигнатура = Анкеты.Сигнатура
	|			И (Анкеты.Ответ В (&ЗаписьНаРемонт, &ПервичнаяКонсультация))
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|			КОГДА Звонки.ЭтоВходящий
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Звонки.Инициатор В (&ТелефоныКонтактЦентра)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	|	Т.Сигнатура КАК Сигнатура,
	|	Т.ОснованиеДля КАК Машинозаезд,
	|	Т.ТочкаОформленияНаименование КАК ТочкаЦелевая,
	|	Т.КоличествоЦелевыхБезПочты КАК КоличествоЦелевых
	|ПОМЕСТИТЬ ВТ01_ЦелевыеОУ
	|ИЗ
	|	&РеестрЦелевыхТек КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ03.ДатаЗвонка, ВТ00.ДатаЗвонка) КАК ДатаЗвонка,
	|	ЕСТЬNULL(ВТ03.Сигнатура, ВТ00.Сигнатура) КАК Сигнатура,
	|	ЕСТЬNULL(ВТ03.Машинозаезд, ""<нет машинозаезда, только анкета>"") КАК Машинозаезд,
	|	ЕСТЬNULL(ВТ03.ТочкаЦелевая, ВТ00.ТочкаЦелевая) КАК ТочкаЦелевая,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевых, ВТ00.КоличествоЦелевых) КАК КоличествоЦелевых
	|ПОМЕСТИТЬ ВТ05_Звонки
	|ИЗ
	|	ВТ01_ЦелевыеОУ КАК ВТ03
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ00_ЦелевыеАгрегатора КАК ВТ00
	|		ПО ВТ03.Сигнатура = ВТ00.Сигнатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТ05.ДатаЗвонка, ДЕНЬ) КАК ДатаЗвонка,
	|	ВТ05.Сигнатура КАК Сигнатура,
	|	ВТ05.Машинозаезд КАК Машинозаезд,
	|	ВТ05.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ05.КоличествоЦелевых КАК КоличествоЦелевых,
	|	Звонки.ЭтоВходящий КАК ЭтоВходящий,
	|	Звонки.Инициатор.Код КАК Канал,
	|	ЕСТЬNULL(ИнтернетЗаявки.Сигнатура, ""<без интернет-заявки>"") КАК ИнтернетЗаявка,
	|	ЕСТЬNULL(ИнтернетЗаявки.Инициатор, ""<без интернет-заявки и сайта>"") КАК ИнициаторИнтернетЗаявки,
	|	ВЫБОР
	|		КОГДА ИнтернетЗаявки.Сигнатура ЕСТЬ NULL
	|			ТОГДА Звонки.Инициатор.Код
	|		ИНАЧЕ ИнтернетЗаявки.Инициатор
	|	КОНЕЦ КАК КаналИлиСайт,
	|	ВЫБОР
	|		КОГДА ИнтернетЗаявки.Сигнатура ЕСТЬ NULL
	|			ТОГДА (ВЫРАЗИТЬ(Звонки.Инициатор.Код КАК СТРОКА(11))) + "" "" + (ВЫРАЗИТЬ(Звонки.Инициатор.Назначение КАК СТРОКА(80)))
	|		ИНАЧЕ ИнтернетЗаявки.Инициатор
	|	КОНЕЦ КАК КаналИлиСайтПредставление
	|ПОМЕСТИТЬ ВТ06
	|ИЗ
	|	ВТ05_Звонки КАК ВТ05
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Звонки КАК Звонки
	|		ПО ВТ05.Сигнатура = Звонки.Сигнатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Стат
	|		ПО (Звонки.Сигнатура = Стат.Сигнатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Т.Сигнатура КАК Сигнатура,
	|			""iq_"" + Т.Сигнатура КАК Сигнатура2,
	|			Т.Инициатор КАК Инициатор
	|		ИЗ
	|			РегистрСведений.ИнтернетЗаявки КАК Т
	|		ГДЕ
	|			Т.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, -10) И &ДатаОкончания) КАК ИнтернетЗаявки
	|		ПО (Стат.Основание = ИнтернетЗаявки.Сигнатура2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Супергруппа КАК Супергруппа,
	|	Т.Группа КАК Группа,
	|	Т.Сайт КАК Корень
	|ПОМЕСТИТЬ ВТ07_ИерархияМаркетинга
	|ИЗ
	|	&ИерархияМаркетинга КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ06.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ06.Сигнатура КАК Сигнатура,
	|	ВТ06.Машинозаезд КАК Машинозаезд,
	|	ВТ06.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ06.КоличествоЦелевых КАК КоличествоЦелевых,
	|	ВТ06.Канал КАК Канал,
	|	ВТ06.ИнтернетЗаявка КАК ИнтернетЗаявка,
	|	ВТ06.ИнициаторИнтернетЗаявки КАК ИнициаторИнтернетЗаявки,
	|	ВТ06.КаналИлиСайт КАК КаналИлиСайт,
	|	ВТ06.КаналИлиСайтПредставление КАК КаналИлиСайтПредставление,
	|	ЕСТЬNULL(ВТ07.Группа, ""<нет группы нижнего уровня в иерархии>"") КАК ИерархияГруппаНижняя,
	|	ЕСТЬNULL(ВТ07.Супергруппа, ""<нет группы верхнего уровня в иерархии>"") КАК ИерархияГруппаВерхняя,
	|	ЕСТЬNULL(ВТ07.Супергруппа, ""яяяяяяя"") КАК ИерархияГруппаВерхняяСортировка
	|ИЗ
	|	ВТ06 КАК ВТ06
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ07_ИерархияМаркетинга КАК ВТ07
	|		ПО ВТ06.КаналИлиСайт = ВТ07.Корень
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВТ06.ЭтоВходящий
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВТ06.ИнтернетЗаявка <> ""<без интернет-заявки> ""
	|		КОНЕЦ";
	
 	Запрос.УстановитьПараметр("ДатаНачала", 				ДатаНачала);
 	Запрос.УстановитьПараметр("ДатаОкончания", 				ДатаОкончания);
	Запрос.УстановитьПараметр("РеестрЦелевыхТек", 			РеестрЦелевыхТек);
	Запрос.УстановитьПараметр("ТелефоныКонтактЦентра",		ТелефоныКонтактЦентра);
	Запрос.УстановитьПараметр("ЗаписьНаРемонт",				Справочники.ИдентификаторыСтрок.НайтиПоНаименованию("Запись на ремонт", Истина));
	Запрос.УстановитьПараметр("ПервичнаяКонсультация",		Справочники.ИдентификаторыСтрок.НайтиПоНаименованию("Первичная консультация", Истина));
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек",			ГруппаЦелевыхТочек);
	Запрос.УстановитьПараметр("ИерархияМаркетинга",			ИерархияМаркетинга);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Возврат РезультатЗапроса;
КонецФункции

Функция СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ТаблДок) Экспорт
	
	ЗначениеПоУмолчанию = "";
	
	ЭтотОбъект.РеестрЦелевыхТек.Очистить();
	
	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	
			
	//Реестр целевых текущего периода из ОУ загрузить
	//-------------------------------------------------
	КодТочкиОформленияУфа = "000000008";
	РеестрЦелевых_Загрузить(БИ, "РеестрЦелевыхТек", ДатаНачала, ДатаОкончания, КодТочкиОформленияУфа, "");
			
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);

КонецФункции

Функция РеестрЦелевых_Загрузить(БИ, ИмяТаблЧасти, ДатаНачала, ДатаОкончания, КодТочкиОформленияКорректировки, ПустаяСтрока) Экспорт
	//Целевым признаем звонок, ставший основанием Машинозаезда
	//TODO: удалить дубликаты, т.к. несколько звонков могут быть связаны с одним машинозаездом
	
	ЗначениеПоУмолчанию = Ложь;
	
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = 
	"ВЫБРАТЬ
	|	Звонки.Ссылка КАК Ссылка,
	|	Звонки.Код КАК Сигнатура,
	|	Звонки.Дата КАК ДатаЗвонка,
	|	Звонки.ТочкаОформления КАК ТочкаОформленияСсылка,
	|	Звонки.ТочкаОформления.Наименование КАК ТочкаОформленияПредставление,
	|	Представление(Звонки.Основание) КАК ОснованиеДля,
	|	1 КАК КоличествоЦелевыхБезПочты
	|ИЗ
	|	Справочник.Звонки КАК Звонки
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Звонки.Основание ССЫЛКА Документ.Машинозаезд";
	
	БИ_Запрос.УстановитьПараметр("ДатаНачала",				ДатаНачала);
	БИ_Запрос.УстановитьПараметр("ДатаОкончания", 			ДатаОкончания);	
	БИ_Запрос.УстановитьПараметр("ПустаяСтрока",		 	ПустаяСтрока);
	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = ЭтотОбъект[ИмяТаблЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(Новая, БИ_Выборка, "ДатаЗвонка, Сигнатура, КоличествоЦелевыхБезПочты, ОснованиеДля");

		Новая.ТочкаОформленияОУГУИД			= БИ.XMLСтрока(БИ_Выборка.ТочкаОформленияСсылка);
		Новая.ТочкаОформленияНаименование	= БИ_Выборка.ТочкаОформленияПредставление;
		Новая.НавСсылка                     = БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
	КонецЦикла;
	
	Возврат  Истина;

КонецФункции
