
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьИерархию();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ЗаписатьИерархию()
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИерархию()
	

	//Если ЭтаФорма.Отчет.Иерархия.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	////Проверим, что один и тот же сайт не встречается более одного раза
	////------------------------------------------------------------------
	//Запрос = Новый  Запрос();
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ТЗ.Сайт КАК Сайт,
	//|	СУММА(1) КАК Поле1
	//|ИЗ
	//|	&ТЗ КАК ТЗ
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТЗ.Сайт
	//|
	//|ИМЕЮЩИЕ
	//|	СУММА(1) > 1";
	//Запрос.УстановитьПараметр("ТЗ", ЭтаФорма.Отчет.Иерархия);
	//РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	//Если Не РезультатЗапроса.Пустой() Тогда
	//	Сообщить("Один и тот же сайт повторяется в разных группах. Иерархия не сохранена.");
	//	Возврат
	//КонецЕсли;
	//
	//
	//Зап = Новый ЗаписьXML();
	//Зап.УстановитьСтроку();
	//Зап.ЗаписатьОбъявлениеXML();
	//Зап.ЗаписатьНачалоЭлемента("root"); 	// <root>

	//Для Каждого СтрТЧ Из ЭтаФорма.Отчет.Иерархия Цикл
	//	Зап.ЗаписатьНачалоЭлемента("row");  	//<row>

	//		Зап.ЗаписатьНачалоЭлемента("group");	//<group>
	//		Зап.ЗаписатьТекст(СтрТЧ.Группа);
	//		Зап.ЗаписатьКонецЭлемента(); 			//</group>

	//		Зап.ЗаписатьНачалоЭлемента("site");		//<site>
	//		Зап.ЗаписатьТекст(СтрТЧ.Сайт);
	//		Зап.ЗаписатьКонецЭлемента(); 			//</site>

	//    Зап.ЗаписатьКонецЭлемента(); 			//</row>

	//КонецЦикла;
	//
	//Зап.ЗаписатьКонецЭлемента(); 			 //	</root>

	//Стр=Зап.Закрыть();
	//
	//Если ЭтаФорма.Отчет.ИерархияСтрокой = Стр Тогда
	//	Возврат
	//КонецЕсли;
	//
	//ТекДата = ТекущаяДата();
	//НЗ = РегистрыСведений.УчетнаяПолитика.СоздатьНаборЗаписей();
	//НЗ.Отбор.Период.Установить(ТекДата);
	//НЗ.Отбор.Параметр.Установить("Отчет_ПрогнозЗадачПоИнтернетЗаявкам_Иерархия");
	//НЗ.Прочитать();
	//
	//Новая = НЗ.Добавить();
	//Новая.Период 			= ТекДата;
	//Новая.Параметр 			= "Отчет_ПрогнозЗадачПоИнтернетЗаявкам_Иерархия";
	//Новая.ТипЗначения 			= "Строка";
	//Новая.Значение 			= Стр;
	//
	//Попытка
	//	НЗ.Записать();
	//Исключение
	//	Данные = "Стр = "+Стр;
	//	Комментарий = ОписаниеОшибки();
	//	ОбслуживаниеСервер.ЗарегистрироватьСобытие("Записать параметр учетной политики", УровеньЖурналаРегистрации.Ошибка, Данные, Комментарий,,,,ИмяКомпьютера());
	//КонецПопытки;
	//
	
	Об = РеквизитФормыВЗначение("Отчет");
	Об.ЗаписатьИерархию();
	ЗначениеВРеквизитФормы(Об, "Отчет");
	
	ЗагрузитьИерархию ();
	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИерархию ()
	//Вставить содержимое обработчика
	Парам = Новый Структура();
	Парам.Вставить("Отчет_ЦелевыеВходящиеЗвонкиПоКлассифайдам_Иерархия");
	РегистрыСведений.УчетнаяПолитика.Получи(Парам);
	
	Если Не ЗначениеЗаполнено(Парам["Отчет_ЦелевыеВходящиеЗвонкиПоКлассифайдам_Иерархия"]) Тогда
		Возврат
	Иначе
		ПрочитатьИерархию(Парам["Отчет_ЦелевыеВходящиеЗвонкиПоКлассифайдам_Иерархия"]);
		ЭтаФорма.отчет.ИерархияСтрокой = Парам["Отчет_ЦелевыеВходящиеЗвонкиПоКлассифайдам_Иерархия"];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьИерархию(Стр)
	ЭтаФорма.Отчет.Иерархия.Очистить();
	
	Чт = Новый ЧтениеXML();
	Чт.УстановитьСтроку(Стр);
	Постр = Новый ПостроительDOM();
	Док = Постр.Прочитать(Чт);
	
	Корень = Док.ДочерниеУзлы[0];
	Для Каждого Ряд Из Корень.ДочерниеУзлы Цикл
			Новая = ЭтаФорма.Отчет.Иерархия.Добавить();
			Новая.Группа 	= Ряд.ДочерниеУзлы[0].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Новая.Сайт 		= Ряд.ДочерниеУзлы[1].ДочерниеУзлы[0].ТекстовоеСодержимое;
	КонецЦикла;
	
КонецФункции
