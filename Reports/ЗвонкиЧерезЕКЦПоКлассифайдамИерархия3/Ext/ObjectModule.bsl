
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДатаНачала 		= Период.ДатаНачала;
	ДатаОкончания   = Период.ДатаОкончания;
	
	ПрочитатьИерархию("Отчет_ВходящиеЗвонкиПоКлассифайдам_Иерархия3");

	ВсеКаналыИДаты = Новый ТаблицаЗначений();
	ВсеКаналыИДаты.Колонки.Добавить("Группа",		Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(64)));
	ВсеКаналыИДаты.Колонки.Добавить("Канал", 		Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(25)));
	ВсеКаналыИДаты.Колонки.Добавить("Дата", 		Новый ОписаниеТипов("Дата"));
	ВсеКаналыИДаты.Колонки.Добавить("Супергруппа",	Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(64)));

	
	Для Каждого Стр Из Иерархия Цикл
		ТекДата = НачалоДня(ДатаНачала);
		Пока ТекДата <= НачалоДня(ДатаОкончания) Цикл
			Новая = ВсеКаналыИДаты.Добавить();
			Новая.Группа 		= Стр.Группа; 
			Новая.Канал			= Стр.Сайт;
			Новая.Дата			= ТекДата;			
			Новая.Супергруппа 	= Стр.Супергруппа;
			ТекДата				= НачалоДня(ТекДата+(1*24*60*60));
		КонецЦикла;	
	КонецЦикла;
	
	ПрогнозЗадачПоИнтернетЗаявкам = Отчеты.ПрогнозЗадачПоИнтернетЗаявкамДинамикаПоДням.Создать();
	ПрогнозЗадачПоИнтернетЗаявкам.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"), 		Период);
	тзПрогноз = ПрогнозЗадачПоИнтернетЗаявкам.Сформировать();

	Запрос = Новый Запрос();
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	""<нет расшифровке в этом отчете> "" КАК Сигнатура,
	|	Т.Инициатор КАК Инициатор,
	|	НАЧАЛОПЕРИОДА(Т.ДатаТек, ДЕНЬ) КАК Дата,
	|	ДЕНЬНЕДЕЛИ(Т.ДатаТек) КАК ДеньНедели,
	|	Т.Инициатор КАК НаименованиеКанала,
	|	Т.Инициатор КАК НаименованиеНазначениеКанала,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ040_Прогноз
	|ИЗ
	|	&Прогноз КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ040.Сигнатура КАК Сигнатура,
	|	ВТ040.Инициатор КАК Инициатор,
	|	ВТ040.Дата КАК Дата,
	|	ВТ040.ДеньНедели КАК ДеньНедели,
	|	ВТ040.НаименованиеКанала КАК НаименованиеКанала,
	|	ВТ040.НаименованиеНазначениеКанала КАК НаименованиеНазначениеКанала,
	|	ВТ040.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ010_БезИерархии
	|ИЗ
	|	ВТ040_Прогноз КАК ВТ040
	|ГДЕ
	|	ВТ040.Инициатор <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Звонки.Сигнатура,
	|	Звонки.Инициатор,
	|	НАЧАЛОПЕРИОДА(Звонки.Дата, ДЕНЬ),
	|	ДЕНЬНЕДЕЛИ(Звонки.Дата),
	|	ТелВнешние.Код,
	|	ТелВнешние.Наименование + "" "" + ТелВнешние.Назначение,
	|	1
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТелВнешние КАК ТелВнешние
	|		ПО Звонки.Инициатор = ТелВнешние.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК ЗвонкиСтатОбщая
	|		ПО Звонки.Сигнатура = ЗвонкиСтатОбщая.Сигнатура
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТелВнешние.Ссылка В(&Каналы)
	|	И ЗвонкиСтатОбщая.КЦСсылка = &КЦСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЗ.Группа КАК Группа,
	|	ТЗ.Сайт КАК Сайт,
	|	ТЗ.Супергруппа КАК Супергруппа
	|ПОМЕСТИТЬ ВТ00_Иерархия
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ010_БезИерархии.Сигнатура КАК Сигнатура,
	|	ВТ010_БезИерархии.Инициатор КАК Инициатор,
	|	ВТ010_БезИерархии.Дата КАК Дата,
	|	ВТ010_БезИерархии.ДеньНедели КАК ДеньНедели,
	|	ВТ010_БезИерархии.НаименованиеНазначениеКанала КАК НаименованиеНазначениеКанала,
	|	ВТ010_БезИерархии.Количество КАК Количество,
	|	ЕСТЬNULL(ВТ00_Иерархия.Группа, ""<Группа не задана>"") КАК Группа,
	|	ЕСТЬNULL(ВТ00_Иерархия.Супергруппа, ""<Группа верхнего уровня не задана>"") КАК Супергруппа
	|ПОМЕСТИТЬ ВТ020_РезультатБезДополнения
	|ИЗ
	|	ВТ010_БезИерархии КАК ВТ010_БезИерархии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ00_Иерархия КАК ВТ00_Иерархия
	|		ПО ВТ010_БезИерархии.НаименованиеКанала = ВТ00_Иерархия.Сайт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Все.Супергруппа КАК супергруппа,
	|	Все.Группа КАК Группа,
	|	Все.Канал КАК Канал,
	|	Все.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ030_Дополнение
	|ИЗ
	|	&ВсеКаналыИДаты КАК Все
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ030.супергруппа КАК Супергруппа,
	|	ВТ030.Группа КАК Группа,
	|	ВТ030.Канал КАК Канал,
	|	ВЫБОР
	|		КОГДА ТелВнешние.Ссылка ЕСТЬ NULL
	|			ТОГДА ВТ030.Канал
	|		ИНАЧЕ ТелВнешние.Наименование + "" "" + ТелВнешние.Назначение
	|	КОНЕЦ КАК НаименованиеНазначениеКанала,
	|	ВТ030.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ035_Дополнение
	|ИЗ
	|	ВТ030_Дополнение КАК ВТ030
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТелВнешние КАК ТелВнешние
	|		ПО ВТ030.Канал = ТелВнешние.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ020.Сигнатура КАК Сигнатура,
	|	ВТ020.Инициатор КАК Инициатор,
	|	ВТ020.Дата КАК Дата,
	|	ВТ020.ДеньНедели КАК ДеньНедели,
	|	ВТ020.НаименованиеНазначениеКанала КАК НаименованиеНазначениеКанала,
	|	ВТ020.Количество КАК Количество,
	|	ВТ020.Группа КАК Группа,
	|	ВТ020.Супергруппа КАК Супергруппа
	|ИЗ
	|	ВТ020_РезультатБезДополнения КАК ВТ020
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	"""",
	|	"""",
	|	ВТ035.Дата,
	|	ДЕНЬНЕДЕЛИ(ВТ035.Дата),
	|	ВТ035.НаименованиеНазначениеКанала,
	|	0,
	|	ВТ035.Группа,
	|	ВТ035.Супергруппа
	|ИЗ
	|	ВТ035_Дополнение КАК ВТ035";
	
	Запрос.УстановитьПараметр("ДатаНачала",		ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",	ДатаОкончания);
	Запрос.УстановитьПараметр("Каналы",			КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Каналы")).Значение.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ТЗ", 			Иерархия);
	Запрос.УстановитьПараметр("ВсеКаналыИДаты",	ВсеКаналыИДаты);
	Запрос.УстановитьПараметр("КЦСсылка",		Справочники.Предприятие.НайтиПоКоду("000000265"));
	
	Запрос.УстановитьПараметр("Прогноз",		тзПрогноз);

	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	ТЗ = РезультатЗапроса.Выгрузить();

	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	СКД = ПолучитьМакет("МакетНаТЗ");
	Настройки = СКД.НастройкиПоУмолчанию;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);

 КонецПроцедуры
 
Процедура ЗаписатьИерархию(ИмяИерархии) Экспорт
	

	Если Иерархия.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	//Проверим, что один и тот же сайт не встречается более одного раза
	//------------------------------------------------------------------
	Запрос = Новый  Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЗ.Сайт КАК Сайт
	|ПОМЕСТИТЬ ВТ01
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Сайт КАК Сайт,
	|	СУММА(1) КАК Поле1
	|ИЗ
	|	ВТ01 КАК ВТ01
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ01.Сайт
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1";
	Запрос.УстановитьПараметр("ТЗ", Иерархия);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если Не РезультатЗапроса.Пустой() Тогда
		Сообщить("Один и тот же номер повторяется в разных группах. Иерархия не сохранена.");
		Возврат
	КонецЕсли;
	
	
	Зап = Новый ЗаписьXML();
	Зап.УстановитьСтроку();
	Зап.ЗаписатьОбъявлениеXML();
	Зап.ЗаписатьНачалоЭлемента("root"); 	// <root>

	Для Каждого СтрТЧ Из ЭтотОбъект.Иерархия Цикл
		Зап.ЗаписатьНачалоЭлемента("row");  	//<row>

			Зап.ЗаписатьНачалоЭлемента("group");	//<group>
			Зап.ЗаписатьТекст(СтрТЧ.Группа);
			Зап.ЗаписатьКонецЭлемента(); 			//</group>

			Зап.ЗаписатьНачалоЭлемента("site");		//<site>
			Зап.ЗаписатьТекст(СтрТЧ.Сайт);
			Зап.ЗаписатьКонецЭлемента(); 			//</site>
			
			Зап.ЗаписатьНачалоЭлемента("supergroup");		//<supergroup>
			Зап.ЗаписатьТекст(СтрТЧ.Супергруппа);
			Зап.ЗаписатьКонецЭлемента(); 				//</supergroup>


	    Зап.ЗаписатьКонецЭлемента(); 			//</row>

	КонецЦикла;
	
	Зап.ЗаписатьКонецЭлемента(); 			 //	</root>

	Стр=Зап.Закрыть();
	
	Если ЭтотОбъект.ИерархияСтрокой = Стр Тогда
		Возврат
	КонецЕсли;
	
	ТекДата = ТекущаяДата();
	НЗ = РегистрыСведений.УчетнаяПолитика.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(ТекДата);
	НЗ.Отбор.Параметр.Установить(ИмяИерархии);
	НЗ.Прочитать();
	
	Новая = НЗ.Добавить();
	Новая.Период 			= ТекДата;
	Новая.Параметр 			= ИмяИерархии;
	Новая.ТипЗначения 		= "Строка";
	Новая.Значение 			= Стр;
	
	УстановитьПривилегированныйРежим(Истина);
	Попытка
		НЗ.Записать();
	Исключение
		Данные = "Стр = "+Стр;
		Комментарий = ОписаниеОшибки();
		ОбслуживаниеСервер.ЗарегистрироватьСобытие("Записать параметр учетной политики", УровеньЖурналаРегистрации.Ошибка, Данные, Комментарий,,,,ИмяКомпьютера());
	КонецПопытки;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПрочитатьИерархию(ИмяИерархии)
	
	Парам = Новый Структура();
	Парам.Вставить(ИмяИерархии);
	РегистрыСведений.УчетнаяПолитика.Получи(Парам);
	
	Если Не ЗначениеЗаполнено(ИмяИерархии) Тогда
		Возврат 
	Иначе
		_ИерархияСтрокой = Парам[ИмяИерархии];
	КонецЕсли;	

	ЭтотОбъект.Иерархия.Очистить();
	
	Чт = Новый ЧтениеXML();
	Чт.УстановитьСтроку(_ИерархияСтрокой);
	Постр = Новый ПостроительDOM();
	Док = Постр.Прочитать(Чт);
	
	Корень = Док.ДочерниеУзлы[0];
	Для Каждого Ряд Из Корень.ДочерниеУзлы Цикл
			Новая = ЭтотОбъект.Иерархия.Добавить();
			Новая.Группа 		= Ряд.ДочерниеУзлы[0].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Новая.Сайт 			= Ряд.ДочерниеУзлы[1].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Новая.СуперГруппа 	= Ряд.ДочерниеУзлы[2].ДочерниеУзлы[0].ТекстовоеСодержимое; 
	КонецЦикла;
КонецПроцедуры



