&НаКлиенте
Процедура ВидимостьНастроек(Команда)
	Элементы.ГруппаСтраницы.Видимость = НЕ Элементы.ГруппаСтраницы.Видимость;
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Отчет.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Отчет.Период.ДатаОкончания = КонецМесяца(Отчет.Период.ДатаНачала);
	
	Элементы.ГруппаСтраницы.Видимость = Ложь;

	ОбновитьОтображение();
КонецПроцедуры

&НаСервере
Процедура УстановиОтборы()
	//Получи перечень точек оформления, фигуировавших в течении последнего месяца
	//---------------------------------------------------------------------------	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ Точка ИЗ РегистрСведений.Продажи ГДЕ Вид = &Вид И Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок, МЕСЯЦ, -3) И &ДатаДок УПОРЯДОЧИТЬ ПО Точка");
	Запрос.УстановитьПараметр("Вид", "Ремонт авто") ;
	Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат
	КонецЕсли;

	ДоступныеТочки = Новый Массив();
	Если Не ПараметрыСеанса.РольДоступнаАдминистратор Тогда
		//Определи доступные точки для отбора
		//-----------------------------------
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(Рег.Точка КАК СТРОКА(32)) КАК Точка
		|ИЗ
		|	Справочник.Предприятие КАК Предприятие
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТочкиПродажВподразделения КАК Рег
		|		ПО Предприятие.Ссылка = Рег.Подразделение
		|ГДЕ
		|	Предприятие.Ссылка В ИЕРАРХИИ
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ПользователиПодразделения.Подразделение
		|			ИЗ
		|				Справочник.Пользователи.Подразделения КАК ПользователиПодразделения
		|			ГДЕ
		|				ПользователиПодразделения.Ссылка = &Ссылка)";
		Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийПользователь);
		Рзт = Запрос.Выполнить();
		Если Не Рзт.Пустой() Тогда
			ДоступныеТочки = Рзт.Выгрузить().ВыгрузитьКолонку(0);
		КонецЕсли;
	КонецЕсли;
	
	ГрОтбора1 = ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		ЭлОтбора1 = ГрОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлОтбора1.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Точка");
		ЭлОтбора1.ПравоеЗначение=Выб.Точка;
		ЭлОтбора1.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		
		Если ДоступныеТочки.Количество()>0 Тогда
			ЭлОтбора1.Использование = ?(ДоступныеТочки.Найти(Выб.Точка)=Неопределено, Ложь, Истина);
		Иначе
			ЭлОтбора1.Использование=Истина;		
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ 		Т.ХарактеристикаОбъекта КАК ВидРемонта
	|ИЗ 					РегистрСведений.Продажи КАК Т
	|ГДЕ 					Т.Вид = &Вид И Т.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок, МЕСЯЦ, -3) И &ДатаДок
	|УПОРЯДОЧИТЬ ПО			 Т.ХарактеристикаОбъекта";
	Запрос.УстановитьПараметр("Вид", "Ремонт авто") ;
	Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат
	КонецЕсли;
	ГрОтбора2 = ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрОтбора2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		ЭлОтбора2 = ГрОтбора2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлОтбора2.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ВидРемонта");
		ЭлОтбора2.ПравоеЗначение=Выб.ВидРемонта;
		ЭлОтбора2.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		ЭлОтбора2.Использование=Истина;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериода(Команда)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода(); 
	Диалог.Период = Отчет.Период;
	
	Оп = Новый ОписаниеОповещения("НаЗакрытиеДиалогаПериода", ЭтаФорма);
	Диалог.Показать(Оп);
	//Если Диалог.Редактировать() Тогда 
	//	Отчет.Период = Диалог.Период; 
	//КонецЕсли;
	
	//ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура НаЗакрытиеДиалогаПериода(Парам1, Парам2) Экспорт
	Если Парам1 = Неопределено Тогда
		Возврат
	КонецЕсли;
	Отчет.Период = Парам1;
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображение()
	Элементы.ВыборПериода.Заголовок = " "+Формат(Отчет.Период.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Отчет.Период.ДатаОкончания, "ДЛФ=Д");
	Элементы.ВидимостьНастроек.Пометка = Элементы.ГруппаСтраницы.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	//Возврати стуктуру "Поле:Значение"
	//--------------------------------
	рез = РезультатОбработкаРасшифровкиНаСервере(Расшифровка);
	
	Если рез.Поле = "СигнатураГруппирующегоДокумента" Тогда
		Если ЗначениеЗаполнено(рез.Значение) Тогда
			Если СтрНайти(рез.Значение, "#")=0 Тогда
				ГУИД 	  = Прав(рез.Значение, 36);
				ref		  = ОбщегоНазначения.GUID_2_ref(ГУИД);
				АбсСсылка = "e1c://server/MainAppМ/asc_oper#e1cib/data/Документ.МашиноЗаезд?ref="+ref;		
				ПерейтиПоНавигационнойСсылке(АбсСсылка)
			ИначеЕсли СтрНайти(рез.Значение, "SK")>0  Тогда
				ГУИД 	  = Прав(рез.Значение, 36);
				ref		  = ОбщегоНазначения.GUID_2_ref(ГУИД);
				АбсСсылка = "e1c://server/MainAppМ/asc_oper#e1cib/data/Документ.ЗаказНаряд?ref="+ref;		
				ПерейтиПоНавигационнойСсылке(АбсСсылка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Рез) Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(Рез)<>Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Рез, "#", , 2) =0 Тогда
		Возврат
	КонецЕсли;
	
	Парам = Новый Структура();
	Парам.Вставить("Сигнатура", рез);
	Если Лев(Рез,1) = "0" Тогда
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение";
	Иначе
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаВходящегоЧтение";
	КонецЕсли;
	ОткрытьФорму(ИмяОткрываемойФормы, Парам, ЭтаФорма);

КонецПроцедуры

&НаСервере
Функция РезультатОбработкаРасшифровкиНаСервере(Расшифровка)
	Перем Рез;
	
	РасшифровкаОтчета = ПолучитьИзВременногоХранилища(ЭтаФорма.ДанныеРасшифровки);
	ЭлементыРасшифровки = РасшифровкаОтчета.Элементы;
	РасшифровкаЯчейки =  ЭлементыРасшифровки.Получить(Расшифровка);
	ЗначенияПолейРасш = РасшифровкаЯчейки.ПолучитьПоля();
	ЗначениеПоляРасш = ЗначенияПолейРасш.Получить(0);
	
	Рез = Новый Структура();
	Рез.Вставить("Поле",		ЗначениеПоляРасш.Поле);
	Рез.Вставить("Значение",	ЗначениеПоляРасш.Значение);
	Возврат Рез;
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	УстановиОтборы();
КонецПроцедуры


 
