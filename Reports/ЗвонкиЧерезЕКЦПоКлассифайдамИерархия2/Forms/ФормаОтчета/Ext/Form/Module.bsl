&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отчет.ИерархияИмя = "Отчет_ВходящиеЗвонкиПоКлассифайдам_Иерархия2";
	
	ТекДата = ЗначенияСервера.ТекущаяДатаСервер();
	Отчет.Период.ДатаНачала 	= НачалоМесяца(ТекДата);
	Отчет.Период.ДатаОкончания 	= ТекДата;

	//Прочитать иерархию
	//-------------------	
	Парам = Новый Структура();
	Парам.Вставить(ЭтаФорма.Отчет.ИерархияИмя);
	РегистрыСведений.УчетнаяПолитика.Получи(Парам);
	
	Если Не ЗначениеЗаполнено(Парам[Отчет.ИерархияИмя]) Тогда
		Возврат
	Иначе
		ПрочитатьИерархию(Парам[Отчет.ИерархияИмя]);
		ЭтаФорма.отчет.ИерархияСтрокой = Парам[Отчет.ИерархияИмя];
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ГруппаСтраницы.Видимость = Ложь;
	ОбновитьОтображение();
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)

	СписокКаналов = Новый Массив();
	Для Каждого Зап Из Отчет.Иерархия Цикл
		
		Если СтрНайти(Зап.Сайт, ".ru")>0 Тогда
			//Значит это действительно сайт, а не канал
			//-----------------------------------------
			Продолжить;
		КонецЕсли;
	    СписокКаналов.Добавить(Зап.Сайт);
	КонецЦикла;

	ПустаяСсылка = ПредопределенноеЗначение("Справочник.ТелВнешние.ПустаяСсылка");	
	Каналы = Новый Массив();
	Для Каждого Эл Из СписокКаналов Цикл
		Канал = Справочники.ТелВнешние.НайтиПоКоду(Эл);
		Если Канал = ПустаяСсылка Тогда
			Сообщить("Не найден канал: " +Эл);
			Продолжить;
		КонецЕсли;
		Каналы.Добавить(Канал);
	КонецЦикла;	
	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Каналы" ,Каналы);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИерархию(Команда) 
	Парам = Новый Структура("ИмяИерархии", Отчет.ИерархияИмя);
	ОткрытьФорму("Отчет.ЗвонкиЧерезЕКЦПоКлассифайдамИерархия2.Форма.Иерархия", Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаСервере
Функция ПрочитатьИерархию(Стр)
	
	Отчет.Иерархия.Очистить();
	
	Чт = Новый ЧтениеXML();
	Чт.УстановитьСтроку(Стр);
	Постр = Новый ПостроительDOM();
	Док = Постр.Прочитать(Чт);
	
	Корень = Док.ДочерниеУзлы[0];
	Для Каждого Ряд Из Корень.ДочерниеУзлы Цикл
			Новая = ЭтаФорма.Отчет.Иерархия.Добавить();
			Новая.Группа 	= Ряд.ДочерниеУзлы[0].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Новая.Сайт 		= Ряд.ДочерниеУзлы[1].ДочерниеУзлы[0].ТекстовоеСодержимое;
	КонецЦикла;
КонецФункции

#Область Выбор_периода
&НаКлиенте
Процедура ВыборПериода(Команда)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода(); 
	Диалог.Период = Отчет.Период;
	
	Оп = Новый ОписаниеОповещения("НаЗакрытиеДиалогаПериода", ЭтаФорма);
	Диалог.Показать(Оп);
КонецПроцедуры

&НаКлиенте
Процедура НаЗакрытиеДиалогаПериода(Парам1, Парам2) Экспорт
	Если Парам1 = Неопределено Тогда
		Возврат
	КонецЕсли;
	Отчет.Период = Парам1;
	ОбновитьОтображение();
КонецПроцедуры
#КонецОбласти

&НаКлиенте     
Процедура ОбновитьОтображение()
	Элементы.ВыборПериода.Заголовок = " "+Формат(Отчет.Период.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Отчет.Период.ДатаОкончания, "ДЛФ=Д");
	Элементы.ВидимостьНастроек.Пометка = Элементы.ГруппаСтраницы.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
	рез = РезультатОбработкаРасшифровкиНаСервере(Расшифровка);
	
	Если Не ЗначениеЗаполнено(Рез) Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(Рез)<>Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Рез, "#", , 2) =0 Тогда
		Возврат
	КонецЕсли;
	
	Парам = Новый Структура();
	Парам.Вставить("Сигнатура", рез);
	Если Лев(Рез,1) = "0" Тогда
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение";
	Иначе
		ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаВходящегоЧтение";
	КонецЕсли;
	ОткрытьФорму(ИмяОткрываемойФормы, Парам, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаСервере
Функция РезультатОбработкаРасшифровкиНаСервере(Расшифровка)
	РасшифровкаОтчета = ПолучитьИзВременногоХранилища(ЭтаФорма.ДанныеРасшифровки);
	ЭлементыРасшифровки = РасшифровкаОтчета.Элементы;
	РасшифровкаЯчейки =  ЭлементыРасшифровки.Получить(Расшифровка);
	ЗначенияПолейРасш = РасшифровкаЯчейки.ПолучитьПоля();
	ЗначениеПоляРасш = ЗначенияПолейРасш.Получить(0);
	Возврат ЗначениеПоляРасш.Значение;
КонецФункции

&НаКлиенте
Процедура ВидимостьНастроек(Команда)
	Элементы.ГруппаСтраницы.Видимость = НЕ Элементы.ГруппаСтраницы.Видимость;
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры






