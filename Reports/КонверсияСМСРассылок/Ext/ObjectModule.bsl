
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	КолВоТелНомеровВФайле	=	ЭтотОбъект.ПодготовленныеДанные.Количество();
	КолВоВхЗвонков			=	0;
	Конверсия				=	0;

	Рез = ЗагрузитьЗвонкиОУ(ЭтотОбъект.ПериодОбработки.ДатаНачала, ЭтотОбъект.ПериодОбработки.ДатаОкончания);

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Телефон КАК Телефон,
	|	Т.Отправлено КАК Отправлено
	|ПОМЕСТИТЬ ВТ01
	|ИЗ
	|	&Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Q.Сигнатура КАК Сигнатура,
	|	Q.Статус КАК Статус
	|ПОМЕСТИТЬ ВТ02_ЗвонкиОУ
	|ИЗ
	|	&Q КАК Q
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Телефон КАК Телефон,
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Целевые.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ02.Статус КАК Статус,
	|	1 КАК КоличествоЗвонков,
	|	&КоличествоНомеровВФайле КАК КоличествоНомеровВФайле
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК ЗвонкиСтат
	|		ПО (Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|			И Звонки.Сигнатура = ЗвонкиСтат.Сигнатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиЦелевые КАК Целевые
	|		ПО (Целевые.Сигнатура = Звонки.Сигнатура)
	|			И (Целевые.Собственный = ЛОЖЬ)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ02_ЗвонкиОУ КАК ВТ02
	|		ПО (Целевые.Сигнатура = ВТ02.Сигнатура)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ01 КАК ВТ01
	|		ПО (ВТ01.Телефон = Звонки.АбонентВнешний)
	|			И (ВТ01.Отправлено < Звонки.Дата)
	|			И (Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|ГДЕ
	|	1 = 1
	|	И ВЫБОР
	|			КОГДА Звонки.ЭтоВходящий = ЛОЖЬ
	|					И ЗвонкиСтат.КЦРазговор = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Если ЭтотОбъект.ТочкиЦелевые.Количество() > 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "Целевые.ТочкаЦелевая В (&ЦелевыеТочки)");
		Запрос.УстановитьПараметр("ЦелевыеТочки", ЭтотОбъект.ТочкиЦелевые.ВыгрузитьКолонку("ТочкаЦелевая") );
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Т", 							ЭтотОбъект.ПодготовленныеДанные);
	Запрос.УстановитьПараметр("Q",							ЭтотОбъект.ОУ_Звонки);
	Запрос.УстановитьПараметр("КоличествоНомеровВФайле",	ЭтотОбъект.ПодготовленныеДанные.Количество());
	Запрос.УстановитьПараметр("ДатаНачала", 				ЭтотОбъект.ПериодОбработки.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 				ЭтотОбъект.ПериодОбработки.ДатаОкончания);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 
	КонецЕсли;
			
	ТипСтрока = ОбщегоНазначения.ТипСтрока();
	ТипЧисло  = ОбщегоНазначения.ТипЧисло();
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("Телефон", 					ТипСтрока);
	ТЗ.Колонки.Добавить("Сигнатура", 				ТипСтрока);
	ТЗ.Колонки.Добавить("ТочкаЦелевая", 			Новый ОписаниеТипов("СправочникСсылка.ТочкиЦелевые"));
	ТЗ.Колонки.Добавить("Статус",					ТипСтрока);
	ТЗ.Колонки.Добавить("КоличествоЗвонков",		ТипЧисло);
	ТЗ.Колонки.Добавить("КоличествоНомеровВФайле", 	ТипЧисло);
	
	Выборка = РезультатЗапроса.Выбрать();
	Отбор = Новый Структура();
	Пока Выборка.Следующий() Цикл
		Отбор.Вставить("Телефон", Выборка.Телефон);
		
		Если ТЗ.НайтиСтроки(Отбор).Количество()>0 Тогда
			Продолжить;
		КонецЕсли;
		
		 Новая = ТЗ.Добавить();
		 Новая.Телефон 					= Выборка.Телефон;
		 Новая.Сигнатура 				= Выборка.Сигнатура;
		 Новая.ТочкаЦелевая 			= Выборка.ТочкаЦелевая;
		 Новая.Статус					= Выборка.Статус;
		 Новая.КоличествоЗвонков 		= Выборка.КоличествоЗвонков;
		 Новая.КоличествоНомеровВФайле 	= Выборка.КоличествоНомеровВФайле;
	 КонецЦикла;
	 
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТаблЗнач", ТЗ); 
	 СКД						= ПолучитьМакет("МакетСКДнаТЗ");
	 Настройки 					= СКД.НастройкиПоУмолчанию;
	 КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных();
	 МакетКомпоновки 			= КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	 ПроцессорКомпоновкиДанных 	= Новый ПроцессорКомпоновкиДанных();
	 ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	 ПроцессорВывода 			= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	 ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	 ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	 
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);

 КонецПроцедуры
 
Функция ЗагрузитьЗвонкиОУ (ДатаНачала, ДатаОкончания) Экспорт
	// Выполняет запрос в базе ОУ по документам сделка по выставкам и встречам	
	//------------------------------------------------------------------------
	
	ЗначениеПоУмолчанию = Ложь;
	ЭтотОбъект["ОУ_Звонки"].Очистить();
	
	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	

	ТекстДокОУ 		= ЭтотОбъект.ПолучитьМакет("ОУ_Звонки");
	ТекстЗапросаОУ	= ТекстДокОУ.ПолучитьТекст();
	БИ_Запрос 		= БИ.NewObject("Запрос");
	БИ_Запрос.Текст = ТекстЗапросаОУ;		
		
	БИ_Запрос.УстановитьПараметр("ДатаНачала",			ДатаНачала);
	БИ_Запрос.УстановитьПараметр("ДатаОкончания", 		ДатаОкончания);	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_РезультатЗапроса.Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = ЭтотОбъект["ОУ_Звонки"].Добавить();
		ЗаполнитьЗначенияСвойств(Новая, БИ_Выборка);
	КонецЦикла;
	
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);

	Возврат  Истина;
КонецФункции

Функция ДоступныеЦелевыеОчередиУстанови() Экспорт
	
	ЭтотОбъект.ТочкиЦелевые.Очистить();
	
	МассивДоступныхЦелевыхТочек = ЗначенияСервера.ДоступныеЦелевыеТочки();
	
	Для Каждого Эл Из МассивДоступныхЦелевыхТочек Цикл
		НоваяТочка				= ЭтотОбъект.ТочкиЦелевые.Добавить();
		НоваяТочка.ТочкаЦелевая = Эл;	
	КонецЦикла;

	Возврат Истина;
КонецФункции
