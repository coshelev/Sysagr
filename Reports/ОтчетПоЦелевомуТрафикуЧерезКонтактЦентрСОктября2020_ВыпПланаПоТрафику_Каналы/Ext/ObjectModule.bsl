Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	Если ЭтотОбъект.ВыбранныйВариантОтчета = "СводныйКаналыСайты" Тогда
		ПриКомпоновкеРезультатаСводныйКаналыСайты(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);	
	ИначеЕсли ЭтотОбъект.ВыбранныйВариантОтчета = "СводныйКаналыСайтыДинамика"  Тогда
		ПриКомпоновкеРезультатаСводныйКаналыСайтыДинамика(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);	
	КонецЕсли;
КонецПроцедуры

Процедура ПриКомпоновкеРезультатаСводныйКаналыСайты(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Выполни запрос в базе ОУ по выставкам и встречам
	//-------------------------------------------------
	ДатаНачала					=	Период.ДатаНачала; 
	ДатаОкончания				=	Период.ДатаОкончания;
	
	// Заполнит ТЧ Звонки, Встречи, Задачи по эл. почте
	//-----------------------------------------------------
	СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ДатаНачала, ДатаОкончания, "");
	
	ЗначениеПоУмолчанию = Ложь;

	// Заполни ТЧ План по целевому трафику
	//-------------------------------------
	Месяц = НачалоМесяца(ДатаНачала);
	СформируйТаблицуПланаПоТрафику(Месяц);
	
	СделкиВстречиВыставкиОУ =  СделкиВстречиВыставкиОУ(ДатаНачала, ДатаОкончания);
	СделкиВстречиВыставкиОУиЦелевыеТочкиАгр = СделкиВстречиВыставкиОУиЦелевыеТочкиАгр(СделкиВстречиВыставкиОУ, ДатаОкончания);
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса();
		
 	Запрос.УстановитьПараметр("ДатаНачала", 				ДатаНачала);
 	Запрос.УстановитьПараметр("ДатаОкончания", 				ДатаОкончания);
	Запрос.УстановитьПараметр("РеестрЦелевыхТек", 			ЭтотОбъект.РеестрЦелевыхТек);
	Запрос.УстановитьПараметр("ДоступныеЦелевыеТочки",		ДоступныеЦелевыеТочки);
	Запрос.УстановитьПараметр("ТелефоныКонтактЦентра",		ТелефоныКонтактЦентра);
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек",			ГруппаЦелевыхТочек);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	ТЗ = РезультатЗапроса.Выгрузить();
		
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	СКД = ПолучитьМакет("СводнаяКаналыСайты");	
	Настройки = СКД.НастройкиПоУмолчанию;
	
	Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьЗаголовок").Использование = Истина;
    Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьЗаголовок").Значение      = ТипВыводаТекстаКомпоновкиДанных.Выводить; 
   	Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Использование         = Истина;
  	Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение              = Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy")+" - "+Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(2);

КонецПроцедуры

Процедура ПриКомпоновкеРезультатаСводныйКаналыСайтыДинамика(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//Выполни запрос в базе ОУ по выставкам и встречам
	//-------------------------------------------------
	ДатаНачала					=	Период.ДатаНачала; 
	ДатаОкончания				=	Период.ДатаОкончания;
	
	// Заполнит ТЧ Звонки, Встречи, Задачи по эл. почте
	//-----------------------------------------------------
	СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ДатаНачала, ДатаОкончания, "");
	
	ЗначениеПоУмолчанию = Ложь;

	// Заполни ТЧ План по целевому трафику
	//-------------------------------------
	Месяц = НачалоМесяца(ДатаНачала);
	СформируйТаблицуПланаПоТрафику(Месяц);
	
	СделкиВстречиВыставкиОУ =  СделкиВстречиВыставкиОУ(ДатаНачала, ДатаОкончания);
	СделкиВстречиВыставкиОУиЦелевыеТочкиАгр = СделкиВстречиВыставкиОУиЦелевыеТочкиАгр(СделкиВстречиВыставкиОУ, ДатаОкончания);
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса();
		
 	Запрос.УстановитьПараметр("ДатаНачала", 				ДатаНачала);
 	Запрос.УстановитьПараметр("ДатаОкончания", 				ДатаОкончания);
	Запрос.УстановитьПараметр("РеестрЦелевыхТек", 			ЭтотОбъект.РеестрЦелевыхТек);
	Запрос.УстановитьПараметр("ДоступныеЦелевыеТочки",		ДоступныеЦелевыеТочки);
	Запрос.УстановитьПараметр("ТелефоныКонтактЦентра",		ТелефоныКонтактЦентра);
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек",			ГруппаЦелевыхТочек);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	ТЗ = РезультатЗапроса.Выгрузить();
		
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	СКД = ПолучитьМакет("СводнаяКаналыСайтыДинамика");	
	Настройки = СКД.НастройкиПоУмолчанию;
	
	Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьЗаголовок").Использование = Истина;
    Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьЗаголовок").Значение      = ТипВыводаТекстаКомпоновкиДанных.Выводить; 
   	Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Использование         = Истина;
  	Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение              = Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy")+" - "+Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(2);

КонецПроцедуры

Функция ТекстЗапроса()
	Возврат 
	"ВЫБРАТЬ
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК ДатаЗвонка,
	|	Звонки.ЭтоВходящий КАК Входящий,
	|	Звонки.Принят КАК Принят,
	|	ЗвонкиДоп.ЦелеваяТочка КАК ЦелеваяТочка,
	|	ЗвонкиДоп.СотрудникОУ КАК Сотрудник,
	|	0 КАК КоличествоА,
	|	0 КАК КоличествоБ,
	|	0 КАК Количество1,
	|	0 КАК Количество2,
	|	0 КАК Количество3,
	|	0 КАК Количество4,
	|	0 КАК Количество5,
	|	0 КАК Количество6,
	|	0 КАК Количество7,
	|	0 КАК Количество8,
	|	0 КАК Количество9,
	|	0 КАК КоличествоИтогоПоСтатусам,
	|	0 КАК КоличествоОбщееБезПочты,
	|	0 КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой,
	|	""<Нет направления>"" КАК Направление
	|ПОМЕСТИТЬ ВТ00_ЦелевыеАгрегатора
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиДоп КАК ЗвонкиДоп
	|		ПО Звонки.Сигнатура = ЗвонкиДоп.Сигнатура
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|			КОГДА Звонки.ЭтоВходящий
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Звонки.Инициатор В (&ТелефоныКонтактЦентра)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	|	Т.Сигнатура КАК Сигнатура,
	|	Т.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	Т.Входящий КАК Входящий,
	|	Т.Количество1 КАК Количество1,
	|	Т.Количество2 КАК Количество2,
	|	Т.Количество3 КАК Количество3,
	|	Т.Количество4 КАК Количество4,
	|	Т.Количество5 КАК Количество5,
	|	Т.Количество6 КАК Количество6,
	|	Т.Количество7 КАК Количество7,
	|	Т.Количество8 КАК Количество8,
	|	0 КАК Количество9,
	|	Т.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	Т.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	Т.КоличествоОбщееБезПочты КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой,
	|	1 КАК Принят,
	|	Т.Направление КАК Направление
	|ПОМЕСТИТЬ ВТ01_ЦелевыеОУ
	|ИЗ
	|	&РеестрЦелевыхТек КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ01.Сигнатура КАК Сигнатура,
	|	ВТ01.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	ВТ01.Входящий КАК Входящий,
	|	ВТ01.Количество1 КАК Количество1,
	|	ВТ01.Количество2 КАК Количество2,
	|	ВТ01.Количество3 КАК Количество3,
	|	ВТ01.Количество4 КАК Количество4,
	|	ВТ01.Количество5 КАК Количество5,
	|	ВТ01.Количество6 КАК Количество6,
	|	ВТ01.Количество7 КАК Количество7,
	|	ВТ01.Количество8 КАК Количество8,
	|	ВТ01.Количество9 КАК Количество9,
	|	ВТ01.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ01.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ01.КоличествоОбщееБезПочты КАК КоличествоОбщее,
	|	ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК КоличествоЦелевыхБезПочты,
	|	ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК КоличествоЦелевых,
	|	ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК ОбщийЦелевой,
	|	ВТ01.Принят КАК Принят,
	|	ЕСТЬNULL(СотрОУ.Ссылка, ЗНАЧЕНИЕ(Справочник.ОУ_Сотрудники.ПустаяСсылка)) КАК Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка) КАК ТочкаЦелевая,
	|	ВТ01.Направление КАК Направление
	|ПОМЕСТИТЬ ВТ03_ЦелевыеОУ
	|ИЗ
	|	ВТ01_ЦелевыеОУ КАК ВТ01
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОУ_Сотрудники КАК СотрОУ
	|		ПО ВТ01.СотрудникОУГУИД = СотрОУ.ГУИД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ00.ДатаЗвонка, ВТ03.ДатаЗвонка) КАК ДатаЗвонка,
	|	ЕСТЬNULL(ВТ00.Сигнатура, ВТ03.Сигнатура) КАК Сигнатура,
	|	ЕСТЬNULL(ВТ00.ЦелеваяТочка, ВТ03.ТочкаЦелевая) КАК ТочкаЦелевая,
	|	ВЫБОР
	|		КОГДА ВТ00.Сотрудник ЕСТЬ NULL
	|			ТОГДА ВТ03.Сотрудник
	|		КОГДА ВТ00.Сотрудник = ЗНАЧЕНИЕ(Справочник.ОУ_Сотрудники.ПустаяСсылка)
	|			ТОГДА ВТ03.Сотрудник
	|		ИНАЧЕ ВТ00.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА НЕ ВТ00.Сигнатура ЕСТЬ NULL
	|				И ЕСТЬNULL(ВТ00.Принят, ЛОЖЬ) = ИСТИНА
	|				И ВТ03.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоА,
	|	ВЫБОР
	|		КОГДА НЕ ВТ03.Сигнатура ЕСТЬ NULL
	|				И ВТ00.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоБ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ00.Сигнатура ЕСТЬ NULL
	|				И ЕСТЬNULL(ВТ00.Принят, ЛОЖЬ) = ЛОЖЬ
	|				И ВТ03.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоГ,
	|	ЕСТЬNULL(ВТ03.Количество1, 0) КАК Количество1,
	|	ЕСТЬNULL(ВТ03.Количество2, 0) КАК Количество2,
	|	ЕСТЬNULL(ВТ03.Количество3, 0) КАК Количество3,
	|	ЕСТЬNULL(ВТ03.Количество4, 0) КАК Количество4,
	|	ЕСТЬNULL(ВТ03.Количество5, 0) КАК Количество5,
	|	ЕСТЬNULL(ВТ03.Количество6, 0) КАК Количество6,
	|	ЕСТЬNULL(ВТ03.Количество7, 0) КАК Количество7,
	|	ЕСТЬNULL(ВТ03.Количество8, 0) КАК Количество8,
	|	ЕСТЬNULL(ВТ03.Количество9, 0) КАК Количество9,
	|	ЕСТЬNULL(ВТ03.КоличествоИтогоПоСтатусам, 0) КАК КоличествоИтогоПоСтатусам,
	|	ЕСТЬNULL(ВТ03.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщееБезПочты,
	|	ЕСТЬNULL(ВТ03.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщее,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевыхБезПочты,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевых,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК ОбщийЦелевой,
	|	ЕСТЬNULL(ВТ00.Принят, ВТ03.Принят) КАК Принят,
	|	ЕСТЬNULL(ВТ03.Направление, ВТ00.Направление) КАК Направление
	|ПОМЕСТИТЬ ВТ05_Звонки
	|ИЗ
	|	ВТ00_ЦелевыеАгрегатора КАК ВТ00
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ03_ЦелевыеОУ КАК ВТ03
	|		ПО ВТ00.Сигнатура = ВТ03.Сигнатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТ05.ДатаЗвонка, ДЕНЬ) КАК ДатаЗвонка,
	|	ВТ05.Сигнатура КАК Сигнатура,
	|	ВТ05.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ05.Сотрудник КАК Сотрудник,
	|	ВТ05.КоличествоА КАК КоличествоА,
	|	ВТ05.КоличествоБ КАК КоличествоБ,
	|	ВТ05.КоличествоГ КАК КоличествоГ,
	|	ВТ05.Количество1 КАК Количество1,
	|	ВТ05.Количество2 КАК Количество2,
	|	ВТ05.Количество3 КАК Количество3,
	|	ВТ05.Количество4 КАК Количество4,
	|	ВТ05.Количество5 КАК Количество5,
	|	ВТ05.Количество6 КАК Количество6,
	|	ВТ05.Количество7 КАК Количество7,
	|	ВТ05.Количество8 КАК Количество8,
	|	ВТ05.Количество9 КАК Количество9,
	|	ВТ05.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ05.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ05.КоличествоОбщее КАК КоличествоОбщее,
	|	ВТ05.КоличествоЦелевыхБезПочты КАК КоличествоЦелевыхБезПочты,
	|	ВТ05.КоличествоЦелевых КАК КоличествоЦелевых,
	|	ВТ05.ОбщийЦелевой КАК ОбщийЦелевой,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1 > 0
	|			ТОГДА ВТ05.КоличествоЦелевых / (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), КОНЕЦПЕРИОДА(&ДатаОкончания, МЕСЯЦ), ДЕНЬ) + 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщийЦелевойПрогноз,
	|	ВТ05.ТочкаЦелевая.Регион КАК РегионСтрокой,
	|	ВТ05.Направление КАК НазваниеНаправления,
	|	ВЫБОР
	|		КОГДА ВТ05.Направление = ""ГАЗ""
	|			ТОГДА 10
	|		КОГДА ВТ05.Направление = ""УАЗ""
	|			ТОГДА 20
	|		КОГДА ВТ05.Направление = ""ВАЗ""
	|			ТОГДА 30
	|		КОГДА ВТ05.Направление = ""Ford""
	|			ТОГДА 40
	|		КОГДА ВТ05.Направление = ""Chery""
	|			ТОГДА 41
	|		КОГДА ВТ05.Направление = ""КАМАЗ""
	|			ТОГДА 42
	|		КОГДА ВТ05.Направление = ""Kangaroo Electro""
	|			ТОГДА 43
	|		КОГДА ВТ05.Направление = ""СПЕЦТЕХНИКА""
	|			ТОГДА 44
	|		КОГДА ВТ05.Направление = ""МТЗ""
	|			ТОГДА 22
	|		КОГДА ВТ05.Направление = ""МАЗ""
	|			ТОГДА 24
	|		КОГДА ВТ05.Направление = ""ПАЗ""
	|			ТОГДА 24
	|		КОГДА ВТ05.Направление = ""<Нет направления>""
	|			ТОГДА 50
	|	КОНЕЦ КАК ПорядокНаправлений,
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ГлобальнаяТаблица019_РеестрПоЦелевомуТрафику
	|ИЗ
	|	ВТ05_Звонки КАК ВТ05
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ВТ05.ТочкаЦелевая) = ТИП(Справочник.ТочкиЦелевые)
	|				ТОГДА ВТ05.ТочкаЦелевая В (&ДоступныеЦелевыеТочки)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВТ05.ТочкаЦелевая.Родитель В ИЕРАРХИИ(&ГруппаЦелевыхТочек)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ019.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ019.Сигнатура КАК Сигнатура,
	|	ВТ019.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ019.Сотрудник КАК Сотрудник,
	|	ВТ019.КоличествоА КАК КоличествоА,
	|	ВТ019.КоличествоБ КАК КоличествоБ,
	|	ВТ019.КоличествоГ КАК КоличествоГ,
	|	ВТ019.Количество1 КАК Количество1,
	|	ВТ019.Количество2 КАК Количество2,
	|	ВТ019.Количество3 КАК Количество3,
	|	ВТ019.Количество4 КАК Количество4,
	|	ВТ019.Количество5 КАК Количество5,
	|	ВТ019.Количество6 КАК Количество6,
	|	ВТ019.Количество7 КАК Количество7,
	|	ВТ019.Количество8 КАК Количество8,
	|	ВТ019.Количество9 КАК Количество9,
	|	ВТ019.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ019.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ019.КоличествоОбщее КАК КоличествоОбщее,
	|	ВТ019.КоличествоЦелевыхБезПочты КАК КоличествоЦелевыхБезПочты,
	|	ВТ019.КоличествоЦелевых КАК КоличествоЦелевых,
	|	ВТ019.ОбщийЦелевой КАК ОбщийЦелевой,
	|	ВТ019.ОбщийЦелевойПрогноз КАК ОбщийЦелевойПрогноз,
	|	ВТ019.РегионСтрокой КАК РегионСтрокой,
	|	ВТ019.НазваниеНаправления КАК НазваниеНаправления,
	|	ВЫБОР
	|		КОГДА ВТ019.НазваниеНаправления = ""ГАЗ""
	|			ТОГДА 10
	|		КОГДА ВТ019.НазваниеНаправления = ""УАЗ""
	|			ТОГДА 20
	|		КОГДА ВТ019.НазваниеНаправления = ""ВАЗ""
	|			ТОГДА 30
	|		КОГДА ВТ019.НазваниеНаправления = ""Ford""
	|			ТОГДА 40
	|		КОГДА ВТ019.НазваниеНаправления = ""Chery""
	|			ТОГДА 41
	|		КОГДА ВТ019.НазваниеНаправления = ""КАМАЗ""
	|			ТОГДА 42
	|		КОГДА ВТ019.НазваниеНаправления = ""СПЕЦТЕХНИКА""
	|			ТОГДА 43
	|		КОГДА ВТ019.НазваниеНаправления = ""<Нет направления>""
	|			ТОГДА 50
	|	КОНЕЦ КАК ПорядокНаправлений,
	|	ВТ019.ДатаНачала КАК ДатаНачала,
	|	ВТ019.ДатаОкончания КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА З.ЭтоВходящий
	|			ТОГДА З.Инициатор.Назначение + "" ("" + З.Инициатор.Код + "")""
	|		ИНАЧЕ ЕСТЬNULL(ИнЗ.Инициатор, ""<канал/сайт не определен>"")
	|	КОНЕЦ КАК КаналСайт
	|ИЗ
	|	ГлобальнаяТаблица019_РеестрПоЦелевомуТрафику КАК ВТ019
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Звонки КАК З
	|		ПО ВТ019.Сигнатура = З.Сигнатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК С
	|		ПО (З.Сигнатура = С.Сигнатура)
	|			И (ПОДСТРОКА(С.Основание, 1, 2) = ""iq"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнтернетЗаявки КАК ИнЗ
	|		ПО (ПОДСТРОКА(С.Основание, 4, 36) = ИнЗ.Сигнатура)";

КонецФункции

Функция СделкиВстречиВыставкиОУ(Начало, Окончание)
	//Возвращает таблицу значений по сделкам ОУ
	
	ТипСтрока	= Новый ОписаниеТипов("Строка");
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0));
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("Сделка", 									ТипСтрока);
	тз.Колонки.Добавить("СделкаНавСсылка",							ТипСтрока);
	тз.Колонки.Добавить("СделкаДата",								Новый ОписаниеТипов("Дата"));
	тз.Колонки.Добавить("НомерТелефона",							ТипСтрока);
	тз.Колонки.Добавить("ТочкаОформления",							ТипСтрока);
	тз.Колонки.Добавить("ИсточникКонтакта",							Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(32)));
	тз.Колонки.Добавить("КонтактноеЛицо",							ТипСтрока);
	тз.Колонки.Добавить("Состояние",								ТипСтрока);
	тз.Колонки.Добавить("Сотрудник",								ТипСтрока);
	тз.Колонки.Добавить("СотрудникТелефон",							Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4)));
	тз.Колонки.Добавить("ЭтоДубль",									Новый ОписаниеТипов("Булево"));
	тз.Колонки.Добавить("ОснованиеДубля",							ТипСтрока);
	тз.Колонки.Добавить("ОснованиеДубляНавСсылка",					ТипСтрока);
	тз.Колонки.Добавить("КоличествоВстречаВнутренняя",				ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыставка",						ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыездноеРекламноеМероприятие",	ТипЧисло);
	тз.Колонки.Добавить("КоличествоДиалогВЧате",					ТипЧисло);
	тз.Колонки.Добавить("Направление",								Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(18)));
	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Начало) = Тип("Дата");
	Доступно = Доступно И ТипЗнч(Окончание) = Тип("Дата");
	Если Не Доступно Тогда
		Возврат тз;
	КонецЕсли;

	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат тз;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	
				
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = 	
	
	"ВЫБРАТЬ
	|	СделкаРеализации.ТочкаОформления КАК ТочкаОформления,
	|	СделкаРеализации.НомерТелефона КАК НомерТелефона,
	|	МАКСИМУМ(СделкаРеализации.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ05_СделкиПредПериодаБезДублейПоТелефону
	|ИЗ
	|	Документ.СделкаРеализации КАК СделкаРеализации
	|ГДЕ
	|	СделкаРеализации.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&Начало, ДЕНЬ, -60) И &Начало
	|	И СделкаРеализации.ВидДеятельности В ИЕРАРХИИ(&ВидДеятельности)
	|	И ПОДСТРОКА(СделкаРеализации.НомерТелефона, 5, 1) <> """"""""
	|
	|СГРУППИРОВАТЬ ПО
	|	СделкаРеализации.ТочкаОформления,
	|	СделкаРеализации.НомерТелефона
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СделкаРеализации.Ссылка КАК Ссылка,
	|	СделкаРеализации.Дата КАК СделкаДата,
	|	СделкаРеализации.НомерТелефона КАК НомерТелефона,
	|	СделкаРеализации.ТочкаОформления КАК ТочкаОформления,
	|	СделкаРеализации.ИсточникКонтакта КАК ИсточникКонтакта,
	|	СделкаРеализации.Заголовок КАК КонтактноеЛицо,
	|	СделкаРеализации.Состояние КАК Состояние,
	|	СделкаРеализации.СотрудникОтветственный КАК Сотрудник,
	|	СделкаРеализации.СотрудникОтветственный.ТелефонКор КАК СотрудникТелефон,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВстречаВнутренняя)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВстречаВнутренняя,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.Выставка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВыставка,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВыездноеРекламноеМероприятие)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВыездноеРекламноеМероприятие,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ИсточникКонтакта.ДиалогВЧате)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДиалогВЧате,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеГАЗ) ТОГДА ""ГАЗ""
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеУАЗ) ТОГДА ""УАЗ""
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеFORD) ТОГДА ""Ford""
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеВАЗ) ТОГДА ""ВАЗ""
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""Chery""
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""КАМАЗ""
  	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""Kangaroo Electro""
    |		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""СПЕЦТЕХНИКА""
    |		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""МТЗ""   
	|		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""МАЗ""   
    |		КОГДА СделкаРеализации.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY) ТОГДА ""ПАЗ""   
	|		ИНАЧЕ ""<Нет направления>""
	|	КОНЕЦ КАК Направление
	|ПОМЕСТИТЬ ВТ10_СделкиТекПериода
	|ИЗ
	|	Документ.СделкаРеализации КАК СделкаРеализации
	|ГДЕ
	|	СделкаРеализации.Дата МЕЖДУ &Начало И &Окончание
	|	И СделкаРеализации.ВидДеятельности В ИЕРАРХИИ(&ВидДеятельности)
	|	И СделкаРеализации.ИсточникКонтакта В (ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВстречаВнутренняя), ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.Выставка), ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВыездноеРекламноеМероприятие), ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ИсточникКонтакта.ДиалогВЧате))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ10.Ссылка КАК Ссылка,
	|	ВТ10.СделкаДата КАК СделкаДата,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.Ссылка) КАК СделкаПредставление,
	|	ВТ10.НомерТелефона КАК НомерТелефона,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.ТочкаОформления) КАК ТочкаОформления,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.ИсточникКонтакта) КАК ИсточникКонтакта,
	|	ВТ10.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.Состояние) КАК Состояние,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.Сотрудник) КАК Сотрудник,
	|	ВТ10.СотрудникТелефон КАК СотрудникТелефон,
	|	ВТ10.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	ВТ10.КоличествоВыставка КАК КоличествоВыставка,
	|	ВТ10.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	ВТ10.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате,
	|	ВЫБОР
	|		КОГДА ВТ05.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоДубль,
	|	ЕСТЬNULL(ВТ05.Ссылка, ЗНАЧЕНИЕ(Документ.СделкаРеализации.ПустаяСсылка)) КАК СделкаОснованиеДубля,
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ВТ05.Ссылка, ЗНАЧЕНИЕ(Документ.СделкаРеализации.ПустаяСсылка))) КАК СделкаОснованиеДубляПредставление,
	|	ВТ10.Направление
	|ИЗ
	|	ВТ10_СделкиТекПериода КАК ВТ10
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ05_СделкиПредПериодаБезДублейПоТелефону КАК ВТ05
	|		ПО ВТ10.НомерТелефона = ВТ05.НомерТелефона
	|			И ВТ10.ТочкаОформления = ВТ05.ТочкаОформления";
	
	БИ_Запрос.УстановитьПараметр("Начало",			 Начало);	
	БИ_Запрос.УстановитьПараметр("Окончание", 		Окончание);	
	БИ_Запрос.УстановитьПараметр("ВидДеятельности", БИ.ПредопределенноеЗначение("Справочник.ВидыДеятельности.ПродажаНовые"));
	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = тз.Добавить();	
		Новая.Сделка 									= БИ_Выборка.СделкаПредставление;
		Новая.СделкаНавСсылка							= "e1c://server/MainAppL/asc_oper#"+БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
		Новая.СделкаДата								= БИ_Выборка.СделкаДата;
		Новая.НомерТелефона								= БИ_Выборка.НомерТелефона;
		Новая.ТочкаОформления 							= БИ_Выборка.ТочкаОформления;
		Новая.ИсточникКонтакта							= БИ.xmlСтрока(БИ_Выборка.ИсточникКонтакта);
		Новая.КонтактноеЛицо   							= БИ_Выборка.КонтактноеЛицо;
		Новая.Состояние 								= БИ_Выборка.Состояние;
		Новая.Сотрудник 								= БИ_Выборка.Сотрудник;
		Новая.СотрудникТелефон 							= БИ_Выборка.СотрудникТелефон;
		Новая.КоличествоВстречаВнутренняя 				= БИ_Выборка.КоличествоВстречаВнутренняя;
		Новая.КоличествоВыставка         				= БИ_Выборка.КоличествоВыставка;
		Новая.КоличествоВыездноеРекламноеМероприятие	= БИ_Выборка.КоличествоВыездноеРекламноеМероприятие;
		Новая.КоличествоДиалогВЧате 					= БИ_Выборка.КоличествоДиалогВЧате;
		Новая.ЭтоДубль									= БИ_Выборка.ЭтоДубль;
		Новая.ОснованиеДубля							= БИ_Выборка.СделкаОснованиеДубляПредставление;
		Новая.ОснованиеДубляНавСсылка					= "e1c://server/MainAppL/asc_oper#"+БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.СделкаОснованиеДубля);
		Новая.Направление								= БИ_Выборка.Направление;


	КонецЦикла;
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);
	
	Возврат тз;
	
КонецФункции

Функция СделкиВстречиВыставкиОУиЦелевыеТочкиАгр (СделкиОУ, Окончание);
	// К сделке ОУ привязывает Целевую точку Агр
	
	ТЗ = Новый ТаблицаЗначений();
	ТипСтрока	= Новый ОписаниеТипов("Строка");
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0));
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("Сделка", 									ТипСтрока);
	тз.Колонки.Добавить("СделкаНавСсылка",							ТипСтрока);
	тз.Колонки.Добавить("СделкаДата",								Новый ОписаниеТипов("Дата"));
	тз.Колонки.Добавить("НомерТелефона",							ТипСтрока);
	тз.Колонки.Добавить("ТочкаОформления",							ТипСтрока);
	тз.Колонки.Добавить("ИсточникКонтакта",							ТипСтрока);
	тз.Колонки.Добавить("КонтактноеЛицо",							ТипСтрока);
	тз.Колонки.Добавить("Состояние",								ТипСтрока);
	тз.Колонки.Добавить("Сотрудник",								ТипСтрока);
	тз.Колонки.Добавить("СотрудникТелефон",							Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4)));
	тз.Колонки.Добавить("ЭтоДубль",									Новый ОписаниеТипов("Булево"));
	тз.Колонки.Добавить("ОснованиеДубля",							ТипСтрока);
	тз.Колонки.Добавить("ОснованиеДубляНавСсылка",					ТипСтрока);
	тз.Колонки.Добавить("ТочкаЦелевая",								Новый ОписаниеТипов("СправочникСсылка.ТочкиЦелевые"));
	тз.Колонки.Добавить("Направление",								Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(18)));
	тз.Колонки.Добавить("КоличествоВстречаВнутренняя",				ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыставка",						ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыездноеРекламноеМероприятие",	ТипЧисло);
	тз.Колонки.Добавить("КоличествоДиалогВЧате",					ТипЧисло);

	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(СделкиОУ) = Тип("ТаблицаЗначений");
	Если Не Доступно Тогда
		Возврат ТЗ;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Сделка КАК Сделка,
	|	Т.СделкаДата КАК СделкаДата,
	|	Т.СделкаНавСсылка КАК СделкаНавСсылка,
	|	Т.НомерТелефона КАК НомерТелефона,
	|	Т.ТочкаОформления КАК ТочкаОформления,
	|	Т.ИсточникКонтакта КАК ИсточникКонтакта,
	|	Т.КонтактноеЛицо КАК КонтактноеЛицо,
	|	Т.Состояние КАК Состояние,
	|	Т.Сотрудник КАК Сотрудник,
	|	Т.СотрудникТелефон КАК СотрудникТелефон,
	|	Т.ЭтоДубль КАК ЭтоДубль,
	|	Т.ОснованиеДубля КАК ОснованиеДубля,
	|	Т.ОснованиеДубляНавСсылка КАК ОснованиеДубляНавСсылка,
	|	Т.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	Т.КоличествоВыставка КАК КоличествоВыставка,
	|	Т.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	Т.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате,
	|	Т.Направление КАК Направление
	|ПОМЕСТИТЬ ВТ05_СделкиОУ
	|ИЗ
	|	&Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ05.Сделка КАК Сделка,
	|	ВТ05.СделкаНавСсылка КАК СделкаНавСсылка,
	|	ВТ05.НомерТелефона КАК НомерТелефона,
	|	ВТ05.ТочкаОформления КАК ТочкаОформления,
	|	ВТ05.ИсточникКонтакта КАК ИсточникКонтакта,
	|	ВТ05.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ВТ05.Состояние КАК Состояние,
	|	ВТ05.Сотрудник КАК Сотрудник,
	|	ВТ05.СотрудникТелефон КАК СотрудникТелефон,
	|	ВТ05.ЭтоДубль КАК ЭтоДубль,
	|	ВТ05.ОснованиеДубля КАК ОснованиеДубля,
	|	ВТ05.ОснованиеДубляНавСсылка КАК ОснованиеДубляНавСсылка,
	|	ВТ05.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	ВТ05.КоличествоВыставка КАК КоличествоВыставка,
	|	ВТ05.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	ВТ05.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате,
	|	ЕСТЬNULL(Аг.ТочкаЦелевая, ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)) КАК ТочкаЦелевая,
	|	ВТ05.Направление КАК Направление
	|ИЗ
	|	ВТ05_СделкиОУ КАК ВТ05
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АгентыЦелевыеИст КАК Аг
	|		ПО ВТ05.СотрудникТелефон = Аг.Телефон.Код
	|			И (ВТ05.СделкаДата МЕЖДУ Аг.Период И ВЫБОР
	|				КОГДА Аг.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА &Окончание
	|				ИНАЧЕ Аг.Окончание
	|			КОНЕЦ)";
	
	Запрос.УстановитьПараметр("Т", СделкиОУ);
	Запрос.УстановитьПараметр("Окончание", Окончание);
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	Возврат ТЗ;
КонецФункции

Функция СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ДатаПредНачала, ДатаПредОкончания, ТаблДок) Экспорт
	
	ЗначениеПоУмолчанию = "";
	
	ЭтотОбъект.РеестрЦелевыхТек.Очистить();
	
	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	
			
	//Реестр целевых текущего периода из ОУ загрузить
	//-------------------------------------------------
	КодТочкиОформленияУфа = "000000008";
	РеестрЦелевых_Загрузить(БИ, "РеестрЦелевыхТек", ДатаНачала, ДатаОкончания, КодТочкиОформленияУфа, "");
			
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);

КонецФункции

Функция РеестрЦелевых_Загрузить(БИ, ИмяТаблЧасти, ДатаНачала, ДатаОкончания, КодТочкиОформленияКорректировки, ПустаяСтрока) Экспорт
	
	ЗначениеПоУмолчанию = Ложь;
	
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = ОбработкаОтчетов.ТексЗапросаРеестрЦелевыхОУ();	
	БИ_Запрос.УстановитьПараметр("ДатаНачала",				ДатаНачала);
	БИ_Запрос.УстановитьПараметр("ДатаОкончания", 			ДатаОкончания);	
	БИ_Запрос.УстановитьПараметр("КодТочкиОформленияУфа", 	КодТочкиОформленияКорректировки);	
	БИ_Запрос.УстановитьПараметр("ПустаяСтрока",		 	ПустаяСтрока);
	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = ЭтотОбъект[ИмяТаблЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(Новая, БИ_Выборка, "ДатаЗвонка, Сигнатура, НомерВнутреннегоТелефона, Состояние, Статус, ОснованиеДля, Количество1, Количество2, Количество3, Количество4, Количество5, Количество6, Количество7, Количество8, КоличествоИтогоПоСтатусам, КоличествоОбщееБезПочты, КоличествоЦелевыхБезПочты, Входящий, Направление");

		Новая.СотрудникОУГУИД				= БИ.XMLСтрока(БИ_Выборка.СотрудникСсылка);	
		Новая.СотрудникНаименование			= БИ_Выборка.СотрудникПредставление;	
		Новая.ТочкаОформленияОУГУИД			= БИ.XMLСтрока(БИ_Выборка.ТочкаОформленияСсылка);
		Новая.ТочкаОформленияНаименование	= БИ_Выборка.ТочкаОформленияПредставление;
		Новая.НавСсылка                     = БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
	КонецЦикла;
	
	Возврат  Истина;
КонецФункции

Функция СформируйТаблицуПланаПоТрафику(Месяц)
	
	ЗначениеПоУмолчанию = Ложь;
	
	ЭтотОбъект.ПланПоЦелевомТрафику.Очистить();
	
	Об = Обработки.ТаблицаXML_ПланПоЦелевомуТрафикуСОктября2020.Создать();
	Об.УстановитьНастройки();
	Об.Десериализовать();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Месяц КАК Месяц,
	|	Т.ТочкаЦелевая КАК ТочкаЦелевая,
	|	Т.Направление КАК Направление,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ00
	|ИЗ
	|	&Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ00.Направление КАК Направление,
	|	ВТ00.Количество КАК Количество
	|ИЗ
	|	ВТ00 КАК ВТ00
	|ГДЕ
	|	ВТ00.Месяц = &Месяц";
	
	Запрос.УстановитьПараметр("Т", 		Об.ТЗ);
	Запрос.УстановитьПараметр("Месяц", 	Месяц);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Новая = ЭтотОбъект.ПланПоЦелевомТрафику.Добавить();
		Новая.Период 		= Месяц;
		Новая.ТочкаЦелевая 	= Выборка.ТочкаЦелевая;
		Новая.Направление	= Выборка.Направление;
		Новая.Количество 	= Выборка.Количество;
	КонецЦикла;
	
КонецФункции

Функция ЗагрузитьНастройкиПриОтправкеНаПочту() Экспорт
	
	ЭтотОбъект.ВыбранныйВариантОтчета = "Сводный";
		
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1359"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5334"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5240"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5241"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5242"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5319"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1391"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1392"));

	#Область Доступные_целевые_точки
	НазваниеГруппыЦелевыхТочек = "Луидор-автосалоны"; 
	ЭтотОбъект.ГруппаЦелевыхТочек = Справочники.ТочкиЦелевые.НайтиПоНаименованию(НазваниеГруппыЦелевыхТочек);
	Если ЭтотОбъект.ГруппаЦелевыхТочек = ПредопределенноеЗначение("Справочник.ТочкиЦелевые.ПустаяСсылка") Тогда
		Возврат "ошибка";
	КонецЕсли;
	
	МассивДоступныхЦелевыхТочек = ЗначенияСервера.ДоступныеЦелевыеТочки2();	
	// Список доступных целевых точек - из группы Автосалоны
	//------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТочкиЦелевые.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТочкиЦелевые КАК ТочкиЦелевые
	|ГДЕ
	|	ТочкиЦелевые.Ссылка В ИЕРАРХИИ(&ГруппаЦелевыхТочек)";
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек", ЭтотОбъект.ГруппаЦелевыхТочек);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Нет доступных пользователю целевых точек";
		Сообщ.Сообщить();
	Иначе
		Доступные = Новый СписокЗначений();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если МассивДоступныхЦелевыхТочек.Найти(Выборка.Ссылка) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Доступные.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	ЭтотОбъект.ДоступныеЦелевыеТочки.ЗагрузитьЗначения(МассивДоступныхЦелевыхТочек);
	
	Если Доступные.Количество()=0 Тогда
		Возврат "ошибка";
	КонецЕсли;
	#КонецОбласти
				
	КонецФункции