Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	Если ЭтотОбъект.ВыбранныйВариантОтчета = "Сводный" Тогда
		ПриКомпоновкеРезультатаСводный(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);		
	ИначеЕсли ЭтотОбъект.ВыбранныйВариантОтчета = "Детальный" Тогда
		ЭтотОбъект.СхемаКомпоновкиДанных = ПолучитьМакет("ДетальнаяСКД");
		ПриКомпоновкеРезультатаДетальный(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);	 
	КонецЕсли;
КонецПроцедуры

Процедура ПриКомпоновкеРезультатаСводный(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Выполни запрос в базе ОУ по выставкам и встречам
	//-------------------------------------------------
	ДатаНачала					=	Период.ДатаНачала; 
	ДатаОкончания				=	Период.ДатаОкончания;
	
	// Заполнит ТЧ Звонки, Встречи, Задачи по эл. почте
	//-----------------------------------------------------
	СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ДатаНачала, ДатаОкончания, "");
	
	ЗначениеПоУмолчанию = Ложь;

	// Заполни ТЧ План по целевому трафику
	//-------------------------------------
	Месяц = НачалоМесяца(ДатаНачала);
	СформируйТаблицуПланаПоТрафику(Месяц);
	
	СделкиВстречиВыставкиОУ =  СделкиВстречиВыставкиОУ(ДатаНачала, ДатаОкончания);
	СделкиВстречиВыставкиОУиЦелевыеТочкиАгр = СделкиВстречиВыставкиОУиЦелевыеТочкиАгр(СделкиВстречиВыставкиОУ, ДатаОкончания);
	
	Запрос = Новый Запрос();
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК ДатаЗвонка,
	|	Звонки.ЭтоВходящий КАК Входящий,
	|	Звонки.Принят КАК Принят,
	|	ЗвонкиДоп.ЦелеваяТочка КАК ЦелеваяТочка,
	|	ЗвонкиДоп.СотрудникОУ КАК Сотрудник,
	|	0 КАК КоличествоА,
	|	0 КАК КоличествоБ,
	|	0 КАК Количество1,
	|	0 КАК Количество2,
	|	0 КАК Количество3,
	|	0 КАК Количество4,
	|	0 КАК Количество5,
	|	0 КАК Количество6,
	|	0 КАК Количество7,
	|	0 КАК Количество8,
	|	0 КАК Количество9,
	|	0 КАК КоличествоИтогоПоСтатусам,
	|	0 КАК КоличествоОбщееБезПочты,
	|	0 КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой
	|ПОМЕСТИТЬ ВТ00_ЦелевыеАгрегатора
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиДоп КАК ЗвонкиДоп
	|		ПО Звонки.Сигнатура = ЗвонкиДоп.Сигнатура
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|			КОГДА Звонки.ЭтоВходящий
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Звонки.Инициатор В (&ТелефоныКонтактЦентра)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаЗвонка КАК ДатаЗвонка,
	|	Т.Сигнатура КАК Сигнатура,
	|	Т.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	Т.Входящий КАК Входящий,
	|	Т.Количество1 КАК Количество1,
	|	Т.Количество2 КАК Количество2,
	|	Т.Количество3 КАК Количество3,
	|	Т.Количество4 КАК Количество4,
	|	Т.Количество5 КАК Количество5,
	|	Т.Количество6 КАК Количество6,
	|	Т.Количество7 КАК Количество7,
	|	Т.Количество8 КАК Количество8,
	|	0 КАК Количество9,
	|	Т.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	Т.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	Т.КоличествоОбщееБезПочты КАК КоличествоОбщее,
	|	0 КАК КоличествоЦелевыхБезПочты,
	|	0 КАК КоличествоЦелевых,
	|	0 КАК ОбщийЦелевой,
	|	1 КАК Принят
	|ПОМЕСТИТЬ ВТ01_ЦелевыеОУ
	|ИЗ
	|	&РеестрЦелевыхТек КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ01.Сигнатура КАК Сигнатура,
	|	ВТ01.СотрудникОУГУИД КАК СотрудникОУГУИД,
	|	ВТ01.Входящий КАК Входящий,
	|	ВТ01.Количество1 КАК Количество1,
	|	ВТ01.Количество2 КАК Количество2,
	|	ВТ01.Количество3 КАК Количество3,
	|	ВТ01.Количество4 КАК Количество4,
	|	ВТ01.Количество5 КАК Количество5,
	|	ВТ01.Количество6 КАК Количество6,
	|	ВТ01.Количество7 КАК Количество7,
	|	ВТ01.Количество8 КАК Количество8,
	|	ВТ01.Количество9 КАК Количество9,
	|	ВТ01.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ01.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ01.КоличествоОбщееБезПочты КАК КоличествоОбщее,
	|	ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК КоличествоЦелевыхБезПочты,
	|	ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК КоличествоЦелевых,
	|	ВТ01.Количество2 + ВТ01.Количество3 + ВТ01.Количество8 КАК ОбщийЦелевой,
	|	ВТ01.Принят КАК Принят,
	|	ЕСТЬNULL(СотрОУ.Ссылка, ЗНАЧЕНИЕ(Справочник.ОУ_Сотрудники.ПустаяСсылка)) КАК Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка) КАК ТочкаЦелевая
	|ПОМЕСТИТЬ ВТ03_ЦелевыеОУ
	|ИЗ
	|	ВТ01_ЦелевыеОУ КАК ВТ01
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОУ_Сотрудники КАК СотрОУ
	|		ПО ВТ01.СотрудникОУГУИД = СотрОУ.ГУИД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ00.ДатаЗвонка, ВТ03.ДатаЗвонка) КАК ДатаЗвонка,
	|	ЕСТЬNULL(ВТ00.Сигнатура, ВТ03.Сигнатура) КАК Сигнатура,
	|	ЕСТЬNULL(ВТ00.ЦелеваяТочка, ВТ03.ТочкаЦелевая) КАК ТочкаЦелевая,
	|	ЕСТЬNULL(ВТ00.Сотрудник, ВТ03.Сотрудник) КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА НЕ ВТ00.Сигнатура ЕСТЬ NULL
	|				И ЕСТЬNULL(ВТ00.Принят, ЛОЖЬ) = ИСТИНА
	|				И ВТ03.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоА,
	|	ВЫБОР
	|		КОГДА НЕ ВТ03.Сигнатура ЕСТЬ NULL
	|				И ВТ00.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоБ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ00.Сигнатура ЕСТЬ NULL
	|				И ЕСТЬNULL(ВТ00.Принят, ЛОЖЬ) = ЛОЖЬ
	|				И ВТ03.Сигнатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоГ,
	|	ЕСТЬNULL(ВТ03.Количество1, 0) КАК Количество1,
	|	ЕСТЬNULL(ВТ03.Количество2, 0) КАК Количество2,
	|	ЕСТЬNULL(ВТ03.Количество3, 0) КАК Количество3,
	|	ЕСТЬNULL(ВТ03.Количество4, 0) КАК Количество4,
	|	ЕСТЬNULL(ВТ03.Количество5, 0) КАК Количество5,
	|	ЕСТЬNULL(ВТ03.Количество6, 0) КАК Количество6,
	|	ЕСТЬNULL(ВТ03.Количество7, 0) КАК Количество7,
	|	ЕСТЬNULL(ВТ03.Количество8, 0) КАК Количество8,
	|	ЕСТЬNULL(ВТ03.Количество9, 0) КАК Количество9,
	|	ЕСТЬNULL(ВТ03.КоличествоИтогоПоСтатусам, 0) КАК КоличествоИтогоПоСтатусам,
	|	ЕСТЬNULL(ВТ03.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщееБезПочты,
	|	ЕСТЬNULL(ВТ03.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщее,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевыхБезПочты,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевых,
	|	ЕСТЬNULL(ВТ03.КоличествоЦелевыхБезПочты, 0) КАК ОбщийЦелевой,
	|	ЕСТЬNULL(ВТ00.Принят, ВТ03.Принят) КАК Принят
	|ПОМЕСТИТЬ ВТ05_Звонки
	|ИЗ
	|	ВТ00_ЦелевыеАгрегатора КАК ВТ00
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ03_ЦелевыеОУ КАК ВТ03
	|		ПО ВТ00.Сигнатура = ВТ03.Сигнатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТ05.ДатаЗвонка, ДЕНЬ) КАК ДатаЗвонка,
	|	ВТ05.Сигнатура КАК Сигнатура,
	|	ВТ05.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ05.Сотрудник КАК Сотрудник,
	|	ВТ05.КоличествоА КАК КоличествоА,
	|	ВТ05.КоличествоБ КАК КоличествоБ,
	|	ВТ05.КоличествоГ КАК КоличествоГ,
	|	ВТ05.Количество1 КАК Количество1,
	|	ВТ05.Количество2 КАК Количество2,
	|	ВТ05.Количество3 КАК Количество3,
	|	ВТ05.Количество4 КАК Количество4,
	|	ВТ05.Количество5 КАК Количество5,
	|	ВТ05.Количество6 КАК Количество6,
	|	ВТ05.Количество7 КАК Количество7,
	|	ВТ05.Количество8 КАК Количество8,
	|	ВТ05.Количество9 КАК Количество9,
	|	ВТ05.КоличествоИтогоПоСтатусам КАК КоличествоИтогоПоСтатусам,
	|	ВТ05.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ05.КоличествоОбщее КАК КоличествоОбщее,
	|	ВТ05.КоличествоЦелевыхБезПочты КАК КоличествоЦелевыхБезПочты,
	|	ВТ05.КоличествоЦелевых КАК КоличествоЦелевых,
	|	ВТ05.ОбщийЦелевой КАК ОбщийЦелевой,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1 > 0
	|			ТОГДА ВТ05.КоличествоЦелевых / (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), КОНЕЦПЕРИОДА(&ДатаОкончания, МЕСЯЦ), ДЕНЬ) + 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщийЦелевойПрогноз,
	|	ВТ05.ТочкаЦелевая.Регион КАК РегионСтрокой,
	|	ВТ05.ТочкаЦелевая.НаправлениеДеятельности КАК НазваниеНаправления,
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ГлобальнаяТаблица019_РеестрПоЦелевомуТрафику
	|ИЗ
	|	ВТ05_Звонки КАК ВТ05
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ВТ05.ТочкаЦелевая) = ТИП(Справочник.ТочкиЦелевые)
	|				ТОГДА ВТ05.ТочкаЦелевая В (&ДоступныеЦелевыеТочки)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВТ05.ТочкаЦелевая.Родитель В ИЕРАРХИИ(&ГруппаЦелевыхТочек)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ019.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ019.РегионСтрокой КАК РегионСтрокой,
	|	ВТ019.НазваниеНаправления КАК НазваниеНаправления,
	|	СУММА(ВТ019.КоличествоА) КАК КоличествоА,
	|	СУММА(ВТ019.КоличествоБ) КАК КоличествоБ,
	|	0 КАК КоличествоВ,
	|	СУММА(ВТ019.КоличествоГ) КАК КоличествоГ,
	|	СУММА(ВТ019.Количество1) КАК Количество1,
	|	СУММА(ВТ019.Количество2) КАК Количество2,
	|	СУММА(ВТ019.Количество3) КАК Количество3,
	|	СУММА(ВТ019.Количество4) КАК Количество4,
	|	СУММА(ВТ019.Количество5) КАК Количество5,
	|	СУММА(ВТ019.Количество6) КАК Количество6,
	|	СУММА(ВТ019.Количество7) КАК Количество7,
	|	СУММА(ВТ019.Количество8) КАК Количество8,
	|	СУММА(ВТ019.Количество9) КАК Количество9,
	|	СУММА(ВТ019.КоличествоИтогоПоСтатусам) КАК КоличествоИтогоПоСтатусам,
	|	СУММА(ВТ019.КоличествоОбщееБезПочты) КАК КоличествоОбщееБезПочты,
	|	СУММА(ВТ019.КоличествоОбщее) КАК КоличествоОбщее,
	|	СУММА(ВТ019.КоличествоЦелевыхБезПочты) КАК КоличествоЦелевыхБезПочты,
	|	СУММА(ВТ019.КоличествоЦелевых) КАК КоличествоЦелевых,
	|	СУММА(ВТ019.ОбщийЦелевой) КАК ОбщийЦелевой,
	|	СУММА(ВТ019.ОбщийЦелевойПрогноз) КАК ОбщийЦелевойПрогноз
	|ПОМЕСТИТЬ ВТ020_Свод
	|ИЗ
	|	ГлобальнаяТаблица019_РеестрПоЦелевомуТрафику КАК ВТ019
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ019.ТочкаЦелевая,
	|	ВТ019.РегионСтрокой,
	|	ВТ019.НазваниеНаправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ТочкаЦелевая КАК ТочкаЦелевая,
	|	Т.Количество КАК ПланТрафика
	|ПОМЕСТИТЬ ВТ018_ПланПоТрафикуВозможныДубли
	|ИЗ
	|	&ПланПоТрафику КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ018.ТочкаЦелевая КАК ТочкаЦелевая,
	|	СУММА(ВТ018.ПланТрафика) КАК ПланТрафика
	|ПОМЕСТИТЬ ВТ018001_ПланПоТрафику
	|ИЗ
	|	ВТ018_ПланПоТрафикуВозможныДубли КАК ВТ018
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ018.ТочкаЦелевая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ018.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ018.ПланТрафика КАК ПланТрафика,
	|	ВЫРАЗИТЬ(ВТ018.ТочкаЦелевая КАК Справочник.ТочкиЦелевые).Регион КАК РегионСтрокой,
	|	ВЫРАЗИТЬ(ВТ018.ТочкаЦелевая КАК Справочник.ТочкиЦелевые).НаправлениеДеятельности КАК НазваниеНаправления
	|ПОМЕСТИТЬ ВТ01801_ПланПоТрафику
	|ИЗ
	|	ВТ018001_ПланПоТрафику КАК ВТ018
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ020.ТочкаЦелевая, ВТ018.ТочкаЦелевая) КАК ТочкаЦелевая,
	|	ЕСТЬNULL(ВТ020.РегионСтрокой, ВТ018.РегионСтрокой) КАК РегионСтрокой,
	|	ЕСТЬNULL(ВТ020.НазваниеНаправления, ВТ018.НазваниеНаправления) КАК НазваниеНаправления,
	|	ЕСТЬNULL(ВТ020.КоличествоА, 0) КАК КоличествоА,
	|	ЕСТЬNULL(ВТ020.КоличествоБ, 0) КАК КоличествоБ,
	|	ЕСТЬNULL(ВТ020.КоличествоВ, 0) КАК КоличествоВ,
	|	ЕСТЬNULL(ВТ020.КоличествоГ, 0) КАК КоличествоГ,
	|	ЕСТЬNULL(ВТ020.Количество1, 0) КАК Количество1,
	|	ЕСТЬNULL(ВТ020.Количество2, 0) КАК Количество2,
	|	ЕСТЬNULL(ВТ020.Количество3, 0) КАК Количество3,
	|	ЕСТЬNULL(ВТ020.Количество4, 0) КАК Количество4,
	|	ЕСТЬNULL(ВТ020.Количество5, 0) КАК Количество5,
	|	ЕСТЬNULL(ВТ020.Количество6, 0) КАК Количество6,
	|	ЕСТЬNULL(ВТ020.Количество7, 0) КАК Количество7,
	|	ЕСТЬNULL(ВТ020.Количество8, 0) КАК Количество8,
	|	ЕСТЬNULL(ВТ020.Количество9, 0) КАК Количество9,
	|	ЕСТЬNULL(ВТ020.КоличествоИтогоПоСтатусам, 0) КАК КоличествоИтогоПоСтатусам,
	|	ЕСТЬNULL(ВТ020.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщееБезПочты,
	|	ЕСТЬNULL(ВТ020.КоличествоОбщее, 0) КАК КоличествоОбщее,
	|	ЕСТЬNULL(ВТ020.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевыхБезПочты,
	|	ЕСТЬNULL(ВТ020.КоличествоЦелевых, 0) КАК КоличествоЦелевых,
	|	ЕСТЬNULL(ВТ020.ОбщийЦелевой, 0) КАК ОбщийЦелевой,
	|	ЕСТЬNULL(ВТ020.ОбщийЦелевойПрогноз, 0) КАК ОбщийЦелевойПрогноз,
	|	ЕСТЬNULL(ВТ018.ПланТрафика, 0) КАК ПланТрафика
	|ПОМЕСТИТЬ ВТ021
	|ИЗ
	|	ВТ020_Свод КАК ВТ020
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ01801_ПланПоТрафику КАК ВТ018
	|		ПО ВТ020.ТочкаЦелевая = ВТ018.ТочкаЦелевая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИсточникКонтакта КАК ИсточникКонтакта,
	|	Т.ЭтоДубль КАК ЭтоДубль,
	|	ВЫРАЗИТЬ(Т.ТочкаЦелевая КАК Справочник.ТочкиЦелевые) КАК ТочкаЦелевая,
	|	Т.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	Т.КоличествоВыставка КАК КоличествоВыставка,
	|	Т.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	Т.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате
	|ПОМЕСТИТЬ ВТ025_ВстречиВыставкиДетальные
	|ИЗ
	|	&ВстречиВыставки КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ025.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ025.ТочкаЦелевая.НаправлениеДеятельности КАК НазваниеНаправления,
	|	ВТ025.ТочкаЦелевая.Регион КАК РегионСтрокой,
	|	СУММА(ВТ025.КоличествоВстречаВнутренняя) КАК КоличествоВстречаВнутренняя,
	|	СУММА(ВТ025.КоличествоВыставка) КАК КоличествоВыставка,
	|	СУММА(ВТ025.КоличествоВыездноеРекламноеМероприятие) КАК КоличествоВыездноеРекламноеМероприятие,
	|	СУММА(ВТ025.КоличествоДиалогВЧате) КАК КоличествоДиалогВЧате
	|ПОМЕСТИТЬ ВТ030_ВстречиВыставки
	|ИЗ
	|	ВТ025_ВстречиВыставкиДетальные КАК ВТ025
	|ГДЕ
	|	ВТ025.ЭтоДубль = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ025.ТочкаЦелевая,
	|	ВТ025.ТочкаЦелевая.Регион,
	|	ВТ025.ТочкаЦелевая.НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ021.ТочкаЦелевая, ВТ030.ТочкаЦелевая) КАК ТочкаЦелевая,
	|	ЕСТЬNULL(ВТ021.РегионСтрокой, ВТ030.РегионСтрокой) КАК РегионСтрокой,
	|	ЕСТЬNULL(ВТ021.НазваниеНаправления, ВТ030.НазваниеНаправления) КАК НазваниеНаправления,
	|	ЕСТЬNULL(ВТ021.КоличествоА, 0) КАК КоличествоА,
	|	ЕСТЬNULL(ВТ021.КоличествоБ, 0) КАК КоличествоБ,
	|	ЕСТЬNULL(ВТ021.КоличествоВ, 0) КАК КоличествоВ,
	|	ЕСТЬNULL(ВТ021.КоличествоГ, 0) КАК КоличествоГ,
	|	ЕСТЬNULL(ВТ021.Количество1, 0) КАК Количество1,
	|	ЕСТЬNULL(ВТ021.Количество2, 0) КАК Количество2,
	|	ЕСТЬNULL(ВТ021.Количество3, 0) КАК Количество3,
	|	ЕСТЬNULL(ВТ021.Количество4, 0) КАК Количество4,
	|	ЕСТЬNULL(ВТ021.Количество5, 0) КАК Количество5,
	|	ЕСТЬNULL(ВТ021.Количество6, 0) КАК Количество6,
	|	ЕСТЬNULL(ВТ021.Количество7, 0) КАК Количество7,
	|	ЕСТЬNULL(ВТ021.Количество8, 0) КАК Количество8,
	|	ЕСТЬNULL(ВТ021.Количество9, 0) КАК Количество9,
	|	ЕСТЬNULL(ВТ021.КоличествоИтогоПоСтатусам, 0) КАК КоличествоИтогоПоСтатусам,
	|	ЕСТЬNULL(ВТ021.КоличествоОбщееБезПочты, 0) КАК КоличествоОбщееБезПочты,
	|	ЕСТЬNULL(ВТ021.КоличествоОбщее, 0) КАК КоличествоОбщее,
	|	ЕСТЬNULL(ВТ021.КоличествоЦелевыхБезПочты, 0) КАК КоличествоЦелевыхБезПочты,
	|	ЕСТЬNULL(ВТ021.КоличествоЦелевых, 0) КАК КоличествоЦелевых,
	|	ЕСТЬNULL(ВТ021.ОбщийЦелевой, 0) + ЕСТЬNULL(ВТ030.КоличествоВстречаВнутренняя, 0) + ЕСТЬNULL(ВТ030.КоличествоВыставка, 0) + ЕСТЬNULL(ВТ030.КоличествоВыездноеРекламноеМероприятие, 0) + ЕСТЬNULL(ВТ030.КоличествоДиалогВЧате, 0) КАК ОбщийЦелевой,
	|	(ЕСТЬNULL(ВТ021.ОбщийЦелевой, 0) + ЕСТЬNULL(ВТ030.КоличествоВстречаВнутренняя, 0) + ЕСТЬNULL(ВТ030.КоличествоВыставка, 0) + ЕСТЬNULL(ВТ030.КоличествоВыездноеРекламноеМероприятие, 0) + ЕСТЬNULL(ВТ030.КоличествоДиалогВЧате, 0)) / (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), КОНЕЦПЕРИОДА(&ДатаОкончания, МЕСЯЦ), ДЕНЬ) + 1) КАК ОбщийЦелевойПрогноз,
	|	ЕСТЬNULL(ВТ021.ПланТрафика, 0) КАК ПланТрафика,
	|	ЕСТЬNULL(ВТ030.КоличествоВстречаВнутренняя, 0) КАК КоличествоВстречаВнутренняя,
	|	ЕСТЬNULL(ВТ030.КоличествоВыставка, 0) КАК КоличествоВыставка,
	|	ЕСТЬNULL(ВТ030.КоличествоВыездноеРекламноеМероприятие, 0) КАК КоличествоВыездноеРекламноеМероприятие,
	|	ЕСТЬNULL(ВТ030.КоличествоДиалогВЧате, 0) КАК КоличествоДиалогВЧате
	|ИЗ
	|	ВТ021 КАК ВТ021
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ030_ВстречиВыставки КАК ВТ030
	|		ПО ВТ021.ТочкаЦелевая = ВТ030.ТочкаЦелевая
	|			И ВТ021.РегионСтрокой = ВТ030.РегионСтрокой
	|			И ВТ021.НазваниеНаправления = ВТ030.НазваниеНаправления";
	
 	Запрос.УстановитьПараметр("ДатаНачала", 				ДатаНачала);
 	Запрос.УстановитьПараметр("ДатаОкончания", 				ДатаОкончания);
	Запрос.УстановитьПараметр("РеестрЦелевыхТек", 			ЭтотОбъект.РеестрЦелевыхТек);
	Запрос.УстановитьПараметр("ДоступныеЦелевыеТочки",		ДоступныеЦелевыеТочки);
	Запрос.УстановитьПараметр("ТелефоныКонтактЦентра",		ТелефоныКонтактЦентра);
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек",			ГруппаЦелевыхТочек);
	Запрос.УстановитьПараметр("ПланПоТрафику",				ЭтотОбъект.ПланПоЦелевомТрафику);
	Запрос.УстановитьПараметр("ВстречиВыставки",			СделкиВстречиВыставкиОУиЦелевыеТочкиАгр);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	ТЗ = РезультатЗапроса.Выгрузить();
		
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	СКД = ПолучитьМакет("ОсновнаяСКД");	
	Настройки = СКД.НастройкиПоУмолчанию;
	
	Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьЗаголовок").Использование = Истина;
    Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьЗаголовок").Значение      = ТипВыводаТекстаКомпоновкиДанных.Выводить; 
   	Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Использование         = Истина;
  	Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение              = Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy")+" - "+Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(3);

КонецПроцедуры

Процедура ПриКомпоновкеРезультатаДетальный(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
			
	Начало					=	Период.ДатаНачала; 
	Окончание				=	Период.ДатаОкончания;
	
	СделкиВстречиВыставкиОУ =  СделкиВстречиВыставкиОУ(Начало, Окончание);
	ТЗ =  СделкиВстречиВыставкиОУиЦелевыеТочкиАгр( СделкиВстречиВыставкиОУ, Окончание);
	
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	СКД = ЭтотОбъект.СхемаКомпоновкиДанных;
	Настройки = СКД.НастройкиПоУмолчанию;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры

Функция СделкиВстречиВыставкиОУ(Начало, Окончание)
	//Возвращает таблицу значений по сделкам ОУ
	
	ТипСтрока	= Новый ОписаниеТипов("Строка");
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0));
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("Сделка", 									ТипСтрока);
	тз.Колонки.Добавить("СделкаНавСсылка",							ТипСтрока);
	тз.Колонки.Добавить("СделкаДата",								Новый ОписаниеТипов("Дата"));
	тз.Колонки.Добавить("НомерТелефона",							ТипСтрока);
	тз.Колонки.Добавить("ТочкаОформления",							ТипСтрока);
	тз.Колонки.Добавить("ИсточникКонтакта",							Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(32)));
	тз.Колонки.Добавить("КонтактноеЛицо",							ТипСтрока);
	тз.Колонки.Добавить("Состояние",								ТипСтрока);
	тз.Колонки.Добавить("Сотрудник",								ТипСтрока);
	тз.Колонки.Добавить("СотрудникТелефон",							Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4)));
	тз.Колонки.Добавить("ЭтоДубль",									Новый ОписаниеТипов("Булево"));
	тз.Колонки.Добавить("ОснованиеДубля",							ТипСтрока);
	тз.Колонки.Добавить("ОснованиеДубляНавСсылка",					ТипСтрока);
	тз.Колонки.Добавить("КоличествоВстречаВнутренняя",				ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыставка",						ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыездноеРекламноеМероприятие",	ТипЧисло);
	тз.Колонки.Добавить("КоличествоДиалогВЧате",					ТипЧисло);

	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Начало) = Тип("Дата");
	Доступно = Доступно И ТипЗнч(Окончание) = Тип("Дата");
	Если Не Доступно Тогда
		Возврат тз;
	КонецЕсли;

	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат тз;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	
				
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = 	
	
	"ВЫБРАТЬ
	|	СделкаРеализации.ТочкаОформления КАК ТочкаОформления,
	|	СделкаРеализации.НомерТелефона КАК НомерТелефона,
	|	МАКСИМУМ(СделкаРеализации.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ05_СделкиПредПериодаБезДублейПоТелефону
	|ИЗ
	|	Документ.СделкаРеализации КАК СделкаРеализации
	|ГДЕ
	|	СделкаРеализации.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&Начало, ДЕНЬ, -60) И &Начало
	|	И СделкаРеализации.ВидДеятельности В ИЕРАРХИИ(&ВидДеятельности)
	|	И ПОДСТРОКА(СделкаРеализации.НомерТелефона, 5, 1) <> """"""""
	|
	|СГРУППИРОВАТЬ ПО
	|	СделкаРеализации.ТочкаОформления,
	|	СделкаРеализации.НомерТелефона
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СделкаРеализации.Ссылка КАК Ссылка,
	|	СделкаРеализации.Дата КАК СделкаДата,
	|	СделкаРеализации.НомерТелефона КАК НомерТелефона,
	|	СделкаРеализации.ТочкаОформления КАК ТочкаОформления,
	|	СделкаРеализации.ИсточникКонтакта КАК ИсточникКонтакта,
	|	СделкаРеализации.Заголовок КАК КонтактноеЛицо,
	|	СделкаРеализации.Состояние КАК Состояние,
	|	СделкаРеализации.СотрудникОтветственный КАК Сотрудник,
	|	СделкаРеализации.СотрудникОтветственный.ТелефонКор КАК СотрудникТелефон,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВстречаВнутренняя)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВстречаВнутренняя,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.Выставка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВыставка,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВыездноеРекламноеМероприятие)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВыездноеРекламноеМероприятие,
	|	ВЫБОР
	|		КОГДА СделкаРеализации.ИсточникКонтакта = ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ИсточникКонтакта.ДиалогВЧате)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДиалогВЧате
	|ПОМЕСТИТЬ ВТ10_СделкиТекПериода
	|ИЗ
	|	Документ.СделкаРеализации КАК СделкаРеализации
	|ГДЕ
	|	СделкаРеализации.Дата МЕЖДУ &Начало И &Окончание
	|	И СделкаРеализации.ВидДеятельности В ИЕРАРХИИ(&ВидДеятельности)
	|	И СделкаРеализации.ИсточникКонтакта В (ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВстречаВнутренняя), ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.Выставка), ЗНАЧЕНИЕ(Перечисление.ИсточникКонтакта.ВыездноеРекламноеМероприятие), ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ИсточникКонтакта.ДиалогВЧате))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ10.Ссылка КАК Ссылка,
	|	ВТ10.СделкаДата КАК СделкаДата,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.Ссылка) КАК СделкаПредставление,
	|	ВТ10.НомерТелефона КАК НомерТелефона,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.ТочкаОформления) КАК ТочкаОформления,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.ИсточникКонтакта) КАК ИсточникКонтакта,
	|	ВТ10.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.Состояние) КАК Состояние,
	|	ПРЕДСТАВЛЕНИЕ(ВТ10.Сотрудник) КАК Сотрудник,
	|	ВТ10.СотрудникТелефон КАК СотрудникТелефон,
	|	ВТ10.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	ВТ10.КоличествоВыставка КАК КоличествоВыставка,
	|	ВТ10.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	ВТ10.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате,
	|	ВЫБОР
	|		КОГДА ВТ05.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоДубль,
	|	ЕСТЬNULL(ВТ05.Ссылка, ЗНАЧЕНИЕ(Документ.СделкаРеализации.ПустаяСсылка)) КАК СделкаОснованиеДубля,
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ВТ05.Ссылка, ЗНАЧЕНИЕ(Документ.СделкаРеализации.ПустаяСсылка))) КАК СделкаОснованиеДубляПредставление
	|ИЗ
	|	ВТ10_СделкиТекПериода КАК ВТ10
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ05_СделкиПредПериодаБезДублейПоТелефону КАК ВТ05
	|		ПО ВТ10.НомерТелефона = ВТ05.НомерТелефона
	|			И ВТ10.ТочкаОформления = ВТ05.ТочкаОформления";
	
	БИ_Запрос.УстановитьПараметр("Начало",			 Начало);	
	БИ_Запрос.УстановитьПараметр("Окончание", 		Окончание);	
	БИ_Запрос.УстановитьПараметр("ВидДеятельности", БИ.ПредопределенноеЗначение("Справочник.ВидыДеятельности.ПродажаНовые"));
	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = тз.Добавить();	
		Новая.Сделка 									= БИ_Выборка.СделкаПредставление;
		Новая.СделкаНавСсылка							= "e1c://server/MainAppL/asc_oper#"+БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
		Новая.СделкаДата								= БИ_Выборка.СделкаДата;
		Новая.НомерТелефона								= БИ_Выборка.НомерТелефона;
		Новая.ТочкаОформления 							= БИ_Выборка.ТочкаОформления;
		Новая.ИсточникКонтакта							= БИ.xmlСтрока(БИ_Выборка.ИсточникКонтакта);
		Новая.КонтактноеЛицо   							= БИ_Выборка.КонтактноеЛицо;
		Новая.Состояние 								= БИ_Выборка.Состояние;
		Новая.Сотрудник 								= БИ_Выборка.Сотрудник;
		Новая.СотрудникТелефон 							= БИ_Выборка.СотрудникТелефон;
		Новая.КоличествоВстречаВнутренняя 				= БИ_Выборка.КоличествоВстречаВнутренняя;
		Новая.КоличествоВыставка         				= БИ_Выборка.КоличествоВыставка;
		Новая.КоличествоВыездноеРекламноеМероприятие	= БИ_Выборка.КоличествоВыездноеРекламноеМероприятие;
		Новая.КоличествоДиалогВЧате 					= БИ_Выборка.КоличествоДиалогВЧате;
		Новая.ЭтоДубль									= БИ_Выборка.ЭтоДубль;
		Новая.ОснованиеДубля							= БИ_Выборка.СделкаОснованиеДубляПредставление;
		Новая.ОснованиеДубляНавСсылка					= "e1c://server/MainAppL/asc_oper#"+БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.СделкаОснованиеДубля);

	КонецЦикла;
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);
	
	Возврат тз;
	
КонецФункции

Функция СделкиВстречиВыставкиОУиЦелевыеТочкиАгр (СделкиОУ, Окончание);
	// К сделке ОУ привязывает Целевую точку Агр
	
	ТЗ = Новый ТаблицаЗначений();
	ТипСтрока	= Новый ОписаниеТипов("Строка");
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0));
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("Сделка", 									ТипСтрока);
	тз.Колонки.Добавить("СделкаНавСсылка",							ТипСтрока);
	тз.Колонки.Добавить("СделкаДата",								Новый ОписаниеТипов("Дата"));
	тз.Колонки.Добавить("НомерТелефона",							ТипСтрока);
	тз.Колонки.Добавить("ТочкаОформления",							ТипСтрока);
	тз.Колонки.Добавить("ИсточникКонтакта",							ТипСтрока);
	тз.Колонки.Добавить("КонтактноеЛицо",							ТипСтрока);
	тз.Колонки.Добавить("Состояние",								ТипСтрока);
	тз.Колонки.Добавить("Сотрудник",								ТипСтрока);
	тз.Колонки.Добавить("СотрудникТелефон",							Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4)));
	тз.Колонки.Добавить("ЭтоДубль",									Новый ОписаниеТипов("Булево"));
	тз.Колонки.Добавить("ОснованиеДубля",							ТипСтрока);
	тз.Колонки.Добавить("ОснованиеДубляНавСсылка",					ТипСтрока);
	тз.Колонки.Добавить("ТочкаЦелевая",								Новый ОписаниеТипов("СправочникСсылка.ТочкиЦелевые"));
	тз.Колонки.Добавить("КоличествоВстречаВнутренняя",				ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыставка",						ТипЧисло);
	тз.Колонки.Добавить("КоличествоВыездноеРекламноеМероприятие",	ТипЧисло);
	тз.Колонки.Добавить("КоличествоДиалогВЧате",					ТипЧисло);


	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(СделкиОУ) = Тип("ТаблицаЗначений");
	Если Не Доступно Тогда
		Возврат ТЗ;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Сделка КАК Сделка,
	|	Т.СделкаДата КАК СделкаДата,
	|	Т.СделкаНавСсылка КАК СделкаНавСсылка,
	|	Т.НомерТелефона КАК НомерТелефона,
	|	Т.ТочкаОформления КАК ТочкаОформления,
	|	Т.ИсточникКонтакта КАК ИсточникКонтакта,
	|	Т.КонтактноеЛицо КАК КонтактноеЛицо,
	|	Т.Состояние КАК Состояние,
	|	Т.Сотрудник КАК Сотрудник,
	|	Т.СотрудникТелефон КАК СотрудникТелефон,
	|	Т.ЭтоДубль КАК ЭтоДубль,
	|	Т.ОснованиеДубля КАК ОснованиеДубля,
	|	Т.ОснованиеДубляНавСсылка КАК ОснованиеДубляНавСсылка,
	|	Т.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	Т.КоличествоВыставка КАК КоличествоВыставка,
	|	Т.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	Т.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате
	|ПОМЕСТИТЬ ВТ05_СделкиОУ
	|ИЗ
	|	&Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ05.Сделка КАК Сделка,
	|	ВТ05.СделкаНавСсылка КАК СделкаНавСсылка,
	|	ВТ05.НомерТелефона КАК НомерТелефона,
	|	ВТ05.ТочкаОформления КАК ТочкаОформления,
	|	ВТ05.ИсточникКонтакта КАК ИсточникКонтакта,
	|	ВТ05.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ВТ05.Состояние КАК Состояние,
	|	ВТ05.Сотрудник КАК Сотрудник,
	|	ВТ05.СотрудникТелефон КАК СотрудникТелефон,
	|	ВТ05.ЭтоДубль КАК ЭтоДубль,
	|	ВТ05.ОснованиеДубля КАК ОснованиеДубля,
	|	ВТ05.ОснованиеДубляНавСсылка КАК ОснованиеДубляНавСсылка,
	|	ВТ05.КоличествоВстречаВнутренняя КАК КоличествоВстречаВнутренняя,
	|	ВТ05.КоличествоВыставка КАК КоличествоВыставка,
	|	ВТ05.КоличествоВыездноеРекламноеМероприятие КАК КоличествоВыездноеРекламноеМероприятие,
	|	ВТ05.КоличествоДиалогВЧате КАК КоличествоДиалогВЧате,
	|	ЕСТЬNULL(Аг.ТочкаЦелевая, ЗНАЧЕНИЕ(Справочник.ТочкиЦелевые.ПустаяСсылка)) КАК ТочкаЦелевая
	|ИЗ
	|	ВТ05_СделкиОУ КАК ВТ05
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АгентыЦелевыеИст КАК Аг
	|		ПО ВТ05.СотрудникТелефон = Аг.Телефон.Код
	|			И (ВТ05.СделкаДата МЕЖДУ Аг.Период И ВЫБОР
	|				КОГДА Аг.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА &Окончание
	|				ИНАЧЕ Аг.Окончание
	|			КОНЕЦ)";
	
	Запрос.УстановитьПараметр("Т", СделкиОУ);
	Запрос.УстановитьПараметр("Окончание", Окончание);
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	Возврат ТЗ;
КонецФункции

Функция СформироватьБазовыеТаблицыЗвонкиВстречиЗадачиЭлПочты(ДатаНачала, ДатаОкончания, ДатаПредНачала, ДатаПредОкончания, ТаблДок) Экспорт
	
	ЗначениеПоУмолчанию = "";
	
	ЭтотОбъект.РеестрЦелевыхТек.Очистить();
	
	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоКоду("000000002");
	Если ИсточникДанных = Неопределено Тогда
		Сообщить("Нет подключения к базе оперативного учета! Данные по встречам будут нулевые");	
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ПараметрыСоединения = ИсточникДанных.ПараметрыСоединения;
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ПараметрыСоединения);	
			
	//Реестр целевых текущего периода из ОУ загрузить
	//-------------------------------------------------
	КодТочкиОформленияУфа = "000000008";
	РеестрЦелевых_Загрузить(БИ, "РеестрЦелевыхТек", ДатаНачала, ДатаОкончания, КодТочкиОформленияУфа, "");
			
	ОбщегоНазначения.РазорватьПодключениеБД(БИ);

КонецФункции

Функция РеестрЦелевых_Загрузить(БИ, ИмяТаблЧасти, ДатаНачала, ДатаОкончания, КодТочкиОформленияКорректировки, ПустаяСтрока) Экспорт
	
	ЗначениеПоУмолчанию = Ложь;
	
	БИ_Запрос = БИ.NewObject("Запрос");
	БИ_Запрос.Текст = 	
	"ВЫБРАТЬ
|	Звонки.Ссылка КАК Ссылка,
|	Звонки.Дата КАК ДатаЗвонка,
|	Звонки.Код КАК Сигнатура,
|	Звонки.Входящий КАК Входящий,
|	Звонки.Оператор КАК СотрудникСсылка,
|	Звонки.ТелОператор КАК НомерВнутреннегоТелефона,
|	Звонки.ТочкаОформления КАК ТочкаОформленияcСсылка,
|	Звонки.Состояние.Наименование КАК Состояние,
|	Звонки.Статус КАК Статус,
|	Звонки.Основание КАК ОснованиеДля,
|	0 КАК Количество1,
|	ВЫБОР
|		КОГДА Звонки.Состояние = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийНовый)
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК Количество2,
|	ВЫБОР
|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК Количество3,
|	ВЫБОР
|		КОГДА Звонки.Статус = ""ОТКАЗ-НЕЦЕЛЕВОЙ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК Количество4,
|	0 КАК Количество5,
|	ВЫБОР
|		КОГДА Звонки.Статус = ""ОТКАЗ-ОПЕРАТОР""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК Количество6,
|	ВЫБОР
|		КОГДА Звонки.Статус = ""РАБОТА-ПРИВЯЗКА""
|				ИЛИ Звонки.Статус = ""ОТКАЗ-ВРАБОТЕ""
|				ИЛИ Звонки.Статус = ""РАБОТА-АВТОПРИВЯЗКА""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК Количество7,
|	ВЫБОР
|		КОГДА Звонки.Статус = ""РАБОТА-НОВЫЙ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК Количество8,
|	1 КАК КоличествоОбщееБезПочты,
|	ВЫБОР
|		КОГДА Звонки.Статус = ""РАБОТА-НОВЫЙ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ КАК КоличествоЦелевыхБезПочты
|ПОМЕСТИТЬ ВТ017_РеестрЦелевыхТекПериодБезСвода
|ИЗ
|	Справочник.Звонки КАК Звонки
|ГДЕ
|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
|	И Звонки.ТочкаОформления.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ПродажаНовые)
|	И Звонки.Собственный = ЛОЖЬ
|	И Звонки.Статус <> ""ЗВОНОК-АВТОПРИВЯЗКА""
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ЗвонокОснование.Ссылка,
|	ЗвонокОснование.Дата,
|	ЗвонокОснование.Код,
|	ЗвонокОснование.Входящий,
|	ЗвонокОснование.Оператор,
|	ЗвонокОснование.ТелОператор,
|	ЗвонокОснование.ТочкаОформления,
|	ЗвонокОснование.Состояние.Наименование,
|	ЗвонокОснование.Статус,
|	ЗвонокОснование.Основание,
|	ВЫБОР
|		КОГДА ЗвонокОснование.Основание ЕСТЬ NULL
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Состояние = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийНовый)
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""ОТКАЗ-НЕЦЕЛЕВОЙ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""ЗВОНОК-АВТОПРИВЯЗКА""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""ОТКАЗ-ОПЕРАТОР""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""РАБОТА-ПРИВЯЗКА""
|				ИЛИ Собственные.Статус = ""ОТКАЗ-ВРАБОТЕ""
|				ИЛИ Собственные.Статус = ""РАБОТА-АВТОПРИВЯЗКА""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""РАБОТА-НОВЫЙ""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ,
|	1,
|	ВЫБОР
|		КОГДА Собственные.Статус = ""РАБОТА-НОВЫЙ""
|				ИЛИ Собственные.Статус = ""ЗВОНОК-АВТОПРИВЯЗКА""
|			ТОГДА 1
|		ИНАЧЕ 0
|	КОНЕЦ
|ИЗ
|	Справочник.Звонки КАК ЗвонокОснование
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Звонки КАК Собственные
|		ПО ((ВЫРАЗИТЬ(ЗвонокОснование.Основание КАК Справочник.Звонки)) = Собственные.Ссылка)
|			И (Собственные.Собственный = ИСТИНА)
|ГДЕ
|	ЗвонокОснование.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
|	И ЗвонокОснование.Статус = ""ЗВОНОК-АВТОПРИВЯЗКА""
|	И Собственные.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
|	И ЗвонокОснование.ТочкаОформления.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ПродажаНовые)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТ017.Ссылка КАК Ссылка,
|	ВТ017.ДатаЗвонка КАК ДатаЗвонка,
|	ВТ017.Сигнатура КАК Сигнатура,
|	ВТ017.Входящий КАК Входящий,
|	ВТ017.СотрудникСсылка КАК СотрудникСсылка,
|	ВТ017.СотрудникСсылка.Наименование КАК СотрудникПредставление,
|	ВТ017.НомерВнутреннегоТелефона КАК НомерВнутреннегоТелефона,
|	ВТ017.ТочкаОформленияcСсылка КАК ТочкаОформленияСсылка,
|	ВТ017.ТочкаОформленияcСсылка.Наименование КАК ТочкаОформленияПредставление,
|	ВТ017.Состояние КАК Состояние,
|	ВТ017.Статус КАК Статус,
|	ВТ017.ОснованиеДля.Код КАК ОснованиеДля,
|	ВТ017.Количество1 КАК Количество1,
|	ВТ017.Количество2 КАК Количество2,
|	ВТ017.Количество3 КАК Количество3,
|	ВТ017.Количество4 КАК Количество4,
|	ВТ017.Количество5 КАК Количество5,
|	ВТ017.Количество6 КАК Количество6,
|	ВТ017.Количество7 КАК Количество7,
|	ВТ017.Количество8 КАК Количество8,
|	ВТ017.Количество1 + ВТ017.Количество2 + ВТ017.Количество3 + ВТ017.Количество4 + ВТ017.Количество5 + ВТ017.Количество6 + ВТ017.Количество7 + ВТ017.Количество8 КАК КоличествоИтогоПоСтатусам,
|	ВТ017.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
|	ВТ017.КоличествоЦелевыхБезПочты КАК КоличествоЦелевыхБезПочты
|ИЗ
|	ВТ017_РеестрЦелевыхТекПериодБезСвода КАК ВТ017";
	
	БИ_Запрос.УстановитьПараметр("ДатаНачала",				ДатаНачала);
	БИ_Запрос.УстановитьПараметр("ДатаОкончания", 			ДатаОкончания);	
	БИ_Запрос.УстановитьПараметр("КодТочкиОформленияУфа", 	КодТочкиОформленияКорректировки);	
	БИ_Запрос.УстановитьПараметр("ПустаяСтрока",		 	ПустаяСтрока);
	
	БИ_РезультатЗапроса = БИ_Запрос.Выполнить();	
	БИ_Выборка = БИ_Запрос.Выполнить().Выбрать();
	
	Пока БИ_Выборка.Следующий() Цикл
		Новая = ЭтотОбъект[ИмяТаблЧасти].Добавить();	
		Новая.ДатаЗвонка					= БИ_Выборка.ДатаЗвонка;
		Новая.Сигнатура 					= БИ_Выборка.Сигнатура;
		Новая.СотрудникОУГУИД				= БИ.XMLСтрока(БИ_Выборка.СотрудникСсылка);	
		Новая.СотрудникНаименование			= БИ_Выборка.СотрудникПредставление;	
		Новая.НомерВнутреннегоТелефона  	= БИ_Выборка.НомерВнутреннегоТелефона;
		Новая.ТочкаОформленияОУГУИД			= БИ.XMLСтрока(БИ_Выборка.ТочкаОформленияСсылка);
		Новая.ТочкаОформленияНаименование	= БИ_Выборка.ТочкаОформленияПредставление;
		Новая.Состояние						= БИ_Выборка.Состояние;
		Новая.Статус						= БИ_Выборка.Статус;
		Новая.ОснованиеДля					= БИ_Выборка.ОснованиеДля;
		Новая.Количество1					= БИ_Выборка.Количество1;	
		Новая.Количество2					= БИ_Выборка.Количество2;
		Новая.Количество3					= БИ_Выборка.Количество3;
		Новая.Количество4					= БИ_Выборка.Количество4;
		Новая.Количество5					= БИ_Выборка.Количество5;
		Новая.Количество6					= БИ_Выборка.Количество6; 
		Новая.Количество7					= БИ_Выборка.Количество7; 
		Новая.Количество8					= БИ_Выборка.Количество8;  
		Новая.КоличествоИтогоПоСтатусам		= БИ_Выборка.КоличествоИтогоПоСтатусам;
		Новая.КоличествоОбщееБезПочты		= БИ_Выборка.КоличествоОбщееБезПочты;
		Новая.КоличествоЦелевыхБезПочты		= БИ_Выборка.КоличествоЦелевыхБезПочты;
		Новая.Входящий						= БИ_Выборка.Входящий;
		Новая.НавСсылка                     = БИ.ПолучитьНавигационнуюСсылку(БИ_Выборка.Ссылка);
	КонецЦикла;
	
	Возврат  Истина;
	
	
КонецФункции


Функция СформируйТаблицуПланаПоТрафику(Месяц)
	
	ЗначениеПоУмолчанию = Ложь;
	
	ЭтотОбъект.ПланПоЦелевомТрафику.Очистить();
	
	Об = Обработки.ТаблицаXML_ПланПоЦелевомуТрафику.Создать();
	Об.УстановитьНастройки();
	//Об.ЗначениеИзмерения =  "Ростов_ПланПоЦелевомуТрафику"; 
	Об.Десериализовать();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Месяц КАК Месяц,
	|	Т.ТочкаЦелевая КАК ТочкаЦелевая,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ00
	|ИЗ
	|	&Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.ТочкаЦелевая КАК ТочкаЦелевая,
	|	ВТ00.Количество КАК Количество
	|ИЗ
	|	ВТ00 КАК ВТ00
	|ГДЕ
	|	ВТ00.Месяц = &Месяц";
	
	Запрос.УстановитьПараметр("Т", 		Об.ТЗ);
	Запрос.УстановитьПараметр("Месяц", 	Месяц);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Новая = ЭтотОбъект.ПланПоЦелевомТрафику.Добавить();
		Новая.Период 		= Месяц;
		Новая.ТочкаЦелевая 	= Выборка.ТочкаЦелевая;
		Новая.Количество 	= Выборка.Количество;
	КонецЦикла;
	
КонецФункции

Функция ЗагрузитьНастройкиПриОтправкеНаПочту() Экспорт
	
	ЭтотОбъект.ВыбранныйВариантОтчета = "Сводный";
		
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1359"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5334"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5240"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5241"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5242"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5319"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1391"));
	ЭтотОбъект.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1392"));

	#Область Доступные_целевые_точки
	НазваниеГруппыЦелевыхТочек = "Луидор-автосалоны"; 
	ЭтотОбъект.ГруппаЦелевыхТочек = Справочники.ТочкиЦелевые.НайтиПоНаименованию(НазваниеГруппыЦелевыхТочек);
	Если ЭтотОбъект.ГруппаЦелевыхТочек = ПредопределенноеЗначение("Справочник.ТочкиЦелевые.ПустаяСсылка") Тогда
		Возврат "ошибка";
	КонецЕсли;
	
	МассивДоступныхЦелевыхТочек = ЗначенияСервера.ДоступныеЦелевыеТочки2();	
	// Список доступных целевых точек - из группы Автосалоны
	//------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТочкиЦелевые.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТочкиЦелевые КАК ТочкиЦелевые
	|ГДЕ
	|	ТочкиЦелевые.Ссылка В ИЕРАРХИИ(&ГруппаЦелевыхТочек)";
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек", ЭтотОбъект.ГруппаЦелевыхТочек);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Нет доступных пользователю целевых точек";
		Сообщ.Сообщить();
	Иначе
		Доступные = Новый СписокЗначений();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если МассивДоступныхЦелевыхТочек.Найти(Выборка.Ссылка) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Доступные.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	ЭтотОбъект.ДоступныеЦелевыеТочки.ЗагрузитьЗначения(МассивДоступныхЦелевыхТочек);
	
	Если Доступные.Количество()=0 Тогда
		Возврат "ошибка";
	КонецЕсли;
	#КонецОбласти
				
	КонецФункции