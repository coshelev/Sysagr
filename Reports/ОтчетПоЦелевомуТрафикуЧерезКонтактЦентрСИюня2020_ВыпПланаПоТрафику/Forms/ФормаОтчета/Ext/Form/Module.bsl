&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если ПараметрыСеанса.РольДоступнаАдминистратор Тогда
	//	Отчет.РежимОтладки = Истина;
	//Иначе
	//	Отчет.РежимОтладки = Ложь;
	//КонецЕсли;
	Элементы.РежимОтладки.Видимость				= Отчет.РежимОтладки;

	ОбновитьФормуНаСервере()

КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуНаСервере()
	
	ЭтаФорма.Элементы.СтрРеестрЦелевыхТек.Видимость			= Отчет.РежимОтладки;
	ЭтаФорма.Элементы.СтрДополнительно.Видимость			= Отчет.РежимОтладки;
	ЭтаФорма.Элементы.СтрПланПоТрафику.Видимость			= ЭтаФорма.Отчет.РежимОтладки;

	//ЭтаФорма.Элементы.ТелефоныКонтактЦентра1.Видимость		= Отчет.РежимОтладки;
	
	Отчет.ВыбранныйВариантОтчета="Сводный";
	Элементы.ВыбранныйВариантОтчета.СписокВыбора.Очистить();
	Элементы.ВыбранныйВариантОтчета.СписокВыбора.Добавить("Сводный", "Сводный");
	Элементы.ВыбранныйВариантОтчета.СписокВыбора.Добавить("Детальный", "Детальный");
	//
	//Если Отчет.РежимОтладки Тогда
	//	Элементы.ВыбранныйВариантОтчета.СписокВыбора.Добавить("СводныйАдм", "Сводный администратора");
	//	Элементы.ВыбранныйВариантОтчета.СписокВыбора.Добавить("ДетальныйАдм", "Детальный администратора");
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриОткрытии_НаСервере()
	
	НазваниеГруппыЦелевыхТочек = "Луидор-автосалоны"; 
	Отчет.ГруппаЦелевыхТочек = Справочники.ТочкиЦелевые.НайтиПоНаименованию(НазваниеГруппыЦелевыхТочек);
	Если Отчет.ГруппаЦелевыхТочек = ПредопределенноеЗначение("Справочник.ТочкиЦелевые.ПустаяСсылка") Тогда
		Сообщить("Не найдена группа целевых точек "+НазваниеГруппыЦелевыхТочек);
	КонецЕсли;

			
	#Область Доступные_целевые_точки
	МассивДоступныхЦелевыхТочек = ЗначенияСервера.ДоступныеЦелевыеТочки2();	
	// Список доступных целевых точек - из группы Автосалоны
	//------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТочкиЦелевые.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТочкиЦелевые КАК ТочкиЦелевые
	|ГДЕ
	|	ТочкиЦелевые.Родитель = &ГруппаЦелевыхТочек";
	Запрос.УстановитьПараметр("ГруппаЦелевыхТочек", Отчет.ГруппаЦелевыхТочек);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Нет доступных пользователю целевых точек";
		Сообщ.Сообщить();
	Иначе
		Доступные = Новый СписокЗначений();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если МассивДоступныхЦелевыхТочек.Найти(Выборка.Ссылка) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Доступные.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Отчет.ДоступныеЦелевыеТочки.ЗагрузитьЗначения(МассивДоступныхЦелевыхТочек);
	
	Если Доступные.Количество()=0 Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Нет доступных пользователю целевых точек";
		Сообщ.Сообщить();	
	КонецЕсли;
	#КонецОбласти
				
	ТекДата = ТекущаяДата();
	Пер = Новый СтандартныйПериод();
	Пер.ДатаНачала 		= НачалоМесяца(ТекДата);
	Пер.ДатаОкончания 	= ТекДата;
	
	Отчет.Период = Пер;
	
	Элементы.ВыборПериода.Заголовок = " "+Формат(Пер.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Пер.ДатаОкончания, "ДЛФ=Д");
		
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1359"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5334"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5240"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5241"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5242"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("5319"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1391"));
	Отчет.ТелефоныКонтактЦентра.Добавить(Справочники.ТелВнутренние.НайтиПоКоду("1392"));
	
	
	Элементы.ВыборПериода.Заголовок = " "+Формат(Пер.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Пер.ДатаОкончания, "ДЛФ=Д");

КонецПроцедуры
	
&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	ПриОткрытии_НаСервере()
КонецПроцедуры

&НаКлиенте
Процедура РежимОтладкиПриИзменении(Элемент)
	РежимОтладки = ЭтаФорма.Отчет.РежимОтладки;
	ОбновитьФормуНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	//Убери вопрос "Вариант отчета был изменен, сохранить?"
	//----------------------------------------------------
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
	рез = РезультатОбработкаРасшифровкиНаСервере(Расшифровка);
	
	Если Не ЗначениеЗаполнено(Рез) Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(Рез) = Тип("СправочникСсылка.ОУ_Сотрудники") Тогда
		Парам = Новый Структура();
		Парам.Вставить("Ключ", Рез);
		ОткрытьФорму("Справочник.ОУ_Сотрудники.Форма.ФормаЭлемента", Парам, ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Рез)<>Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Рез, "e1c://server/MainAppL/asc_oper#" ) Тогда
		ПерейтиПоНавигационнойСсылке(Рез);
		Возврат
	КонецЕсли;
	
	Если СтрНайти(Рез, "#", , 2) >1 Тогда
		//Парам = Новый Структура();
		//Парам.Вставить("Сигнатура", рез);
		//Если Лев(Рез,1) = "0" Тогда
		//	ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаВходящегоЧтение";
		//Иначе
		//	ИмяОткрываемойФормы = "РегистрСведений.Звонки.Форма.ФормаИсходящегоЧтение";
		//КонецЕсли;
		//ОткрытьФорму(ИмяОткрываемойФормы, Парам);
		
		Отбор = Новый Структура();
		Отбор.Вставить("Сигнатура", Рез);
		Найденные = ЭтаФорма.Отчет.РеестрЦелевыхТек.НайтиСтроки(Отбор);
		Если Найденные.Количество()=1 Тогда
				АбсСсылка = "https://mainiis/asc_oper/#"+Найденные[0].НавСсылка;
				ПерейтиПоНавигационнойСсылке(АбсСсылка);	
		КонецЕсли;
        Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатОбработкаРасшифровкиНаСервере(Расшифровка)
	
	РасшифровкаОтчета = ПолучитьИзВременногоХранилища(ЭтаФорма.ДанныеРасшифровки);
	ЭлементыРасшифровки = РасшифровкаОтчета.Элементы;
	РасшифровкаЯчейки =  ЭлементыРасшифровки.Получить(Расшифровка);
	ЗначенияПолейРасш = РасшифровкаЯчейки.ПолучитьПоля();
	ЗначениеПоляРасш = ЗначенияПолейРасш.Получить(0);
	Возврат ЗначениеПоляРасш.Значение;

КонецФункции

#Область Выбор_периода
&НаКлиенте
Процедура ВыборПериода(Команда)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода(); 
	Диалог.Период = Отчет.Период;    
	
	ПриЗакрытииДиалогаВыбораПериода = Новый ОписаниеОповещения("ПриЗакрытииДиалогаВыбораПериода", ЭтаФорма);
	Диалог.Показать(ПриЗакрытииДиалогаВыбораПериода);
	//Если Диалог.Редактировать() Тогда 
	//	ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", Диалог.Период);
	//КонецЕсли;
	//Элементы.ВыборПериода.Заголовок = " "+Формат(Диалог.Период.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Диалог.Период.ДатаОкончания, "ДЛФ=Д");
	//Отчет.Период = Диалог.Период;
КонецПроцедуры

Процедура ПриЗакрытииДиалогаВыбораПериода(Парам1, Парам2) Экспорт
	// Парам1 - период
	// Парам2 - доп. парам
	
	Если ТипЗнч(Парам1) <> Тип("СтандартныйПериод") Тогда
		Возврат;
	КонецЕсли;
	Элементы.ВыборПериода.Заголовок = " "+Формат(Парам1.ДатаНачала, "ДЛФ=Д")+" - "+Формат(Парам1.ДатаОкончания, "ДЛФ=Д");
	Отчет.Период = Парам1;
КонецПроцедуры
#КонецОбласти


