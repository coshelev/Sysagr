
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
	Параметры.УстановитьЗначениеПараметра("Начало", 	Период.ДатаНачала);
	Параметры.УстановитьЗначениеПараметра("Окончание", 	Период.ДатаОкончания);
	
	Периоды = Новый ТаблицаЗначений();
	Периоды.Колонки.Добавить("Дата",			Новый ОписаниеТипов("Дата"));
	Периоды.Колонки.Добавить("ПриведеннаяДата", Новый ОписаниеТипов("Дата"));
	
	НачальнаяДата 	= НачалоДня(Период.ДатаНачала)+6*60*60;  	//Начало в 6 часов утра
	КонечнаяДата	= НачалоДня(Период.ДатаОкончания)+21*60*60;	//Окончание в 21 час
	Пока НачальнаяДата <= КонечнаяДата Цикл	
		Новая = Периоды.Добавить();
		Новая.Дата 				= НачалоДня(НачальнаяДата);
		Новая.ПриведеннаяДата 	= НачальнаяДата;
		
		НачальнаяДата = НачальнаяДата+600; 
	КонецЦикла;

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Звонки.Дата, ДЕНЬ) КАК Дата,
	|	ЧАС(Звонки.Дата) КАК Час,
	|	МИНУТА(Звонки.Дата) КАК Минута,
	|	Звонки.Сигнатура КАК Сигнатура,
	|	1 КАК Количество,
	|	ВЫБОР
	|		КОГДА Маршруты.СвойстваСобытия = ""номер в очереди = 1""
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НеПервыйВОчереди
	|ПОМЕСТИТЬ ВТ01
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК ЗвонкиСтатОбщая
	|		ПО Звонки.Сигнатура = ЗвонкиСтатОбщая.Сигнатура
	|			И (ЗвонкиСтатОбщая.КЦСсылка = &КЦСсылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиМаршруты КАК Маршруты
	|		ПО (Маршруты.Сигнатура = Звонки.Сигнатура)
	|			И (Маршруты.КодСобытия = ""ENTERQUEUE"")
	|			И (Маршруты.Оператор = &Оператор)
	|ГДЕ
	|	Звонки.ЭтоВходящий = ИСТИНА
	|	И Звонки.Дата МЕЖДУ &Начало И &Окончание
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Звонки.Дата, ДЕНЬ),
	|	ЧАС(Звонки.Дата),
	|	МИНУТА(Звонки.Дата),
	|	Звонки.Сигнатура,
	|	1,
	|	0
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК ЗвонкиСтатОбщая
	|		ПО Звонки.Сигнатура = ЗвонкиСтатОбщая.Сигнатура
	|			И (ЗвонкиСтатОбщая.КЦСсылка = &КЦСсылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиИнтернетЗаявки КАК ИнтернетЗадачи
	|		ПО (ЗвонкиСтатОбщая.Основание = ""iq_"" + ИнтернетЗадачи.Сигнатура)
	|			И (ИнтернетЗадачи.ВыполнитьАвтозвонок = ИСТИНА)
	|ГДЕ
	|	Звонки.ЭтоВходящий = ЛОЖЬ
	|	И ЗвонкиСтатОбщая.КЦСсылка = &КЦСсылка
	|	И Звонки.Дата МЕЖДУ &Начало И &Окончание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.Дата КАК Дата,
	|	ВТ01.Сигнатура КАК Сигнатура,
	|	ВТ01.Количество КАК Количество,
	|	ВТ01.НеПервыйВОчереди КАК НеПервыйВОчереди,
	|	ДОБАВИТЬКДАТЕ(ВТ01.Дата, МИНУТА, ВТ01.Час * 60 + ВЫБОР
	|			КОГДА ВТ01.Минута < 10
	|				ТОГДА 0
	|			КОГДА ВТ01.Минута >= 10
	|					И ВТ01.Минута < 20
	|				ТОГДА 10
	|			КОГДА ВТ01.Минута >= 20
	|					И ВТ01.Минута < 30
	|				ТОГДА 20
	|			КОГДА ВТ01.Минута >= 30
	|					И ВТ01.Минута < 40
	|				ТОГДА 30
	|			КОГДА ВТ01.Минута >= 40
	|					И ВТ01.Минута < 50
	|				ТОГДА 40
	|			ИНАЧЕ 50
	|		КОНЕЦ) КАК ПриведеннаяДата
	|ПОМЕСТИТЬ ВТ05
	|ИЗ
	|	ВТ01 КАК ВТ01
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Дата КАК Дата,
	|	Периоды.ПриведеннаяДата КАК ПриведеннаяДата
	|ПОМЕСТИТЬ ВТ06_ВсеПериоды
	|ИЗ
	|	&Периоды КАК Периоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ05.Дата КАК Дата,
	|	ВТ05.ПриведеннаяДата КАК ПриведеннаяДата,
	|	ВТ05.Сигнатура КАК Сигнатура,
	|	ВТ05.Количество КАК Количество,
	|	ВТ05.НеПервыйВОчереди КАК НеПервыйВОчереди
	|ПОМЕСТИТЬ ВТ07
	|ИЗ
	|	ВТ05 КАК ВТ05
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ06.Дата,
	|	ВТ06.ПриведеннаяДата,
	|	"""",
	|	0,
	|	0
	|ИЗ
	|	ВТ06_ВсеПериоды КАК ВТ06
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ07.Дата КАК Дата,
	|	ЧАС(ВТ07.ПриведеннаяДата) * 60 + МИНУТА(ВТ07.ПриведеннаяДата) КАК ВремяВМинутах,
	|	СУММА(ВТ07.Количество) КАК Количество,
	|	СУММА(ВТ07.НеПервыйВОчереди) КАК КоличествоНепервыхВОчереди,
	|	ВЫБОР
	|		КОГДА СУММА(ВТ07.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ВТ07.НеПервыйВОчереди) / СУММА(ВТ07.Количество) * 100
	|	КОНЕЦ КАК ДоляНепервыхВОчереди
	|ПОМЕСТИТЬ ВТ10
	|ИЗ
	|	ВТ05 КАК ВТ07
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ07.Дата,
	|	ВТ07.ПриведеннаяДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ10.Дата КАК Дата,
	|	ВТ10.ВремяВМинутах КАК ВремяВМинутах,
	|	ВТ10.Количество КАК Количество,
	|	ВТ10.КоличествоНепервыхВОчереди КАК КоличествоНепервыхВОчереди,
	|	ВТ10.ДоляНепервыхВОчереди КАК ДоляНепервыхВОчереди,
	|	ВЫБОР
	|		КОГДА ВТ10.Количество <= 15
	|			ТОГДА 0
	|		КОГДА ВТ10.Количество > 15
	|				И ВТ10.Количество <= 20
	|			ТОГДА 1
	|		КОГДА ВТ10.Количество > 20
	|				И ВТ10.Количество <= 25
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ЦветДляКоличество,
	|	ВЫБОР
	|		КОГДА ВТ10.ДоляНепервыхВОчереди <= 10
	|			ТОГДА 0
	|		КОГДА ВТ10.ДоляНепервыхВОчереди > 10
	|				И ВТ10.ДоляНепервыхВОчереди <= 20
	|			ТОГДА 1
	|		КОГДА ВТ10.ДоляНепервыхВОчереди > 21
	|				И ВТ10.ДоляНепервыхВОчереди <= 50
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ЦветДоляНепервыхВОчереди
	|ИЗ
	|	ВТ10 КАК ВТ10";
	
	Запрос.УстановитьПараметр("Начало",		НачалоДня(Период.ДатаНачала)+6*60*60 	 ); 	// Начало с 06 часов утра
	Запрос.УстановитьПараметр("Окончание",	НачалоДня(Период.ДатаОкончания)+21*60*60 ); // Окончание в 21 час вечера
	Запрос.УстановитьПараметр("КЦСсылка",	Справочники.КонтактЦентры.НайтиПоКоду("000000001").Подразделение);
	Запрос.УстановитьПараметр("Оператор",	Справочники.ТелОчереди.НайтиПоКоду("5519"));
	Запрос.УстановитьПараметр("Периоды", 	Периоды);
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	ВнешниеНаборыДанных = Новый Структура();
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	СКД = ЭтотОбъект.СхемаКомпоновкиДанных;
	//Настройки = СКД.НастройкиПоУмолчанию;
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры
