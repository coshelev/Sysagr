
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Заголовок		= "Задача: "+ЭтаФорма.Объект.Ссылка;	
	ЭтаФорма.История.КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("БизнесПроцесс", ЭтаФорма.Объект.БизнесПроцесс);
	ЭтаФорма.Элементы.СтрАнкета.Видимость 		= Ложь;
	
	ОбновитьСобственныеРеквзитыФормы();
	
	Если ЭтаФорма.Объект.Выполнена Тогда
		ЭтаФорма.Элементы.ГрКнопки.Доступность = Ложь;
		ЭтаФорма.Заголовок		= "Задача: "+ЭтаФорма.Объект.Ссылка+" - ВЫПОЛНЕНА";	
	КонецЕсли;
	
	//Доступность кнопок в зависимости от вида задачи
	//------------------------------------------------
	ЭтаФорма.Элементы.ЗадачаВыполнить.Видимость						= Ложь;
	ЭтаФорма.Элементы.ЗадачаПроверкиПринять.Видимость				= Ложь;
	ЭтаФорма.Элементы.ЗадачаПроверкиВернутьНаДоработку.Видимость	= Ложь;

	ТочкаМаршрута = ЭтаФорма.Объект.ТочкаМаршрута;
	
	// Для бизнес-процесса Обращение
	//-------------------------------
	Если ТипЗнч(ЭтаФорма.Объект.БизнесПроцесс) = Тип("БизнесПроцессСсылка.Обращение") Тогда
		
		
		// Для точки маршрута "Ответить" ("Обработать негативную анкету")
		//----------------------------------------------------------------
		Если 	ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ОбработатьНегативнуюАнкету_1")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ОбработатьНегативнуюАнкету_2")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ОбработатьНегативнуюАнкету_3")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ОбработатьНегативнуюАнкету_4")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ОбработатьНегативнуюАнкету_5")
			Тогда
			ЭтаФорма.Элементы.ЗадачаВыполнить.Видимость = Истина;	
		КонецЕсли;
		
		// Для точки маршрута "Проверить" ("Проверить обработанную негативную анкету")
		//------------------------------------------------------------------------------
		Если 	ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ПроверитьОбработаннуюНегативнуюАнкету_1")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ПроверитьОбработаннуюНегативнуюАнкету_2")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ПроверитьОбработаннуюНегативнуюАнкету_3")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ПроверитьОбработаннуюНегативнуюАнкету_4")
			Или ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ПроверитьОбработаннуюНегативнуюАнкету_5")
			Тогда
			ЭтаФорма.Элементы.ЗадачаВыполнить.Видимость					= Ложь;
			ЭтаФорма.Элементы.ЗадачаПроверкиПринять.Видимость			= Истина;
			
			Если ТочкаМаршрута <> ПредопределенноеЗначение("БизнесПроцесс.Обращение.ТочкаМаршрута.ПроверитьОбработаннуюНегативнуюАнкету_5") Тогда
				ЭтаФорма.Элементы.ЗадачаПроверкиВернутьНаДоработку.Видимость = Истина;
			КонецЕсли;
		КонецЕсли; 
		
		//Для обращения созданного на основании процесса Обратная связь лояльности (признаком является заполненный реквизит "Сигнатура продажи" 
		//для любой точки маршрута
		//---------------------------------------------------------------------------------------------------------------------------------------
		
		Если ЗначениеЗаполнено(ЭтаФорма.Объект.БизнесПроцесс.СигнатураПродажи) Тогда
			
			//Покажи закладку Анкета и звонок
			//---------------------------------
			ЭтаФорма.Элементы.СтрАнкета.Видимость 	= Истина;
			ЭтаФорма.Элементы.ГрЗвонок.Видимость	= Истина;
			
			//Покажи Анкету опроса
			//---------------------
			Печать_НаСервере(ЭтаФорма.Объект.БизнесПроцесс.СигнатураПродажи, ЭтаФорма.Анкета);	
			
			//Покажи звонок и кнопку открытия его формы
			//------------------------------------------
			ЭтаФорма.СигнатураЗвонка = ЭтаФорма.Объект.БизнесПроцесс.СигнатураЗвонка;
							
		КонецЕсли;
			
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция Печать_НаСервере(СигнатураПродажи, ТаблДок)
	Отч = Отчеты.БазовыеРеестрыСТОреестрНегативныхОтзывов.Создать();
	Отч.УстановитьНастройки();
	Отч.СформироватьОтчет(ТаблДок, СигнатураПродажи);
КонецФункции

&НаСервере
Функция ОбновитьСобственныеРеквзитыФормы()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Обращение.Тема КАК Тема,
	|	Обращение.Содержание КАК Содержание
	|ИЗ
	|	БизнесПроцесс.Обращение КАК Обращение
	|ГДЕ
	|	Обращение.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ЭтаФорма.Объект.БизнесПроцесс);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос, ПараметрыСеанса.ТекущийПользователь);
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЭтаФорма.Тема 		= Выборка.Тема;
		ЭтаФорма.Содержание = Выборка.Содержание;
	КонецЕсли;
	
	ЭтаФорма.Комментарий = ЭтаФорма.Объект.Ссылка.Комментарий;

КонецФункции

&НаКлиенте
Процедура Сохранить(Команда)
	Если Не ЗначениеЗаполнено(ЭтаФорма.Комментарий) Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Не заполнен комментарий";
		Сообщ.Поле = "ЭтаФорма.Комментарий";
		Сообщ.Сообщить();
		Возврат;
	КонецЕсли;
	Выполнено = ПроцессыСервер.ЗадачаЗаписать(ЭтаФорма.Объект.Ссылка, ЭтаФорма.Комментарий);
	
	ОбновитьСобственныеРеквзитыФормы();
	ЭтаФорма.Элементы.История.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаВыполнить(Команда)
	Если Не ЗначениеЗаполнено(ЭтаФорма.Комментарий) Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Не заполнен комментарий";
		Сообщ.Поле = "ЭтаФорма.Элементы.Комментарий1"; 
		Сообщ.Сообщить();
		Возврат;
	КонецЕсли;
	Выполнено = ПроцессыСервер.ЗадачаВыполнить(ЭтаФорма.Объект.Ссылка, , ТекущаяДата(), Комментарий);
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ПокажиКартуМаршрутаБизнесПроцесса(Команда)
	Парам = Новый Структура();
	Парам.Вставить("БизнесПроцесс", ЭтаФорма.Объект.БизнесПроцесс);
	ОткрытьФорму("ОбщаяФорма.КартаМаршрутаБизнесПроцесса", Парам);
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроверкиПринять(Команда)
	//Если Не ЗначениеЗаполнено(ЭтаФорма.Комментарий) Тогда
	//	Сообщ = Новый СообщениеПользователю();
	//	Сообщ.Текст = "Не заполнен комментарий";
	//	Сообщ.Поле = "ЭтаФорма.Элементы.Комментарий1"; 
	//	Сообщ.Сообщить();
	//	Возврат;
	//КонецЕсли;
	Если Не ЗначениеЗаполнено(Комментарий) Тогда
		Комментарий = "Закончено";
	КонецЕсли;
	Выполнено = ПроцессыСервер.ЗадачаВыполнить(ЭтаФорма.Объект.Ссылка, , ТекущаяДата(), Комментарий, 4);
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроверкиВернутьНаДоработку(Команда)
	Если Не ЗначениеЗаполнено(ЭтаФорма.Комментарий) Тогда
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст = "Не заполнен комментарий";
		Сообщ.Поле = "ЭтаФорма.Элементы.Комментарий1"; 
		Сообщ.Сообщить();
		Возврат;
	КонецЕсли;
	Выполнено = ПроцессыСервер.ЗадачаВыполнить(ЭтаФорма.Объект.Ссылка, , ТекущаяДата(), Комментарий, 2);
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗвонок(Команда)
	
// Команда открывает файл с записью разговора звонка в медиа-плейере по-умолчанию
//-------------------------------------------------------------------------------------------------
	Приемник = ПолучитьИмяВременногоФайла("WAV");
	Сигнатура = Неопределено;
	Источник = Неопределено;

// Попытка № 1 получить сигнатуру и путь к файлу с записью звонка открытого в вызывающей форме
//-------------------------------------------------------------------------------------------------
	Попытка
		Сигнатура = СокрЛП(ЭтаФорма.СигнатураЗвонка);
		Источник = Звонки.ЗаписьРазговораПолучить(Сигнатура);
	Исключение
	КонецПопытки;

// Если Сигнатура или путь к файлу не заполнены, значит прервем обработку
//-------------------------------------------------------------------------------------------------
	Доступно = ЗначениеЗаполнено(Сигнатура);
	Доступно = Доступно И ЗначениеЗаполнено(Источник);

	Если (Доступно = Ложь) Тогда
		Предупреждение("Файл с записью разговора не найден");
		Возврат;
	КонецЕсли;

// С помощью сервера получим файл во временное хранилище на клиента (таким образом у текущего
// пользователя отпадает необходимость в настройке прав доступа к серверным каталогам с файлами)
//-------------------------------------------------------------------------------------------------
	Попытка
		МассивОписаний = Новый Массив;
		АдресФайлаВХранилище = ФайлЗагрузитьВХранилище(Источник);
		МассивОписаний.Добавить(Новый ОписаниеПередаваемогоФайла(Приемник,АдресФайлаВХранилище));
		ПолучитьФайлы(МассивОписаний,,,Ложь);
		ЗапуститьПриложение(Приемник);
	Исключение
		ТекстСообщения = "Не удалось получить файл с записью разговора по ";
		ТекстСообщения = ТекстСообщения + "причине: " + СокрЛП(ОписаниеОшибки());
		Предупреждение(ТекстСообщения);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ФайлЗагрузитьВХранилище(Источник)
	ДанныеФайла = Новый ДвоичныеДанные(Источник);
	Ответ = ПоместитьВоВременноеХранилище(ДанныеФайла);
	Возврат (Ответ);
КонецФункции
