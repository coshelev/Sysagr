//*************************************************************************************************
// Функции для работы со строками
//*************************************************************************************************

Функция СтрокаРазделить(ИсходнаяСтрока,Разделитель = "") Экспорт

// Функция разделяет строку на части по указанным символам-разделителям. Возвращает массив
// состоящий из строк, которые получились в результате разделения исходной строки. В случае ошибки
// возвращает массив нулевого размера
//-------------------------------------------------------------------------------------------------
	Доступно = (ТипЗнч(ИсходнаяСтрока) = Тип("Строка"));
	Доступно = Доступно И ЗначениеЗаполнено(ИсходнаяСтрока);
	Ответ = Новый Массив;

	Если (Доступно = Ложь) Тогда
		Возврат (Ответ);
	КонецЕсли;

// Проверим правильность переданного Разделителя
// Выполним разделение исходной строки на многострочную строку
//-------------------------------------------------------------------------------------------------
	Доступно = (ТипЗнч(Разделитель) = Тип("Строка"));
	Доступно = Доступно И ЗначениеЗаполнено(Разделитель);
	Доступно = Доступно И (СтрДлина(Разделитель) = 1);
	СимволРазделитель = ?(Доступно,Разделитель," ");
	СтрМассив = СокрЛП(СтрЗаменить(ИсходнаяСтрока,СимволРазделитель,Символы.ПС));

// Перенесем непустые подстроки из полученной многострочной строки в массив "Ответ"
//-------------------------------------------------------------------------------------------------
	Для ТекПозиция = 1 По СтрЧислоСтрок(СтрМассив) Цикл
		ТекСлово = СокрЛП(СтрПолучитьСтроку(СтрМассив,ТекПозиция));

		Если (ЗначениеЗаполнено(ТекСлово)) Тогда
			Ответ.Добавить(ТекСлово);
		КонецЕсли;
	КонецЦикла;

	Возврат (Ответ);
КонецФункции

Функция СловоПолучить(ИсходнаяСтрока,НомерСлова = 1,Разделитель = "") Экспорт

// Из переданной исходной строки получим массив строк
//-------------------------------------------------------------------------------------------------
	МассивСтрок = СтрокаРазделить(ИсходнаяСтрока,Разделитель);
	НомерСлова = ?(НомерСлова > 0,НомерСлова,1);
	Ответ = "";

	Если (МассивСтрок.Количество() >= НомерСлова) Тогда
		Ответ = СокрЛП(МассивСтрок[НомерСлова - 1]);
	КонецЕсли;

	Возврат (СокрЛП(Ответ));
КонецФункции

Функция ПараметрПолучить(Знач ПолнаяСтрока,Знач ИмяПараметра) Экспорт

// Возвращает значение параметра из многострочной строки (ПолнаяСтрока)
// Строка с параметром и значением выглядит так: ИМЯ_ПАРАМЕТРА: ЗНАЧЕНИЕ_ПАРАМЕТРА
//-------------------------------------------------------------------------------------------------
	Доступно = (ТипЗнч(ПолнаяСтрока) = Тип("Строка"));
	Доступно = Доступно И (ТипЗнч(ИмяПараметра) = Тип("Строка"));
	Доступно = Доступно И ЗначениеЗаполнено(ПолнаяСтрока);
	Доступно = Доступно И ЗначениеЗаполнено(ИмяПараметра);
	Ответ = "";

	Если (Доступно = Ложь) Тогда
		Возврат (Ответ);
	КонецЕсли;

// Добавим к имени параметра знак ":"
//-------------------------------------------------------------------------------------------------
	ПолнаяСтрока = СокрЛП(ПолнаяСтрока);
	ИмяПараметра = ВРег(СокрЛП(ИмяПараметра));
	ИмяПараметра = ?(Прав(ИмяПараметра,1) = ":",ИмяПараметра,ИмяПараметра + ":");
	ДлинаПараметра = СтрДлина(ИмяПараметра);

// Просмотрим все строки переданной ПолнойСтроки в поисках параметра с нужным именем
//-------------------------------------------------------------------------------------------------
	Для НомерСтроки = 1 По СтрЧислоСтрок(ПолнаяСтрока) Цикл
		ТекСтрока = СокрЛП(СтрПолучитьСтроку(ПолнаяСтрока,НомерСтроки));

		Если (ВРег(Лев(ТекСтрока,ДлинаПараметра)) = ИмяПараметра) Тогда
			Позиция = Найти(ТекСтрока,":");
			Ответ = ?(Позиция = 0,"",Сред(ТекСтрока,Позиция + 1,СтрДлина(ТекСтрока)));
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат (СокрЛП(Ответ));
КонецФункции

Функция СигнатураПолучить(ИсходнаяСтрока) Экспорт

// Функция возвращает строку из 32 символов, которая может быть использована как сигнатура
// Не подлежит замене только символ ПФ (перевод формы), который может использоваться как
// разделитель сегментов в исходной строке
//-------------------------------------------------------------------------------------------------
	Если (ТипЗнч(ИсходнаяСтрока) = Тип("Строка")) Тогда
		Ответ = ВРег(СокрЛП(ИсходнаяСтрока));

// Выполним замену управляющих символов
//-------------------------------------------------------------------------------------------------
		Ответ = СтрЗаменить(Ответ,Символы.ВК,"");
		Ответ = СтрЗаменить(Ответ,Символы.ВТаб,"");
		Ответ = СтрЗаменить(Ответ,Символы.НПП,"");
		Ответ = СтрЗаменить(Ответ,Символы.ПС,"");
		Ответ = СтрЗаменить(Ответ,Символы.Таб,"");

// Выполним замену специальных символов
//-------------------------------------------------------------------------------------------------
		Ответ = СтрЗаменить(Ответ," ","");
		Ответ = СтрЗаменить(Ответ,"`","");
		Ответ = СтрЗаменить(Ответ,"~","");
		Ответ = СтрЗаменить(Ответ,"!","");
		Ответ = СтрЗаменить(Ответ,"@","");
		Ответ = СтрЗаменить(Ответ,"#","");
		Ответ = СтрЗаменить(Ответ,"№","");
		Ответ = СтрЗаменить(Ответ,"$","");
		Ответ = СтрЗаменить(Ответ,";","");
		Ответ = СтрЗаменить(Ответ,"%","");
		Ответ = СтрЗаменить(Ответ,"^","");
		Ответ = СтрЗаменить(Ответ,":","");
		Ответ = СтрЗаменить(Ответ,"&","");
		Ответ = СтрЗаменить(Ответ,"?","");
		Ответ = СтрЗаменить(Ответ,"*","");
		Ответ = СтрЗаменить(Ответ,"(","");
		Ответ = СтрЗаменить(Ответ,")","");
		Ответ = СтрЗаменить(Ответ,"-","");
		Ответ = СтрЗаменить(Ответ,"_","");
		Ответ = СтрЗаменить(Ответ,"+","");
		Ответ = СтрЗаменить(Ответ,"=","");
		Ответ = СтрЗаменить(Ответ,"|","");
		Ответ = СтрЗаменить(Ответ,"\","");
		Ответ = СтрЗаменить(Ответ,"/","");
		Ответ = СтрЗаменить(Ответ,"{","");
		Ответ = СтрЗаменить(Ответ,"}","");
		Ответ = СтрЗаменить(Ответ,"[","");
		Ответ = СтрЗаменить(Ответ,"]","");
		Ответ = СтрЗаменить(Ответ,".","");
		Ответ = СтрЗаменить(Ответ,",","");

		Ответ = ХэшКодПолучить(ВРег(СокрЛП(Ответ)));
		Возврат (Ответ);
	КонецЕсли;

	Возврат ("");
КонецФункции

Функция ХэшКодПолучить(ИсходнаяСтрока) Экспорт

// Выполним кодирование по алгоритму MD5
//-------------------------------------------------------------------------------------------------
	Если (ЗначениеЗаполнено(ИсходнаяСтрока)) Тогда
		Попытка
			ХешОбъект = Новый ХешированиеДанных(ХешФункция.MD5);
			ХешОбъект.Добавить(СокрЛП(ИсходнаяСтрока));
			Ответ = СокрЛП(СтрЗаменить(ХешОбъект.ХешСумма," ",""));

			Возврат (Ответ);
		Исключение
		КонецПопытки;
	КонецЕсли;

	Возврат ("");
КонецФункции


//<Кошелев >
//Получить из исходной строки новую, не содержащую спецсимволов, приведенную к нижнему регистру, 
Функция МодифицироватьСтроку(ИсходнаяСтрока) Экспорт
	ЗначениеПоУмолчанию = "";
	
	Если ТипЗнч(ИсходнаяСтрока)<> Тип("Строка") Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Если СтрДлина(ИсходнаяСтрока) = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;

	МодифицированнаяСтрока = НРЕГ(СокрЛП(ИсходнаяСтрока));
	
	МассивСпецСимволов = Новый Массив();
	МассивСпецСимволов.Добавить(" ");
	МассивСпецСимволов.Добавить(",");
	МассивСпецСимволов.Добавить(Символы.НПП);
	МассивСпецСимволов.Добавить(Символы.ВК);
	МассивСпецСимволов.Добавить(Символы.Таб);
	
	Для Каждого Эл Из МассивСпецСимволов Цикл
		МодифицированнаяСтрока=СтрЗаменить(МодифицированнаяСтрока, Эл, "");	
	КонецЦикла;
	
	 Возврат МодифицированнаяСтрока
	 
КонецФункции //</Кошелев>

//*************************************************************************************************
// Функции для работы с датами
//*************************************************************************************************

Функция ДеньНеделиПрописью(Дата,Сокращенный = Ложь) Экспорт

// Функция возвращает строку с наименованием дня недели от переданной Даты
//-------------------------------------------------------------------------------------------------
	Если (ТипЗнч(Дата) = Тип("Дата")) Тогда
		ДниНедели = ?(Сокращенный,"Пн,Вт,Ср,Чт,Пт,Сб,Вс","Понедельник,Вторник,Среда,Четверг,Пятница,Суббота,Воскресенье");
		Возврат (СловоПолучить(ДниНедели,ДеньНедели(Дата),","));
	КонецЕсли;

	Возврат ("");
КонецФункции


//*************************************************************************************************
// Функции для получения информации о значении
//*************************************************************************************************

Функция ЭтоДокумент(Элемент) Экспорт

// Функция возвращает Истину если переданный элемент является ссылкой или объектом "Документ"
//-------------------------------------------------------------------------------------------------
	Попытка
		Если (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Элемент.Ссылка))) Тогда
			Возврат Истина;
		КонецЕсли;
	Исключение
	КонецПопытки;

	Возврат Ложь;
КонецФункции

Функция ЭтоСправочник(Элемент) Экспорт

// Функция возвращает Истину если переданный элемент является ссылкой или объектом "Справочник"
//-------------------------------------------------------------------------------------------------
	Попытка
		Если (Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Элемент.Ссылка))) Тогда
			Возврат Истина;
		КонецЕсли;
	Исключение
	КонецПопытки;

	Возврат Ложь;
КонецФункции

Функция ЭтоТолькоЦифры(ИсходнаяСтрока) Экспорт

// Функция возвращает Истину если переданная ИсходнаяСтрока содержит только цифры
//-------------------------------------------------------------------------------------------------
	Доступно = ЗначениеЗаполнено(ИсходнаяСтрока);
	Доступно = Доступно И (ТипЗнч(ИсходнаяСтрока) = Тип("Строка"));

	Если (Доступно = Ложь) Тогда
		Возврат Ложь;
	КонецЕсли;

// Проверим все символы исходной строки на принадлежность к числовым символам
//-------------------------------------------------------------------------------------------------
	Для ТекПозиция = 1 По СтрДлина(ИсходнаяСтрока) Цикл
		Если (Найти("1234567890",Сред(ИсходнаяСтрока,ТекПозиция,1)) = 0) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;
КонецФункции

//*************************************************************************************************
// Функции для работы с номерами телефонов
//*************************************************************************************************

Функция ТелефонВнешнийНормализовать(НомерТелефона,КодГорода = Неопределено) Экспорт

// Функция возвращает номер телефона в 10-ти значном формате (без международного и междугородного
// префиксов "7" или "8". Если длина переданного номера телефона меньше 10 знаков, то выполняется
// попытка дополнить его переданным кодом города. Если длина переданного номера больше 10 знаков,
// то возвращается сам переданный номер без изменений
//-------------------------------------------------------------------------------------------------
	Доступно = ЗначениеЗаполнено(НомерТелефона);
	Доступно = Доступно И (ТипЗнч(НомерТелефона) = Тип("Строка"));

	Если (Доступно = Ложь) Тогда
		Возврат ("Anonimous");
	КонецЕсли;

// Уберем из НомераТелефона все спецсимволы, где символ(34) - кавычки
//-------------------------------------------------------------------------------------------------
	Телефон = СтрЗаменить(НомерТелефона," ","");
	Телефон = СтрЗаменить(Телефон,"+","");
	Телефон = СтрЗаменить(Телефон,"-","");
	Телефон = СтрЗаменить(Телефон,"(","");
	Телефон = СтрЗаменить(Телефон,")","");
	Телефон = СтрЗаменить(Телефон, Символ(34), "");
	Телефон = ВРег(СокрЛП(Телефон));
	ДлинаНомера = СтрДлина(Телефон);

// Если переданный номер телефона равен "1111", значит номер абонента скрыт
//-------------------------------------------------------------------------------------------------
	Доступно = (Телефон = "111");
	Доступно = Доступно ИЛИ (Телефон = "1111");
	Доступно = Доступно ИЛИ (Телефон = "11111");

	Если (Доступно = Истина) Тогда
		Возврат ("Anonimous");
	КонецЕсли;

// Если переданный номер телефона имеет формат "8800" или "8804" или "8808" и его длина 11 знаков,
// то такой номер не подлежит преобразованию и возвращается в исходном виде
//-------------------------------------------------------------------------------------------------
	Доступно = (Лев(Телефон,4) = "8800");
	Доступно = Доступно ИЛИ (Лев(Телефон,4) = "8804");
	Доступно = Доступно ИЛИ (Лев(Телефон,4) = "8808");
	Доступно = Доступно И (ДлинаНомера = 11);

	Если (Доступно = Истина) Тогда
		Возврат (Телефон);
	КонецЕсли;

// Если в функцию передан код города, то выясним необходимость в его использовании
//-------------------------------------------------------------------------------------------------
	Доступно = (ДлинаНомера < 10);
	Доступно = Доступно И ЗначениеЗаполнено(КодГорода);
	Доступно = Доступно И (ТипЗнч(КодГорода) = Тип("Строка"));

	Если (Доступно = Истина) Тогда
		Префикс = ВРег(СокрЛП(КодГорода));
		ДлинаПрефикса = СтрДлина(Префикс);

		Если ((ДлинаНомера + ДлинаПрефикса) = 10) Тогда
			Телефон = ВРег(СокрЛП(Префикс) + СокрЛП(Телефон));
			ДлинаНомера = СтрДлина(Телефон);
		Иначе
			Возврат (Телефон);
		КонецЕсли;
	КонецЕсли;

// Уберем из полученного номера телефона все лишние междунарожные префиксы
// Таким образом, если номер телефона имеет Российский формат, то он примет 10-ти значный вид
//-------------------------------------------------------------------------------------------------
	Доступно = ((ДлинаНомера = 14) И (Лев(Телефон,3) = "810"));
	Доступно = Доступно ИЛИ (ДлинаНомера = 12) И (Лев(Телефон,2) = "87");
	Доступно = Доступно ИЛИ (ДлинаНомера = 11) И (Лев(Телефон,1) = "8");
	Доступно = Доступно ИЛИ (ДлинаНомера = 11) И (Лев(Телефон,1) = "7");
	Телефон = ?(Доступно = Истина,Прав(Телефон,10),Телефон);

// Если после всех преобразований длина номера телефона больше 10 знаков, значит этот номер
// имеет международный формат. Вернем его в том виде в каком он был передан в функцию
//-------------------------------------------------------------------------------------------------
	Телефон = ?(СтрДлина(СокрЛП(Телефон)) > 10,НомерТелефона,Телефон);
	Возврат (ВРег(СокрЛП(Телефон)));
КонецФункции

Функция РегионПолучитьПоНомеруТелефона(Знач НомерТелефона) Экспорт

// Функция по переданному номеру телефона пытается получить ссылку на элемент справочника "Страны"
// Поиск элементов выполняется только в иерархии страны "Россия". Если элемент найден, то
// возвращается ссылка на него. В противном случае возвращается пустая ссылка на справочник Страны
//-------------------------------------------------------------------------------------------------
	НомерТелефона = ТелефонВнешнийНормализовать(НомерТелефона);
	Доступно = ЭтоТолькоЦифры(НомерТелефона) И (СтрДлина(НомерТелефона) = 10);
	Ответ = Справочники.Страны.ПустаяСсылка();

	Если (Доступно = Истина) Тогда
		ТекстЗапроса = "
		|SELECT	TOP 1 Region AS Регион
		|FROM	ВнешнийИсточникДанных.AsteriskNnov.Таблица.РегДиапазоны
		|WHERE	(&НомерТелефона BETWEEN From_Num AND To_Num) И (Region <> """")";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("НомерТелефона",НомерТелефона);
		Результат = Запрос.Выполнить().Выбрать();

		Если (Результат.Следующий()) Тогда
			СпрСсылка = Справочники.Страны.НайтиПоКоду(ВРег(СокрЛП(Результат.Регион)));
			Ответ = ?(ЗначениеЗаполнено(СпрСсылка),СпрСсылка,Ответ);
		КонецЕсли;
	КонецЕсли;

	Возврат (Ответ);
КонецФункции

Функция ТелефонДляВызоваПолучить(НомерТелефона) Экспорт

// Функция подготавливает переданный номер телефона для выполнения вызова (для набора)
// В случае успеха возвращает строку с номером телефона. Иначе - возвращает пустую строку
//-------------------------------------------------------------------------------------------------
	Доступно = (ТипЗнч(НомерТелефона) = Тип("Строка"));
	Доступно = Доступно И ЗначениеЗаполнено(НомерТелефона);

// Проверим правильность введенного номера
//-------------------------------------------------------------------------------------------------
	Если (Доступно = Истина) Тогда
		Ответ = СокрЛП(СтрЗаменить(НомерТелефона," ",""));
		Доступно = ЗначениеЗаполнено(Ответ) И (ЭтоТолькоЦифры(Ответ));

// Если введенный номер содержит 10 символов, то добавим префикс выхода на межгород - "8"
//-------------------------------------------------------------------------------------------------
		Если (Доступно = Истина) Тогда
			Ответ = ?(СтрДлина(Ответ) = 10,"8" + СокрЛП(Ответ),Ответ);

			Доступно = (СтрДлина(Ответ) = 3);
			Доступно = Доступно ИЛИ (СтрДлина(Ответ) = 4);
			Доступно = Доступно ИЛИ (СтрДлина(Ответ) = 6);
			Доступно = Доступно ИЛИ (СтрДлина(Ответ) = 7);
			Доступно = Доступно ИЛИ (СтрДлина(Ответ) = 11);

			Если (Доступно = Истина) Тогда
				Возврат (СокрЛП(Ответ));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат ("");
КонецФункции

Функция ТелефонЭтоМобильный(НомерТелефона) Экспорт

// Функция возвращает Истину если переданный НомерТелефона является мобильным
//-------------------------------------------------------------------------------------------------
	Доступно = (ТипЗнч(НомерТелефона) = Тип("Строка"));
	Доступно = Доступно И (СтрДлина(СокрЛП(НомерТелефона)) = 10);
	Доступно = Доступно И (ЭтоТолькоЦифры(НомерТелефона) = Истина);
	Доступно = Доступно И (Лев(СокрЛП(НомерТелефона),1) = "9");

	Возврат (Доступно);
КонецФункции

//-------------------------------------------------------------------------------------------------

Функция ТелВнутреннийПолучитьСсылку(СтрокаИлиСсылка) Экспорт

// Функция возвращает ссылку на элемент справочника "ТелВнутренние"
// Поиск выполняется только по реквизиту "Код". Если элемент не найден - возвращается Неопределено
//-------------------------------------------------------------------------------------------------
	ЭтоСсылка = (ТипЗнч(СтрокаИлиСсылка) = Тип("СправочникСсылка.ТелВнутренние"));
	ЭтоСсылка = ЭтоСсылка И ЗначениеЗаполнено(СтрокаИлиСсылка);
	Ответ = ?(ЭтоСсылка,СтрокаИлиСсылка,Неопределено);

	Если (Ответ = Неопределено) Тогда
		Доступно = (ТипЗнч(СтрокаИлиСсылка) = Тип("Строка"));
		Доступно = Доступно И ЗначениеЗаполнено(СтрокаИлиСсылка);

		Если (Доступно = Истина) Тогда
			СпрСсылка = Справочники.ТелВнутренние.НайтиПоКоду(СокрЛП(СтрокаИлиСсылка));
			Ответ = ?(ЗначениеЗаполнено(СпрСсылка),СпрСсылка,Ответ);
		КонецЕсли;
	КонецЕсли;

	Возврат (Ответ);
КонецФункции

Функция ТелМобильныйПолучитьСсылку(СтрокаИлиСсылка) Экспорт

// Функция возвращает ссылку на элемент справочника "ТелМобильные"
// Поиск выполняется только по реквизиту "Код". Если элемент не найден - возвращается Неопределено
//-------------------------------------------------------------------------------------------------
	ЭтоСсылка = (ТипЗнч(СтрокаИлиСсылка) = Тип("СправочникСсылка.ТелМобильные"));
	ЭтоСсылка = ЭтоСсылка И ЗначениеЗаполнено(СтрокаИлиСсылка);
	Ответ = ?(ЭтоСсылка,СтрокаИлиСсылка,Неопределено);

	Если (Ответ = Неопределено) Тогда
		Доступно = (ТипЗнч(СтрокаИлиСсылка) = Тип("Строка"));
		Доступно = Доступно И ЗначениеЗаполнено(СтрокаИлиСсылка);
		Доступно = Доступно И (СтрДлина(СокрЛП(СтрокаИлиСсылка)) >= 10);

		Если (Доступно = Истина) Тогда
			ИскомаяСтрока = СокрЛП(Прав(СокрЛП(СтрокаИлиСсылка),10));
			СпрСсылка = Справочники.ТелМобильные.НайтиПоКоду(ИскомаяСтрока);
			Ответ = ?(ЗначениеЗаполнено(СпрСсылка),СпрСсылка,Ответ);
		КонецЕсли;
	КонецЕсли;

	Возврат (Ответ);
КонецФункции

Функция ТелОчередьПолучитьСсылку(СтрокаИлиСсылка) Экспорт

// Функция возвращает ссылку на элемент справочника "ТелОчереди"
// Поиск выполняется по реквизитам "Код" и "Наименование"
// Если элемент не найден - возвращается Неопределено
//-------------------------------------------------------------------------------------------------
	ЭтоСсылка = (ТипЗнч(СтрокаИлиСсылка) = Тип("СправочникСсылка.ТелОчереди"));
	ЭтоСсылка = ЭтоСсылка И ЗначениеЗаполнено(СтрокаИлиСсылка);
	Ответ = ?(ЭтоСсылка,СтрокаИлиСсылка,Неопределено);

	Если (Ответ = Неопределено) Тогда
		Доступно = (ТипЗнч(СтрокаИлиСсылка) = Тип("Строка"));
		Доступно = Доступно И ЗначениеЗаполнено(СтрокаИлиСсылка);

		Если (Доступно = Истина) Тогда
			ТекстЗапроса = "
			|SELECT	TOP 1 Ссылка
			|FROM	Справочник.ТелОчереди
			|WHERE	(Код = &СтрокаИлиСсылка) ИЛИ (Наименование = &СтрокаИлиСсылка)";

			Запрос = Новый Запрос;
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("СтрокаИлиСсылка",ВРег(СокрЛП(СтрокаИлиСсылка)));
			Результат = Запрос.Выполнить().Выбрать();

			Если (Результат.Следующий()) Тогда
				Ответ = Результат.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат (Ответ);
КонецФункции

Функция ТелВнешнийПолучитьСсылку(СтрокаИлиСсылка) Экспорт

// Функция возвращает ссылку на элемент справочника "ТелВнешние"
// Поиск выполняется по табличной части "Варианты"
// Если элемент не найден - возвращается Неопределено
//-------------------------------------------------------------------------------------------------
	ЭтоСсылка = (ТипЗнч(СтрокаИлиСсылка) = Тип("СправочникСсылка.ТелВнешние"));
	ЭтоСсылка = ЭтоСсылка И ЗначениеЗаполнено(СтрокаИлиСсылка);
	Ответ = ?(ЭтоСсылка,СтрокаИлиСсылка,Неопределено);

	Если (Ответ = Неопределено) Тогда
		Доступно = (ТипЗнч(СтрокаИлиСсылка) = Тип("Строка"));
		Доступно = Доступно И ЗначениеЗаполнено(СтрокаИлиСсылка);

		Если (Доступно = Истина) Тогда
			ТекстЗапроса = "
			|SELECT	TOP 1 Ссылка
			|FROM	Справочник.ТелВнешние.Варианты
			|WHERE	(Код = &СтрокаИлиСсылка)";

			Запрос = Новый Запрос;
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("СтрокаИлиСсылка",ТелефонВнешнийНормализовать(СтрокаИлиСсылка));
			Результат = Запрос.Выполнить().Выбрать();

			Если (Результат.Следующий()) Тогда
				Ответ = Результат.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат (Ответ);
КонецФункции

Функция ТелПолучитьСсылку(СтрокаИлиСсылка) Экспорт

// Функция возвращает ссылку на элемент одного из справочников телефонии
// Если элемент справочника не найден, то возвращается Неопределенность
//-------------------------------------------------------------------------------------------------
	Ответ = ТелВнутреннийПолучитьСсылку(СтрокаИлиСсылка);
	Ответ = ?(ЗначениеЗаполнено(Ответ),Ответ,ТелМобильныйПолучитьСсылку(СтрокаИлиСсылка));
	Ответ = ?(ЗначениеЗаполнено(Ответ),Ответ,ТелОчередьПолучитьСсылку(СтрокаИлиСсылка));
	Ответ = ?(ЗначениеЗаполнено(Ответ),Ответ,ТелВнешнийПолучитьСсылку(СтрокаИлиСсылка));

	Возврат (Ответ);
КонецФункции
