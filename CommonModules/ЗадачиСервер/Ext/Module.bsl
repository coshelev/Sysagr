Функция ЗакройНетПерезвона() Экспорт
	// Вызывается регламентным заданием для закрытия старых задач, т.е. задач, с дата постановки которых прошло трое суток
	
	ЧислоСутокНазад = 3;
	ДатаПостановки = НачалоДня(ТекущаяДата()) - 24*60*60*ЧислоСутокНазад;
	РегистрыСведений.ЗадачиОбратныйЗвонок.ЗакройНетПерезвона(ДатаПостановки);
	
КонецФункции

Функция ОбработайЗаявкуТелНомер_0000000000(Телефон, Site, Сигнатура) Экспорт
	//Функция для создания задачи по интернет-заявке, в которой указан номер телефона "0000000000",
	//обрабатываемой особым образом. Интернет-пользователь не оставляет на сайте номер телефона,
	//а только эл. почту. Такие заявки передаются в Агрегатор как будто поступившие с номера "0000000000"  
	
	Данные = "Телефон = "+Телефон+" ;Site = "+Site+"; Сигнатура = "+Сигнатура; 
	
	Доступно = 		ТипЗнч(Телефон)	= Тип("Строка")
				И	ТипЗнч(Site) 	= Тип("Строка")
				И ТипЗнч(Сигнатура) = Тип("Строка")
				И Телефон			= "0000000000"
				И СтрДлина(Сигнатура)	> 3;
	Если Не Доступно Тогда
		Возврат "Ошибка";
	КонецЕсли;
	
	ТекДата = ТекущаяДата();
	
	//Ограничим, из-за опасения спама количество задач за сутки как 60 заявок * 24 часа  = 1440 заявок/сутки
	//-------------------------------------------------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(1) КАК Количество
	|ИЗ
	|	РегистрСведений.ЗадачиИнтернетЗаявки КАК ИнтернетЗаявки
	|ГДЕ
	|	ИнтернетЗаявки.Телефон = &Телефон
	|	И НАЧАЛОПЕРИОДА(ИнтернетЗаявки.ДатаПостановки, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И ИнтернетЗаявки.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1440";
	Запрос.УстановитьПараметр("Телефон", Телефон);
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если Не РезультатЗапроса.Пустой() Тогда
		Комментарий = "error: too many queries to create task for this phone number";
		ЗаписьЖурналаРегистрации("ОбработайЗаявкуТелНомер_0000000000", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);
		Возврат Комментарий;
	КонецЕсли;
	
	//Найди в свойствах интернет-заявки адрес эл. почты
	//--------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИнтернетЗаявкиСвойства.Значение.Наименование КАК ЗначениеСсылка
	|ИЗ
	|	РегистрСведений.ИнтернетЗаявкиСвойства КАК ИнтернетЗаявкиСвойства
	|ГДЕ
	|	ИнтернетЗаявкиСвойства.Сигнатура = &Сигнатура
	|	И ИнтернетЗаявкиСвойства.Свойство.Наименование = &ИмяСвойства
	|	И ИнтернетЗаявкиСвойства.Значение.Наименование ПОДОБНО &ЗначениеСвойства";
	
	Запрос.УстановитьПараметр("Сигнатура", 			Сигнатура);
	Запрос.УстановитьПараметр("ИмяСвойства",		"email" );
	Запрос.УстановитьПараметр("ЗначениеСвойства", 	"%@%");
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Комментарий = "error: email not found";
		ЗаписьЖурналаРегистрации("ОбработайЗаявкуТелНомер_0000000000", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);
		Возврат Комментарий;
	КонецЕсли;
	
	//Используем в качестве идентификатора заявки не телефон "0000000000", а строку "email"+часть сигнатуры
	//-----------------------------------------------------------------------------------------------------
	Ид = "email__" + Лев(Сигнатура,8);
		
	Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Ид, , , Site, Комментарий, ТекДата, Сигнатура);
	Возврат "accepted";
КонецФункции

Функция СоздайЗадачуКакЗаявкуИлиКакАвтозвонок(Телефон, Site, Сигнатура, ЗакройЗадачу = Ложь) Экспорт
	
	// Телефон  	- 	телефон абонента, оставившего интернет-заявку
	// Site			- 	имя сайта
	// Сигнатура  	- 	сигнатура интернет заявки 
	// ЗакройЗадачу - 	созданная задача сразу же автоматически закрывается (т.е. Агрегатор используется только для сбора статистики),
	//					используется для заявок с сайта luicar.ru, если свойство form_type = "Регистрация"
	
	Данные = "Телефон = "+Телефон+" ;Site = "+Site+"; Сигнатура = "+Сигнатура; 
	
	ТекДата = ТекущаяДата();
	
	//Временно заблокировать создание задач по сайту http://new.luidor-expert.ru
	Если Site = "http://new.luidor-expert.ru" Тогда
		Возврат "ok";
    КонецЕсли;
	
	Если Телефон = "0000000000" Тогда
		Возврат ОбработайЗаявкуТелНомер_0000000000(Телефон, Site, Сигнатура);
	КонецЕсли;
	
	Если СтрНайти(Site, "luicar.ru") И ЗакройЗадачу = Истина Тогда
		Комментарий = "Закрыта автоматом, сайт luicar.ru";
		Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, ТекДата, "0000", Site, Комментарий, ТекДата, Сигнатура);
		Рез = ?(Выполнено = Истина, "ок", "error 013");
		Возврат Рез;
	КонецЕсли;
	
	Если СтрНайти(Site, "chat") И ЗакройЗадачу = Истина Тогда
		Комментарий = "Закрыта автоматом, chat";
		Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, ТекДата, "0000", Site, Комментарий, ТекДата, Сигнатура);
		Рез = ?(Выполнено = Истина, "ок", "error 013");
		Возврат Рез;
	КонецЕсли;
	
	Если (Телефон="00000000000") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1 Т.Значение КАК Значение ИЗ РегистрСведений.ИнтернетЗаявкиСвойства КАК Т ГДЕ Т.Сигнатура = &Сигнатура И Т.Свойство.Наименование = ""form_type""";	
		Запрос.УстановитьПараметр("Сигнатура", Сигнатура);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если (СокрЛП(Выборка.Значение)="Получать спецпредложения") Тогда
				Комментарий = "Автозакрытие: лид сохранен";
				Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, ТекДата, "0000", Site, Комментарий, ТекДата, Сигнатура);
				Рез = ?(Выполнено = Истина, "ок", "error 013");
				Возврат Рез;
			КонецЕсли; 
		КонецЦикла;   
	КонецЕсли;
	
	Если (Телефон="11111111111") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1 Т.Значение КАК Значение ИЗ РегистрСведений.ИнтернетЗаявкиСвойства КАК Т ГДЕ Т.Сигнатура = &Сигнатура И Т.Свойство.Наименование = ""name""";	
		Запрос.УстановитьПараметр("Сигнатура", Сигнатура);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если (СокрЛП(Выборка.Значение)="тест") Тогда
				Комментарий = "Заявки с номера 11111111111 и свойством name = тест закрываем без создания задачи";
				Рез = "error 014";
				Возврат Рез;
			КонецЕсли; 
		КонецЦикла;   
	КонецЕсли;

	// Найди последнюю предыдущую заявку за текущие сутки, если она была не позднее, чем за 1 час до текущей
	// при этом не важно открытая или закрытая эта задача
	// С 27.11.2018 ищем предыдующую заявку не вообще, а в разрезе сайтов, т.е. если заявки с разных сайтов в
	// пределах нормы времени, то две задачи будут созданы
	//---------------------------------------------------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РАЗНОСТЬДАТ(Т.ДатаПостановки, &ТекДата, ЧАС) КАК РазницаЧасов
	|ИЗ
	|	РегистрСведений.ЗадачиИнтернетЗаявки КАК Т
	|ГДЕ
	|	Т.Телефон = &Телефон
	|	И Т.ДатаПостановки <> &ТекДата
	|	И Т.ДатаПостановки >= НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И РАЗНОСТЬДАТ(Т.ДатаПостановки, &ТекДата, СЕКУНДА) < 25
	|	И Т.Инициатор = &Инициатор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.ДатаПостановки УБЫВ";
	
	Запрос.УстановитьПараметр("Телефон",	Телефон);	
	Запрос.УстановитьПараметр("ТекДата",	ТекДата);
	Запрос.УстановитьПараметр("Инициатор",	Site);
	Рез = Запрос.Выполнить();
	
	//Если есть другие заявки в течении 5 минут, тогда новую не создаем
	//----------------------------------------------------------------------
	Если Не Рез.Пустой() Тогда
		Комментарий = "error: too many queries to create task for this phone number";
		ЗаписьЖурналаРегистрации("СоздайЗадачуКакЗаявкуИлиКакАвтозвонок", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);
		Возврат Комментарий;			
	КонецЕсли;
	
	// Заявки, имеющие свойство form_type = "Оценка ремонта по фото" обрабатываем
	// особым образом: создаем задачу сразу закрытой, т.е. по сути регистрируем
	// задачу для отчетов, а контакт-центр эти заявки не обрабатывает
	//-------------------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ 	Сигнатура, Свойство, Значение
	|ИЗ			РегистрСведений.ИнтернетЗаявкиСвойства КАК Т
	|ГДЕ 		Сигнатура = &Сигнатура И Свойство.Наименование = &Свойство И Значение.Наименование = &Значение";
	Запрос.УстановитьПараметр("Сигнатура", 	Сигнатура);
	Запрос.УстановитьПараметр("Свойство",	"form_type");
	Запрос.УстановитьПараметр("Значение",	"Оценка ремонта по фото");
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если Не РезультатЗапроса.Пустой() Тогда
		ДатаЗакрытия	= ТекДата;
		Исполнитель		=  "5519"; // Телефон очереди контакт-Центра Луидор-Ларина
		Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, ДатаЗакрытия , Исполнитель , Site, "Оценка ремонта по фото", ТекДата, Сигнатура, Ложь);		
		Возврат "accepted";
	КонецЕсли;
	
	// Заявки, имеющие свойство form_type = "Получите скидку 10% по смс" обрабатываем
	// особым образом: создаем задачу сразу закрытой, т.е. по сути регистрируем
	// задачу для отчетов, а контакт-центр эти заявки не обрабатывает
	//-------------------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 	"ВЫБРАТЬ Сигнатура, Свойство, Значение ИЗ РегистрСведений.ИнтернетЗаявкиСвойства ГДЕ Сигнатура = &Сигнатура И Свойство.Наименование = &Свойство И Значение.Наименование = &Значение";
	Запрос.УстановитьПараметр("Сигнатура", 	Сигнатура);
	Запрос.УстановитьПараметр("Свойство",	"form_type");
	Запрос.УстановитьПараметр("Значение",	"Получите скидку 10% по смс");
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если Не РезультатЗапроса.Пустой() Тогда
		ДатаЗакрытия	= ТекДата;
		Исполнитель		=  "5519"; // Телефон очереди контакт-Центра Луидор-Ларина
		Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, ДатаЗакрытия , Исполнитель , Site, "Получите скидку 10% по смс", ТекДата, Сигнатура, Ложь);		
		Возврат "accepted";
	КонецЕсли;
	
	// Определи границы времени, когда интернет-заявка должна быть обработата как автозвонок
	//---------------------------------------------------------------------------------------		
	ВремяНачалаАвтозвонков		=	6*60*60; 	//	Значение по умолчанию, 06:00:00 
	ВремяКонцаАвтозвонков		=	21*60*60;   //	Значение п умолчанию, 21:00:00	
	
	_Site = СокрЛП(Site);
	Если _Site <> "" Тогда           
		
		РежимОбработкиЗаявкиУстановленПоОтклонению = Ложь;
		Для Сч=1 По 1 Цикл
			//Фиктивный цикл ради Прервать
			//---------------------------
			Запрос = Новый Запрос("ВЫБРАТЬ НачВремя, КонВремя ИЗ РегистрСведений.ГрафикиОтклонения ГДЕ Объект.Наименование ПОДОБНО &Наименование И НачалоПериода(Период, ДЕНЬ)= НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)");
			Если _Site = "uaz-luidor.ru" Тогда
				//Есть сайты uaz-luidor.ru, kazan.uaz-luidor.ru, ufa.uaz-luidor.ru. Оператор "ПОДОБНО" для uaz-luidor.ru возвращает график для kazan.uaz-luidor.ru,
				//что является ошибкой. Поэтому заменим "ПОДОБНО" на "="
				//-------------------------------------------------------
				Запрос.Текст = СтрЗаменить(Запрос.Текст,	"ПОДОБНО", "=");
				Запрос.УстановитьПараметр("Наименование", 	_Site);
			КонецЕсли;
			Запрос.УстановитьПараметр("Наименование", 	"%"+ _Site + "%");
			Запрос.УстановитьПараметр("Дата",			ТекДата);
			
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				Прервать;
			КонецЕсли;     
			
			ТЗ = Рез.Выгрузить();
			
			ВремяНачала = ТЗ[0][0] - '00010101';
			ВремяКонца 	= ТЗ[0][1] - '00010101';
			
			ВремяНачалаАвтозвонков	= ?(ВремяНачала <> 0, ВремяНачала,	ВремяНачалаАвтозвонков);
			ВремяКонцаАвтозвонков	= ?(ВремяКонца <>  0, ВремяКонца,	ВремяКонцаАвтозвонков);			
			
			РежимОбработкиЗаявкиУстановленПоОтклонению = Истина;	
		КонецЦикла;
		
		Для Сч=1 По 1 Цикл
			//Фиктивный цикл ради Прервать
			//---------------------------
			
			Если РежимОбработкиЗаявкиУстановленПоОтклонению = Истина Тогда
				Прервать;
			КонецЕсли;
			
			Запрос = Новый Запрос();
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВЫБОР
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) >= 1 И ДЕНЬНЕДЕЛИ(&Дата) <= 5 ТОГДА Т.ГрафикРаботы.БудНач
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) = 6 ТОГДА Т.ГрафикРаботы.СубНач
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) = 7 ТОГДА Т.ГрафикРаботы.ВскНач
			|	КОНЕЦ КАК ВремяНачала,
			|	ВЫБОР
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) >= 1 И ДЕНЬНЕДЕЛИ(&Дата) <= 5 ТОГДА Т.ГрафикРаботы.БудКон
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) = 6 ТОГДА Т.ГрафикРаботы.СубКон
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) = 7 ТОГДА Т.ГрафикРаботы.ВскКон
			|	КОНЕЦ КАК ВремяКонца,
			|	ВЫБОР
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) >= 1 И ДЕНЬНЕДЕЛИ(&Дата) <= 5 ТОГДА Т.ГрафикРаботы.БудРежим
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) = 6 ТОГДА Т.ГрафикРаботы.СубРежим
			|		КОГДА ДЕНЬНЕДЕЛИ(&Дата) = 7 ТОГДА Т.ГрафикРаботы.ВскРежим
			|	КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.РежимРаботыОбъекта.Рабочий), ЗНАЧЕНИЕ(Перечисление.РежимРаботыОбъекта.Дежурный)) КАК РабочийРежим
			|ИЗ
			|	Справочник.Сайты КАК Т
			|ГДЕ
			|	Т.Наименование ПОДОБНО &Наименование";
			Если _Site = "uaz-luidor.ru" Тогда
				//Есть сайты uaz-luidor.ru, kazan.uaz-luidor.ru, ufa.uaz-luidor.ru. Оператор "ПОДОБНО" для uaz-luidor.ru возвращает график для kazan.uaz-luidor.ru,
				//что является ошибкой. Поэтому заменим "ПОДОБНО" на "="
				//-------------------------------------------------------
				Запрос.Текст = СтрЗаменить(Запрос.Текст,	"ПОДОБНО", "=");
				Запрос.УстановитьПараметр("Наименование", 	_Site);
			КонецЕсли;
			Запрос.УстановитьПараметр("Наименование", 	"%"+ _Site + "%");
			Запрос.УстановитьПараметр("Дата",			ТекДата);
						
			Рез = Запрос.Выполнить(); 
			Если Рез.Пустой() Тогда
				Прервать;
			КонецЕсли;
				
			ТЗ = Рез.Выгрузить();
			
			ВремяНачала = ТЗ[0][0] - '00010101';
			ВремяКонца 	= ТЗ[0][1] - '00010101';
			
			ВремяНачалаАвтозвонков	= ?(ВремяНачала <> 0, ВремяНачала,	ВремяНачалаАвтозвонков);
			ВремяКонцаАвтозвонков	= ?(ВремяКонца <>  0, ВремяКонца,	ВремяКонцаАвтозвонков);		
			
			Если ТЗ[0][2] = Ложь Тогда
				ВремяНачалаАвтозвонков 	= 0;
				ВремяКонцаАвтозвонков	= 0;
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
	
	ВремяЗаявки = ТекДата - НачалоДня(ТекДата);
	
	// Создай задачу на автозвонок (ее признак - текст "АВТОЗВОНОК" в комментарии
	//------------------------------------------------------------------------------------
	Если ВремяКонцаАвтозвонков >= ВремяЗаявки И ВремяЗаявки >= ВремяНачалаАвтозвонков Тогда
		Комментарий = "АВТОЗВОНОК";
		Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, , , Site, Комментарий, ТекДата, Сигнатура, Истина);	
		ОтправитьИнтернетЗаявкуЭлПисьмом(Телефон, Site, Сигнатура);
	Иначе
		// Создай обычную задачу по интернет-заявке
		Комментарий = "";
		Выполнено = РегистрыСведений.ЗадачиИнтернетЗаявки.Добавить(Телефон, , , Site, Комментарий, ТекДата, Сигнатура);
		ОтправитьИнтернетЗаявкуЭлПисьмом(Телефон, Site, Сигнатура);
	КонецЕсли;
	Возврат "accepted";	
	
КонецФункции

Функция ОтправитьИнтернетЗаявкуЭлПисьмом(Телефон, Site, Сигнатура) Экспорт
	
	Рез = "ошибка";
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Телефон) = Тип("Строка");                           
	Доступно = Доступно И ТипЗнч(Site) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Телефон);
	Site = СокрЛП(Site);
	Доступно = Доступно И ЗначениеЗаполнено(Site);
	Если Не Доступно Тогда
		Возврат Рез;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Сайты.Комментарий КАК Комментарий
	|ИЗ
	|	Справочник.Сайты КАК Сайты
	|ГДЕ
	|	Сайты.Наименование = &Наименование
	|	И Сайты.Комментарий ПОДОБНО &Комментарий
	|	И Сайты.ДублироватьЗаявкиНаПочту = ИСТИНА";
	Запрос.УстановитьПараметр("Наименование", Site);
	Запрос.УстановитьПараметр("Комментарий", "%@%");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Рез;
	КонецЕсли;
	АдресаПочты = РезультатЗапроса.Выгрузить()[0][0];
	
	От 				= "info@luidor.ru";            
	Кому 			= АдресаПочты;
	Копия 			= "koshelevss@luidor.ru";                                        
	СкрытаяКопия	= "";
	Тема 			= "Перезвоните клиенту на номер: "+Телефон;
	Содержание		= Тема;
	ЭлПочта.ПисьмоОтправить(От, Кому, Копия, СкрытаяКопия, Тема, Содержание,,Истина, 25);

	Рез = "";
КонецФункции

Процедура РазблокируйЗаблокированнуюОткрытуюЗадачуИнтернетЗаявки() Экспорт
	// Вызывается регламентным заданием.
	// Снимает признак блокировки у задачи:
	//	- текущего дня
	//	- отрытой
	//	- заблокированной
	//	- по которой не было звонка
	//	- время пребывания в состоянии открытая заблокрированная превышает норму
	
	ТекДата = ТекущаяДата();
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Т.Телефон КАК Телефон
	|ИЗ
	|	РегистрСведений.ЗадачиИнтернетЗаявки КАК Т
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(Т.ДатаПостановки, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И Т.ДатаПервогоПерезвона = ДАТАВРЕМЯ(1, 1, 1)
	|	И Т.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|	И Т.Заблокирована = ИСТИНА
	|	И РАЗНОСТЬДАТ(Т.ДатаБлокировки, &ТекДата, МИНУТА) > &Норма";
	Запрос.УстановитьПараметр("ТекДата",	ТекДата);
	Запрос.УстановитьПараметр("Норма", 		2);
	РезультатЗапроса =Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("Заблокирована", 	ЛОЖЬ);
	Реквизиты.Вставить("ДатаБлокировки",	'00010101000000');
	Реквизиты.Вставить("Исполнитель",		"");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.ЗадачиИнтернетЗаявки.ИзмениРеквизиты(Выборка.Телефон, '00010101000000', Реквизиты);
	КонецЦикла;
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
КонецПроцедуры

Функция ЭтоИнтенетЗаявкаФормы_ЗаказатьВыезднуюПрезентацию(Сигнатура) Экспорт
	// Интернет-заявки со свойством form type =Заказать выездную презентацию (сигнатура тестовой заявки 2b68cfb2-2100-4c96-90f1-eee5a74d2d22),
	//нужно чтобы задача на перезвон по этим заявкам закрывалась автоматически, а сами заявки передавалась на почту менеджеру Прохорову Александру.
		
	ЗначениеПоУмолчанию = Ложь;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнтернетЗаявкиСвойства.Сигнатура КАК Сигнатура,
	|	ИнтернетЗаявкиСвойства.Свойство КАК Свойство,
	|	ИнтернетЗаявкиСвойства.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ИнтернетЗаявкиСвойства КАК ИнтернетЗаявкиСвойства
	|ГДЕ
	|	ИнтернетЗаявкиСвойства.Сигнатура = &Сигнатура";
	Запрос.УстановитьПараметр("Сигнатура", Сигнатура);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Содержание = "<p><b>Интернет-заявка на выездную презентацию</b></p>";
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Содержание = Содержание+"<p>"+Выборка.Свойство+": "+Выборка.Значение+"</p>"
	КонецЦикла;
	
	Парам = Новый Структура("ИнтернетЗаявкаВыезднаяПрезентацияПисьмоКому", ""); 
	Если РегистрыСведений.УчетнаяПолитика.Получи(Парам) = Истина Тогда
		Кому = "";
		Парам.Свойство("ИнтернетЗаявкаВыезднаяПрезентацияПисьмоКому", Кому);
	Иначе
	   	Кому = "ProhorovAA@luidor.ru";
		//Кому = "koshelevss@luidor.ru";  // для отладки
	КонецЕсли;
	Копия = "";
	СкрытаяКопия="";
	Тема = "Интернет-заявка на выездную презентацию";

	ЭлПочта.ПисьмоОтправить("info@luidor.ru", Кому, Копия, СкрытаяКопия, Тема, Содержание, "1С-Агрегатор", Истина, 25);  
	
	Возврат Истина;
КонецФункции

#Область ЗадачиОбратныйЗвонок_в_ОУ_ДляАвтозакрытия
Процедура ЗадачиОбратныйЗвонокДляАвтозакрытияВыполнитьРегламентом() Экспорт
	
	ДатаОкончания   = ТекущаяДата(); 
	ДатаНачала		= НачалоДня(НачалоДня(ДатаОкончания)-1);// - 5*24*60*60;
	ЗадачиОбратныйЗвонокДляАвтозакрытияВыполнить(ДатаНачала, ДатаОкончания)	
КонецПроцедуры

Процедура ЗадачиОбратныйЗвонокДляАвтозакрытияВыполнить(ДатаНачала = '00010101', ДатаОкончания='00010101', ИнициаторЗадачи = "") Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задача.Инициатор КАК ЗвонокСигнатура,
	|	Звонки.Дата КАК ЗвонокДата,
	|	Звонки.АбонентВнешний КАК ЗвонокАбонентВнешний
	|ИЗ
	|	РегистрСведений.ЗадачиОбратныйЗвонокДляАвтозакрытия КАК Задача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Звонки КАК Звонки
	|		ПО Задача.Инициатор = Звонки.Сигнатура
	|ГДЕ
	|	Задача.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВЫБОР
	|			КОГДА &ИнициаторЗадачи = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Задача.Инициатор = &ИнициаторЗадачи
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Задача.ДатаПостановки >= &ДатаНачала
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Задача.ДатаПостановки <= &ДатаОкончания
	|		КОНЕЦ";
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ИнициаторЗадачи",	ИнициаторЗадачи);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЗадачиАвтЗакр = РезультатЗапроса.Выбрать();
	Пока ЗадачиАвтЗакр.Следующий() Цикл
		
		//Получи имя очереди, на которой сорвался звонок
		ИмяОчереди = "";
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Оператор.Наименование КАК ИмяОчереди ИЗ РегистрСведений.ЗвонкиМаршруты ГДЕ Сигнатура = &Сигнатура И КодСобытия = ""B-TRANSFER"" УПОРЯДОЧИТЬ ПО Дата УБЫВ");
		Запрос.УстановитьПараметр("Сигнатура", ЗадачиАвтЗакр.ЗвонокСигнатура);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ИмяОчереди = РезультатЗапроса.Выгрузить()[0][0];
		КонецЕсли;
		Если ИмяОчереди = "" Тогда
			Продолжить;
		КонецЕсли;
		
		//Получи телефон любого активного агента очереди
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 membername ИЗ ВнешнийИсточникДанных.AsteriskNnov.Таблица.Агенты ГДЕ paused = 0 И queue_name = &queue_name");
		Запрос.УстановитьПараметр("queue_name", ИмяОчереди);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		АктивныйАгент = РезультатЗапроса.Выгрузить()[0][0];
		Успех = Звонки.УведомитьОПропущенном(ЗадачиАвтЗакр.ЗвонокСигнатура, ЗадачиАвтЗакр.ЗвонокДата, АктивныйАгент, ЗадачиАвтЗакр.ЗвонокАбонентВнешний);
		
		//Если уведомили о пропущенном - закроем задачу
		Если Не Успех Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаЗакрытия = ТекущаяДата();
		ЗадачаАвтЗакр = РегистрыСведений.ЗадачиОбратныйЗвонокДляАвтозакрытия.СоздатьМенеджерЗаписи();
		ЗадачаАвтЗакр.Инициатор = ЗадачиАвтЗакр.ЗвонокСигнатура;
		ЗадачаАвтЗакр.Прочитать();
		Если Не ЗадачаАвтЗакр.Выбран() Тогда
			Продолжить;
		КонецЕсли;
		ЗадачаАвтЗакр.ДатаЗакрытия = ДатаЗакрытия;
		ЗадачаАвтЗакр.Комментарий="Отправлено уведомление о пропущенном звонке "+ЗадачиАвтЗакр.ЗвонокСигнатура+ " на внутренний номер "+ АктивныйАгент;
		Попытка
			ЗадачаАвтЗакр.Записать();		
		Исключение
			ЗаписьЖурналаРегистрации("Закрытие задачи обработного звонка для автозакрытия", УровеньЖурналаРегистрации.Ошибка,, "Инициатор = "+ЗадачиАвтЗакр.ЗвонокСигнатура, ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
		//Закрой задачу обратного звонка
		ЗадачаОбрЗвонка = Новый Запрос("ВЫБРАТЬ Телефон, ЗвонокИнициатор ИЗ РегистрСведений.ЗадачиОбратныйЗвонок ГДЕ ЗвонокИнициатор = &ЗвонокИнициатор И ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)");
		Запрос.УстановитьПараметр("ЗвонокИнициатор", ЗадачиАвтЗакр.ЗвонокСигнатура);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		Зад = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
		Зад.Телефон = ЗадачиАвтЗакр.ЗвонокАбонентВнешний;
		Зад.ДатаЗакрытия = '00010101';
		Зад.Прочитать();
		Если Не Зад.Выбран() Тогда
			Продолжить;
		КонецЕсли;
		Зад.ДатаЗакрытия = ДатаЗакрытия;
		Зад.Комментарий = "Закрыта автоматом отправкой пропущенного звонка в ОУ";
		Попытка
			Зад.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("Ошибка закрытия задачи обратного звонка", УровеньЖурналаРегистрации.Ошибка,,
										"Задача.Телефон = "+ЗадачиАвтЗакр.ЗвонокАбонентВнешний + "; Задача.ЗвонокИнициатор = "+ ЗадачиАвтЗакр.ЗвонокСигнатура, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;
КонецПроцедуры

Процедура ЗадачиОбратныйЗвонокДляАвтозакрытияВыполнитьАсинхронно(ИнициаторЗадачи) Экспорт
	Перем ЗвонокИнициатор;
	ЗвонокИнициатор = СокрЛП(ИнициаторЗадачи);
	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(ИнициаторЗадачи) = Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(ЗвонокИнициатор);
	Если Не Доступно Тогда
		Возврат;
	КонецЕсли;
	Парам = Новый Массив();
	Парам.Добавить('00010101');
	Парам.Добавить('00010101');
	Парам.Добавить(ИнициаторЗадачи);
	ФоновыеЗадания.Выполнить("ЗадачиСервер.ЗадачиОбратныйЗвонокДляАвтозакрытияВыполнить", Парам, , "ЗадачиОбратныйЗвонокДляАвтозакрытияВыполнить" );
КонецПроцедуры
 #КонецОбласти
 
 Функция ЗакрытьАвтоматическиИсходящимПочтовымСообщением(Телефон, ТелефонСотрудникаОП, СигнатураПропущенногоЗвонка) Экспорт
		
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = Ложь;
	
	Доступно = ТипЗнч(Телефон) = Тип("Строка");
	Доступно = Доступно И СтрДлина(СокрЛП(Телефон))>=10;
	Доступно = Доступно И ТипЗнч(ТелефонСотрудникаОП) = Тип("Строка");
	Доступно = Доступно И СтрДлина(СокрЛП(ТелефонСотрудникаОП))=4;	
	
	Если Не Доступно Тогда
		Возврат "Попытка автозакрытия. Неудача. Ошибка в аргументах";
	КонецЕсли;
	
	Зап = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
	Зап.Телефон 			= Телефон;
	Зап.ДатаЗакрытия 	= '00010101000000'; 
	Зап.Прочитать();
	Если Не Зап.Выбран() Тогда
		Возврат "Попытка автозакрытия. Неудача. Открытая задача не найдена";
	КонецЕсли; 
	
	//Найди сотрудника по внутр.номеру и его адрес эл. почты
	//----------------------------------------------------------------------------------
	ТелСсылка = Справочники.ТелВнутренние.НайтиПоКоду(ТелефонСотрудникаОП);
	Если ТелСсылка = Справочники.ТелВнутренние.ПустаяСсылка() Тогда
		Возврат "Попытка автозакрытия. Неудача. Не найден внутр. телефон в справочнике";
	КонецЕсли;
	
	Сотрудник = Телефония.ВладелецПолучить(ТелСсылка); 
	Если Сотрудник = Неопределено Тогда
		Возврат "Попытка автозакрытия. Неудача. Не найден элемент предприятия";
	КонецЕсли;
	
	Если Сотрудник.ЭтоГруппа Тогда
		Возврат "Попытка автозакрытия. Неудача. Элемент предприятия является группой";
	КонецЕсли;
	
	Если Не Сотрудник.ОповещатьОПропущенных Тогда 
		Возврат "Попытка автозакрытия. Неудача. Для сотрудника не установлено разрешение оповещать о пропущенных";
	КонецЕсли;
	
	Кому = Сотрудник.АдресЭлектроннойПочты;
	Если Не СтрНайти(Кому, "@")>1 Тогда
		Возврат "Попытка автозакрытия. Неудача. Не определен адрес эл. почты сотрудника";
	КонецЕсли;
	
	//Найди руководителя сотрудника, его адрес эл. почты и внутр. телефон
	//------------------------------------------------------------------------------------	
	Руководитель = Сотрудник.Руководитель; 
	Если Руководитель = Справочники.Предприятие.ПустаяСсылка() Тогда
		Возврат "Попытка автозакрытия. Неудача. Не найден непосредственный руководитель";
	КонецЕсли;
	
	Копия = Руководитель.АдресЭлектроннойПочты;
	Если Не СтрНайти(Копия, "@")>1 Тогда
		Возврат "Попытка автозакрытия. Неудача. Не определен адрес эл. почты руководителя";
	КонецЕсли;
	 
	ТелефонРуководителя = РегистрыСведений.ОбъектыПривязка.ВнутреннийТелефонСотрудника(Руководитель);	
	Если ТелефонРуководителя = "" Тогда
		Возврат  "Попытка автозакрытия. Неудача. Не определен внутренний телефон руководителя";
	КонецЕсли;
	
	//Отправь письмо
	//---------------------------------------------------------------------------------------
	От 				=	"info@luidor.ru";
	СкрытаяКопия 	=	"";
	Тема 			=	"Перезвоните клиенту на номер: "+Телефон;
	Содержание 		=	"Перезвоните клиенту на номер: "+Телефон;
	Содержание = Содержание + Символы.ПС+Символы.ВК+"Сигнатура пропущенного звонка:" + СигнатураПропущенногоЗвонка;
	
	
	Отправлено = ЭлПочта.ПисьмоОтправить(От, Кому, Копия, СкрытаяКопия, Тема, Содержание); 
	
	Если Не Отправлено Тогда
		Данные = "Телефон = "+Телефон+"; ТелефонСотрудникаОП = "+ТелефонСотрудникаОП+"; От = "+От+"; Кому = "+Кому+"; Копия = "+Копия+"; Тема = "+Тема;
		Комментарий = "Ошибка отправки письма";
		ЗаписьЖурналаРегистрации("Ошибка создания уведомления (эл.письма) о задаче", УровеньЖурналаРегистрации.Ошибка, Данные, Комментарий);
		Возврат "Попытка автозакрытия. Неудача. Ошибка отправки почтового сообщения";
	КонецЕсли;

	//Если оказались здесь, значит почтовое сообщение успешно отправлено, переопределим исполнителя задачи
	//-------------------------------------------------------------------------------------------------------
	
	Зап.ДатаАктуальности = ТекущаяДата() + 600*6;	
	Зап.Тип = Перечисления.ТипЗадачи.Непринятый; //default value	
	
	Зап.Комментарий = Зап.Комментарий	+ "Создана эл.письмом."									+Символы.ПС+
							"От: "			+"Агрегатор ("+Зап.ИсполнительПлан+")"  			+Символы.ПС+
							"Кому: "		+ Кому+ " (внутр. тел "+ТелефонСотрудникаОП+")"		+Символы.ПС+
							"Копия: "     	+ Копия+" (внутр. тел"+ТелефонРуководителя+")"		+Символы.ПС+
							"Тема: "		+ Тема												+Символы.ПС+
							"Содержание:" 	+ Содержание										+Символы.ПС+
							"Задача преобразована попыткой автозакрытия первоначальной задачи" 	+Символы.ПС+
							"Первоначальный плановый исполнитель = "	+ Зап.ИсполнительПлан	+Символы.ПС+
							"Первоначальная дата постановки = "			+ Зап.ДатаПостановки	+Символы.ПС;
							
	Зап.ДатаПостановки 		= ТекущаяДата();
	Зап.Исполнитель 		= ТелСсылка;
	Зап.ИсполнительПлан 	= ТелСсылка;
	Зап.СоИсполнительПлан 	= ТелефонРуководителя;   
	
	//Закрой задачу
	//---------------
	Зап.ДатаЗакрытия = ТекущаяДата();
	
	Попытка
		Зап.Записать();
	Исключение
		Данные = "Телефон="+Зап.Телефон+" ;ДатаПостановки="+Зап.ДатаПостановки;
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("СоздатьЗадачу()", УровеньЖурналаРегистрации.Ошибка, Данные, Комментарий);
		Возврат "Попытка автозакрытия. Неудача. Ошибка записи задачи при смене исполнителя";
	КонецПопытки;
		
	Возврат "Попытка автозакрытия. Успех";

КонецФункции
