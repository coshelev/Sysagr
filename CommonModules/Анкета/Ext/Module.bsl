
Процедура Записать(Период, Телефон, ТаблицаВопросОтвет, Сигнатура="") Экспорт
	// Вызывается только ПриЗакрытии(). Записывает набор записей в регистр сведений АнкетыРасширенные
	
	Если СтрДлина(Телефон)=0 Тогда
		Возврат
	КонецЕсли;
	
	Если ТаблицаВопросОтвет.Количество()=0 Тогда
		Возврат
	КонецЕсли;
	
	ПустойИд = Справочники.ИдентификаторыСтрок.ПустаяСсылка();
	
	НЗ = РегистрыСведений.АнкетыРасширенные.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(Период);
	НЗ.Отбор.Телефон.Установить(Телефон);
	НЗ.Отбор.Сигнатура.Установить(Сигнатура);
	НЗ.Прочитать();
	
	//Запись ответов на вопросы  и самих вопросов анкеты. Вопросы маршрутизации записываются в момент выбора строки списка
	//----------------------------------------------------------------------------------------------------------------------
	Для Каждого СтрТЗ Из ТаблицаВопросОтвет Цикл
		
		//Не записывать не заполненные ответы
		//-----------------------------------
		Если Не ЗначениеЗаполнено(СтрТЗ.Ответ) Тогда
			Продолжить;
		КонецЕсли;
		
		ИдСтрокиВопроса = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Строка(СтрТЗ.Вопрос), "вопрос", Строка(СтрТЗ.Вопрос));
		Если ИдСтрокиВопроса = ПустойИд Тогда
			Продолжить
		КонецЕсли;
		
		//Если на вопрос получен только один ответ
		//------------------------------------------
		Если СтрЧислоВхождений(СтрТЗ.Ответ, "|") = 0 Тогда
			
			ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(СтрТЗ.Ответ, "ответ", СтрТЗ.Ответ);
			Если ИдСтрокиОтвета = ПустойИд Тогда
				Продолжить
			КонецЕсли;
		
			НоваяЗапись				= НЗ.Добавить();
			НоваяЗапись.Период		= Период;
			НоваяЗапись.Телефон		= Телефон;
			НоваяЗапись.Вопрос		= ИдСтрокиВопроса;
			НоваяЗапись.Ответ		= ИдСтрокиОтвета;
			НоваяЗапись.Сигнатура	= Сигнатура;
			//НоваяЗапись.Сигнатура	= Сигнатура;
			
		//Если на вопрос получено несколько ответов
		//---------------------------------------------------------------------------------------------------------------	
		Иначе
			МасСтрок = СтрРазделить(СтрТЗ.Ответ, "|",Ложь);
			Счетчик = 0;
			Для Каждого Стр Из МасСтрок Цикл
				Счетчик 		= Счетчик+1;
				Отв 			= СокрЛП(Стр);
				ИдСтрокиОтвета  = Справочники.ИдентификаторыСтрок.УстановиИдентификаторСтроки(Стр, "ответ", Стр);
			Если ИдСтрокиОтвета = ПустойИд Тогда
				Продолжить
			КонецЕсли;
		
			НоваяЗапись				= НЗ.Добавить();
			НоваяЗапись.Период		= Период;
			НоваяЗапись.Телефон		= Телефон;
			НоваяЗапись.Вопрос		= ИдСтрокиВопроса;
			НоваяЗапись.Номер		= Счетчик;
			НоваяЗапись.Ответ		= ИдСтрокиОтвета;
			НоваяЗапись.Сигнатура	= Сигнатура;

			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЗ.Количество()= 0 Тогда
		Возврат
	КонецЕсли;
	
	Попытка
		НЗ.Записать(Истина);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки

КонецПроцедуры

Процедура НачатьЗапись(Период, Телефон, ТаблицаВопросОтвет, Сигнатура="") Экспорт
	
	Парам = Новый Массив();
	Парам.Добавить(Период);
	Парам.Добавить(Телефон);
	Парам.Добавить(ТаблицаВопросОтвет);
	Парам.Добавить(Сигнатура);
	ФоновыеЗадания.Выполнить("Анкета.Записать", Парам,, "Запись анкеты опроса из формы расширенной анкеты"); 
КонецПроцедуры

Функция ЭтоНегативнаяАнкета(СигнатураПродажи) Экспорт
	Перем Результат;
	Результат = Ложь;
	
	//--------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыРасширенные.Ответ КАК Ответ,
	|	МАКСИМУМ(АнкетыРасширенные.Период) КАК Период
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные КАК АнкетыРасширенные
	|ГДЕ
	|	АнкетыРасширенные.СигнатураЗадачQ = &СигнатураПродажи
	|	И АнкетыРасширенные.Вопрос В(&_1йБазовыйВопросЛояльности)
	|
	|СГРУППИРОВАТЬ ПО
	|	АнкетыРасширенные.Ответ
	|
	|ИМЕЮЩИЕ
	|	АнкетыРасширенные.Ответ В (&Нет, &_1, &_2, &_3)";
	Запрос.УстановитьПараметр("СигнатураПродажи",	 		СигнатураПродажи);
	Запрос.УстановитьПараметр("_1йБазовыйВопросЛояльности",	Анкета._1йБазовыйВопросЛояльности());
	Запрос.УстановитьПараметр("Нет",						Анкета.Нет());
	Запрос.УстановитьПараметр("_1",							Анкета._1());
	Запрос.УстановитьПараметр("_2",							Анкета._2());
	Запрос.УстановитьПараметр("_3",							Анкета._3());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	//------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыРасширенные.Ответ КАК Ответ,
	|	МАКСИМУМ(АнкетыРасширенные.Период) КАК Период
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные КАК АнкетыРасширенные
	|ГДЕ
	|	АнкетыРасширенные.СигнатураЗадачQ = &СигнатураПродажи
	|	И АнкетыРасширенные.Вопрос В(&_2йБазовыйВопросЛояльности)
	|
	|СГРУППИРОВАТЬ ПО
	|	АнкетыРасширенные.Ответ
	|
	|ИМЕЮЩИЕ
	|	АнкетыРасширенные.Ответ В (&_1, &_2, &_3)";
	Запрос.УстановитьПараметр("СигнатураПродажи",	 			СигнатураПродажи);
	Запрос.УстановитьПараметр("_2йБазовыйВопросЛояльности",		Анкета._2йБазовыйВопросЛояльности());
	Запрос.УстановитьПараметр("_1", Анкета._1());
	Запрос.УстановитьПараметр("_2", Анкета._2());
	Запрос.УстановитьПараметр("_3", Анкета._3());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	//-----
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыРасширенные.Ответ КАК Ответ,
	|	МАКСИМУМ(АнкетыРасширенные.Период) КАК Период
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные КАК АнкетыРасширенные
	|ГДЕ
	|	АнкетыРасширенные.СигнатураЗадачQ = &СигнатураПродажи
	|	И АнкетыРасширенные.Вопрос В(&_3йБазовыйВопросЛояльности)
	|
	|СГРУППИРОВАТЬ ПО
	|	АнкетыРасширенные.Ответ
	|
	|ИМЕЮЩИЕ
	|	АнкетыРасширенные.Ответ В (&_1, &_2, &_3)";
	Запрос.УстановитьПараметр("СигнатураПродажи",	 			СигнатураПродажи);
	Запрос.УстановитьПараметр("_3йБазовыйВопросЛояльности",		Анкета._3йБазовыйВопросЛояльности());
	Запрос.УстановитьПараметр("_1", Анкета._1());
	Запрос.УстановитьПараметр("_2", Анкета._2());
	Запрос.УстановитьПараметр("_3", Анкета._3());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	//-----
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыРасширенные.Ответ КАК Ответ,
	|	МАКСИМУМ(АнкетыРасширенные.Период) КАК Период
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные КАК АнкетыРасширенные
	|ГДЕ
	|	АнкетыРасширенные.СигнатураЗадачQ = &СигнатураПродажи
	|	И АнкетыРасширенные.Вопрос В(&_4йБазовыйВопросЛояльности)
	|
	|СГРУППИРОВАТЬ ПО
	|	АнкетыРасширенные.Ответ
	|
	|ИМЕЮЩИЕ
	|	АнкетыРасширенные.Ответ В (&_1, &_2, &_3)";
	Запрос.УстановитьПараметр("СигнатураПродажи",	 			СигнатураПродажи);
	Запрос.УстановитьПараметр("_4йБазовыйВопросЛояльности",		Анкета._4йБазовыйВопросЛояльности());
	Запрос.УстановитьПараметр("_1", Анкета._1());
	Запрос.УстановитьПараметр("_2", Анкета._2());
	Запрос.УстановитьПараметр("_3", Анкета._3());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;

	Возврат Результат;
КонецФункции

#Область Стандартные_Вопросы_и_Ответы

Функция ИдентификаторСтроки(ИсходнаяСтрока) Экспорт
	Перем Результат;
	Результат = Справочники.ИдентификаторыСтрок.ПустаяСсылка();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИдентификаторыСтрок.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИдентификаторыСтрок КАК ИдентификаторыСтрок
	|ГДЕ
	|	ИдентификаторыСтрок.Наименование = &Наименование
	|	И ИдентификаторыСтрок.ПометкаУдаления = ЛОЖЬ";	
	Запрос.УстановитьПараметр("Наименование", ИсходнаяСтрока);
	
	Рез = ОбщегоНазначения.ВыполнитьЗапрос(Запрос, ПараметрыСеанса.ТекущийПользователь.Наименование);
	Если Рез.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат = Рез.Выгрузить()[0][0];
	Возврат Результат;
КонецФункции

Функция ДовольныЛиВыКачествомОбслуживанияПриПоследнемПосещенииСтанции() Экспорт
	Результат = ИдентификаторСтроки("Довольны ли Вы качеством обслуживания при последнем посещении станции?");
	Возврат Результат;
КонецФункции

Функция ДовольныЛиВыПоследнимПосещениемСтанции() Экспорт
	Результат = ИдентификаторСтроки("Довольны ли Вы последним посещением станции?");
	Возврат Результат;
КонецФункции

Функция ДостоинЛиНашСервисВашейРекомендацииДрузьямИЗнакомым() Экспорт
	Результат = ИдентификаторСтроки("Достоин ли наш Сервис Вашей рекомендации друзьям и знакомым? Оцените по 5-бальной шкале, где 5 - обязательно порекомендуете, 1 - нет.");
	Возврат Результат;
КонецФункции

Функция ДовольныЛиВыКачествомРаботыНашегоАвтосалона() Экспорт
	Результат = ИдентификаторСтроки("Довольны ли Вы качеством работы нашего автосалона?");
	Возврат Результат;
КонецФункции

Функция КаковаВероятностьЧтоВыПосоветуетеНашАвтосалон() Экспорт
	Результат = ИдентификаторСтроки("Какова вероятность, что Вы посоветуете наш автосалон своим друзьям и знакомым? Оцените, пожалуйста, по десятибальной шкале.");
	Возврат Результат;
КонецФункции

Функция СфераНегатива() Экспорт
	Результат = ИдентификаторСтроки("Сферы негатива");
	Возврат Результат;
КонецФункции

Функция КатегорияНегатива() Экспорт
	Результат = ИдентификаторСтроки("Категории негатива");
	Возврат Результат;
КонецФункции

#Область Базовые_вопросы_Лояльности
Функция БазовыеВопросыЛояльностиРемонтов() Экспорт
	Перем Результат;
	Результат = Новый Массив();
	Результат.Добавить(ИдентификаторСтроки("Довольны ли Вы последним посещением станции?"));
	Результат.Добавить(ИдентификаторСтроки("Довольны ли Вы качеством обслуживания при последнем посещении станции?"));
	Результат.Добавить(ИдентификаторСтроки("Достоин ли наш Сервис Вашей рекомендации друзьям и знакомым? Оцените по 5-бальной шкале, где 5 - обязательно порекомендуете, 1 - нет."));
	Результат.Добавить(ИдентификаторСтроки("Оцените от 1 до 5 общее впечатление от обслуживания на сервисной станции"));
	Результат.Добавить(ИдентификаторСтроки("Какова вероятность того, что вы порекомендуете наш сервисный центр другим. Поставьте оценку от 1 до 5"));
	Результат.Добавить(ИдентификаторСтроки("Насколько ваш опыт обслуживания на сервисной станции был беспроблемным. Оцените также от 1 до 5"));
	Результат.Добавить(ИдентификаторСтроки("Насколько ваш опыт обслуживания на сервисной станции был беспроблемным. Оцените также от 1 до 5."));
	Результат.Добавить(ИдентификаторСтроки("Оцените от 1 до 5 насколько вы можете доверять сотрудникам сервисной станции"));
	Возврат Результат
КонецФункции

Функция БазовыеВопросыЛояльностиПродаж() Экспорт
	Перем Результат;
	Результат = Новый Массив();
	Результат.Добавить(ИдентификаторСтроки("Довольны ли Вы качеством работы нашего автосалона?"));
	Результат.Добавить(ИдентификаторСтроки("Какова вероятность, что Вы посоветуете наш автосалон своим друзьям и знакомым? Оцените, пожалуйста, по десятибальной шкале."));
	Результат.Добавить(ИдентификаторСтроки("Достоин ли наш автосалон Вашей рекомендации друзьям и знакомым? Оцените по 5-бальной шкале, где 5 - обязательно порекомендуете, 1 - нет."));
	Возврат Результат	
КонецФункции

Функция БазовыеВопросыЛояльностиПродажРемонтов() Экспорт
	Перем Результат;
	Результат = Новый Массив();
	
	БазовыеВопросыЛояльностиПродаж = БазовыеВопросыЛояльностиПродаж();
	Для Каждого i Из БазовыеВопросыЛояльностиПродаж Цикл
		Результат.Добавить(i);
	КонецЦикла;
	
	БазовыеВопросыЛояльностиРемонтов = БазовыеВопросыЛояльностиРемонтов();
	Для Каждого i Из БазовыеВопросыЛояльностиРемонтов Цикл
		Результат.Добавить(i);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция _1йБазовыйВопросЛояльности() Экспорт
	Результат = Новый Массив();
	Результат.Добавить(ИдентификаторСтроки("Довольны ли Вы качеством работы нашего автосалона?"));
	Результат.Добавить(ИдентификаторСтроки("Довольны ли Вы последним посещением станции?"));
	Результат.Добавить(ИдентификаторСтроки("Довольны ли Вы качеством обслуживания при последнем посещении станции?"));
	Результат.Добавить(ИдентификаторСтроки("Оцените от 1 до 5 общее впечатление от обслуживания на сервисной станции"));
	Возврат Результат		
КонецФункции

Функция _2йБазовыйВопросЛояльности() Экспорт
	Результат = Новый Массив();
	Результат.Добавить(ИдентификаторСтроки("Какова вероятность, что Вы посоветуете наш автосалон своим друзьям и знакомым? Оцените, пожалуйста, по десятибальной шкале."));
	Результат.Добавить(ИдентификаторСтроки("Достоин ли наш Сервис Вашей рекомендации друзьям и знакомым? Оцените по 5-бальной шкале, где 5 - обязательно порекомендуете, 1 - нет."));
	Результат.Добавить(ИдентификаторСтроки("Достоин ли наш автосалон Вашей рекомендации друзьям и знакомым? Оцените по 5-бальной шкале, где 5 - обязательно порекомендуете, 1 - нет."));
	Результат.Добавить(ИдентификаторСтроки("Какова вероятность того, что вы порекомендуете наш сервисный центр другим. Поставьте оценку от 1 до 5"));
	Возврат Результат		
КонецФункции

Функция _3йБазовыйВопросЛояльности() Экспорт
	Результат = Новый Массив();
	Результат.Добавить(ИдентификаторСтроки("Насколько ваш опыт обслуживания на сервисной станции был беспроблемным. Оцените также от 1 до 5"));
	Результат.Добавить(ИдентификаторСтроки("Насколько ваш опыт обслуживания на сервисной станции был беспроблемным. Оцените также от 1 до 5."));
	Возврат Результат		
КонецФункции

Функция _4йБазовыйВопросЛояльности() Экспорт
	Результат = Новый Массив();
	Результат.Добавить(ИдентификаторСтроки("Оцените от 1 до 5 насколько вы можете доверять сотрудникам сервисной станции"));
	Возврат Результат		
КонецФункции
#КонецОбласти

Функция Да() Экспорт
//Ответ "да"
//-----------------
	Результат = ИдентификаторСтроки("да");
	Возврат Результат;
КонецФункции

Функция Нет() Экспорт
//Ответ "Нет"
//-----------------
	Результат = ИдентификаторСтроки("нет");
	Возврат Результат;
КонецФункции

Функция _10()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("10");
	Возврат Результат;
КонецФункции

Функция _9()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("9");
	Возврат Результат;
КонецФункции

Функция _8()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("8");
	Возврат Результат;
КонецФункции

Функция _7()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("7");
	Возврат Результат;
КонецФункции

Функция _6()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("6");
	Возврат Результат;
КонецФункции

Функция _5()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("5");
	Возврат Результат;
КонецФункции

Функция _4()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("4");
	Возврат Результат;
КонецФункции

Функция _3()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("3");
	Возврат Результат;
КонецФункции

Функция _2()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("2");
	Возврат Результат;
КонецФункции

Функция _1()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("1");
	Возврат Результат;
КонецФункции

Функция _0()Экспорт
//-----------------
	Результат = ИдентификаторСтроки("0");
	Возврат Результат;
КонецФункции

Функция ПаркАвтомобилей() Экспорт
	//Вопрос "Достоин ли наш Сервис Вашей рекомендации друзьям и знакомым? Оцените по 5-бальной шкале, где 5 - обязательно порекомендуете, 1 - нет." 
	//---------------
	Результат = ИдентификаторСтроки("Парк автомобилей");
	Возврат Результат;
КонецФункции

Функция от_5_до_10() Экспорт
	Результат = ИдентификаторСтроки("от 5 до 10");
	Возврат Результат;
КонецФункции

Функция от_10_до_20() Экспорт
	Результат = ИдентификаторСтроки("от 10 до 20");
	Возврат Результат;
КонецФункции

Функция от_20_до_30() Экспорт
	Результат = ИдентификаторСтроки("от 20 до 30");
	Возврат Результат;
КонецФункции

Функция от_30_до_40() Экспорт
	Результат = ИдентификаторСтроки("от 30 до 40");
	Возврат Результат;
КонецФункции

Функция от_40_до_50() Экспорт
	Результат = ИдентификаторСтроки("от 40 до 50");
	Возврат Результат;
КонецФункции

Функция более_50() Экспорт
	Результат = ИдентификаторСтроки("более 50");
	Возврат Результат;
КонецФункции


#КонецОбласти

#Область Экспорт_анкет_лояльности_в_ОУ
Функция ВыгрузкаАнкет() Экспорт
КонецФункции

Функция ЗаписатьАнкетывОУ(Начало, Окончание, Замещать = Ложь) Экспорт
	Перем Рез;
	Рез = "ошибка";
	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Начало) 	= Тип("Дата");
	Доступно = Доступно И ТипЗнч(Окончание) = Тип("Дата");
	Доступно = Доступно И ЗначениеЗаполнено(Начало);
	Доступно = Доступно И ЗначениеЗаполнено(Окончание);
	Если Не Доступно Тогда
		Возврат Рез+": неверные типы/значения параметров";
	КонецЕсли;

	РезультатЗапроса = ОбработкаОтчетов.ЗапросЛояльностиДетальный(Начало, Окончание, 0);
	Если РезультатЗапроса.Пустой() Тогда
		ЗаписьЖурналаРегистрации("Анкета_2_Текст", УровеньЖурналаРегистрации.Ошибка, , "Начало = "+Начало+"; Окончание = "+Окончание, "Пустой результат запроса лояльности");
		Возврат Рез+": пустой результат запроса лояльности";
	КонецЕсли;
	
	//Шаблон запроса на определение ОУ-контрагента для не-ОУ-контрагента
	//-------------------------------------------------------------------
	ЗапросКонтрагента = Новый Запрос();
	ЗапросКонтрагента.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ключи1.ЗначениеКлюча КАК ЗначениеКлючаОУ,
	|	Ключи1.Ссылка.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Контрагенты.КлючиВИсточникахДанных КАК Ключи1
	|ГДЕ
	|	Ключи1.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				Ключи2.Ссылка
	|			ИЗ
	|				Справочник.Контрагенты.КлючиВИсточникахДанных КАК Ключи2
	|			ГДЕ
	|				Ключи2.ЗначениеКлюча = &ЗначениеКлючаНеОУ)";
	
	
	
	ИсточникДанных = Справочники.ИБ_ИсточникиДанных.НайтиПоРеквизиту("Префикс", "OU");
	Если ИсточникДанных = Неопределено Тогда
		ЗаписьЖурналаРегистрации("Анкета_2_Текст", УровеньЖурналаРегистрации.Ошибка, , "Префикс = OU", "Не найден элемент справочника ИБ_ИсточникиДанных по реквизиту");
		Возврат Рез;
	КонецЕсли;
	
	БИ = ОбщегоНазначения.ПолучитьПодключениеБД(ИсточникДанных.ПараметрыСоединения);
	Если  БИ = Неопределено Тогда
		ЗаписьЖурналаРегистрации("Анкета_2_Текст", УровеньЖурналаРегистрации.Ошибка, ,  "Источник.ПараметрыСоединения = "+ ИсточникДанных.ПараметрыСоединения, "Ошибка подключения к информационной базе");
		Возврат Рез;
	КонецЕсли;

	i = РезультатЗапроса.Выбрать();
	
	Пока i.Следующий() Цикл
	
		//Выгрузка
		//---------
		Анкта = "";
		АнкетаДата 		= '00010101';
		Источник		= "";
		Документ		= "";
		ДокументНомер	= "";
		ДокументДата 	= '00010101';
		ДокументТип		= "";
		Контрагент		= "";
		
		Ответ1			= "";
		Ответ2			= "";
		
		КонтрагентНаименование = "";
		КонтрагентНеОУНеНайден = 0;
		

		Если Не ЗначениеЗаполнено(i.Ответ1) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(i.Ответ2) Тогда
			Продолжить;
		КонецЕсли;
		
		Анкта			= i.СигнатураЗадачи;
		АнкетаДата 		= Формат(i.АнкетаПериод, "ДЛФ=DT");
		
		Источник		= Лев(i.СигнатураЗадачи, 2);
		
		Документ		= i.ДокСсылка;
		ДокументНомер	= i.ДокНомер;
		ДокументДата	= Формат(i.ДокДата, "ДЛФ=DT");
		ДокументТип		= i.ДокТип;
		
		Контрагент		= "";
		Если Источник = "OU" Или Источник = "SK" Тогда
			Контрагент				= i.Заказчик;
			КонтрагентНаименование  = i.Контрагент.Наименование;
		Иначе
			ЗапросКонтрагента.УстановитьПараметр("ЗначениеКлючаНеОУ", i.Заказчик);	
			Рез = ЗапросКонтрагента.Выполнить();
			Если Рез.Пустой() Тогда
				Контрагент		= i.Заказчик;
				КонтрагентНеОУНеНайден = 1;
			Иначе
				Выборка = Рез.Выбрать();
				Выборка.Следующий();
				Контрагент 				= Выборка.ЗначениеКлючаОУ;
				КонтрагентНаименование  = Выборка.Наименование;
			КонецЕсли;
		КонецЕсли;
		КонтрагентНаименование = СтрЗаменить(КонтрагентНаименование, ",", " ");
				
		Ответ1			= i.Ответ1;
		Ответ1			= ?(ВРЕГ(i.Ответ1)="ДА", "1", "0");
		
		Ответ2			= i.Ответ2ДляОценкиЛояльности;
		Мас = Новый Массив(12);
		Мас[0]	= Анкта;
		Мас[1]	= АнкетаДата;
		Мас[2]	= Источник;
	    Мас[3]	= Документ;
		Мас[4]	= ДокументНомер;
		Мас[5]	= ДокументДата;
   		Мас[6]	= ДокументТип;
	   	Мас[7]	= Контрагент;
		Мас[8]	= Ответ1;
   		Мас[9]	= Ответ2;
	   	Мас[10]	= КонтрагентНаименование;
		Мас[11]	= КонтрагентНеОУНеНайден;
		
		//Загрузка
		//--------
		Загрузить(БИ, Мас, Замещать);
	КонецЦикла;		
КонецФункции

Функция Загрузить(БИ, Мас, Замещать)
	Перем Рез;
	Рез = "ошибка";
	
		Анкта			= "";
		АнкетаДата 		= '00010101';
		Источник		= "";
		Документ		= "";
		ДокументДата 	= '00010101';
		ДокументТип		= "";
		Контрагент		= "";
		
		Ответ1			= "";
		Ответ2			= "";
		
		КонтрагентНаименование = "";
		КонтрагентНеОУНеНайден = 0;
			
		Если Мас.Количество() = 0 Тогда
			ЗаписьЖурналаРегистрации("Загрузка лояльности", УровеньЖурналаРегистрации.Ошибка, ,"Контрагент = "+Контрагент, "Пустой массив");
			Возврат Рез;
		КонецЕсли;
		
		Анкта			= Мас[0];
		АнкетаДата 		= Дата(Мас[1]); 
		Источник		= Мас[2];
		Документ		= Мас[3];
		ДокументНомер	= Мас[4];
		ДокументДата 	= Дата(Мас[5]);
		ДокументТип		= Мас[6];
		Контрагент		= Мас[7];
		
		Ответ1			= Число(Мас[8]);
		Ответ2			= Число(Мас[9]);
		
		КонтрагентНаименование = Мас[10];
		КонтрагентНеОУНеНайден = Число(Мас[11]);
		
		//Транформация
		//-------------
		КонтрагентСсылка = БИ.Справочники.Контрагенты.ПустаяСсылка();
		Док				 = "";
		Удовлетворен 	 = Ложь;
		Рекомендует 	 = 0;
		
		БИ_Котрагент_ГУИД = БИ.NewObject("УникальныйИдентификатор",Контрагент);
		КонтрагентСсылка = БИ.Справочники.Контрагенты.ПолучитьСсылку(БИ_Котрагент_ГУИД);
		Если КонтрагентСсылка.Пустая() Тогда
			ЗаписьЖурналаРегистрации("Загрузка лояльности", УровеньЖурналаРегистрации.Ошибка, ,"Контрагент = "+Контрагент, "Контрагент - пустая ссылка");
			Возврат Рез;
		КонецЕсли;
		
		Если НЕ (Источник = "OU" Или Источник = "SK") Тогда
			Об = КонтрагентСсылка.ПолучитьОбъект();
			Если Об = Неопределено Тогда
				КонтрагентСсылка = БИ.Справочники.Контрагенты.ЧастноеЛицо;	
			КонецЕсли;
		КонецЕсли;
		
		Если ДокументТип = "Реализация" Тогда
			ДокГуид = БИ.NewObject("УникальныйИдентификатор", Документ);
			Док = БИ.Документы.НЭРеализация.ПолучитьСсылку(ДокГуид);
		ИначеЕсли ДокументТип = "Машинозаезд" Тогда
			ДокГуид = БИ.NewObject("УникальныйИдентификатор", Документ);
			Док = БИ.Документы.Машинозаезд.ПолучитьСсылку(ДокГуид);
		ИначеЕсли ДокументТип = "Заказ-наряд" Тогда 
			Если (Источник = "OU" Или Источник = "SK") Тогда
				Попытка
					Док = БИ.Документы.ЗаказНаряд.ПолучитьСсылку(Новый УникальныйИдентификатор(Документ));
				Исключение
				    Возврат Рез;
				КонецПопытки
			ИначеЕсли Источник = "GG" Тогда
				Док = "НН: Заказ-наряд "+ДокументНомер+" от "+ДокументДата;
			ИначеЕсли Источник = "VA" Тогда
				Док = "Вл: Заказ-наряд "+ДокументНомер+" от "+ДокументДата;
			КонецЕсли;
		КонецЕсли;
		
		Если Док = "" Тогда
			ЗаписьЖурналаРегистрации("Загрузка лояльности", УровеньЖурналаРегистрации.Ошибка, ,"Док = """, "Пустой документ");
			Возврат Рез;
		КонецЕсли;
		
		Если Ответ1 =0 Тогда
			Удовлетворен = Ложь;
		Иначе
			Удовлетворен = Истина;
		КонецЕсли;
		Рекомендует = Ответ2;
			
		Зап = БИ.РегистрыСведений.Лояльность.СоздатьМенеджерЗаписи();
		Зап.Период			= АнкетаДата;
		Зап.Контрагент 		= КонтрагентСсылка;
		Зап.Документ		= Док;
		Зап.Анкета			= Анкта;
		
		Зап.Прочитать();
		
		Доступно = Истина;
		Доступно = Доступно И Зап.Выбран();
		Доступно = Доступно И Замещать = Ложь; 
		Если Доступно Тогда
			Возврат Рез;
		КонецЕсли;
		
		Зап.Период			= АнкетаДата;
		Зап.Контрагент 		= КонтрагентСсылка;
		Зап.Документ		= Док;
		Зап.Анкета			= Анкта;
		
		Зап.Удовлетворен	= Удовлетворен;
		Зап.Рекомендует		= Рекомендует;
		
		Попытка
			Зап.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("Ошибка", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.Лояльность, "Анкета = "+Анкета, ОписаниеОшибки());
		КонецПопытки;	
КонецФункции

#КонецОбласти