//************************************************************************************************************************************
// Обработка входящих сообщений электронной почты
//************************************************************************************************************************************

Процедура Прочитать() Экспорт
	//Замер производительности, значение по умолчанию, берется из ресурса
	ЗамерятьПроизводительность = Ложь;
	
	Настройки 	= "";	 
	ИмяПарам	= "Ресурс_ПрофилиЭлПочты";
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	Пока Выборка.Следующий() Цикл
		Настройки = Выборка.Настройки;	
	КонецЦикла;
	
	//Прочитай из настроек учетные данные для luidorexpertALL@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("Прочитать()", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетных записей почты");
			Возврат;
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли; 
	
	ЧтеXML = Новый ЧтениеXML();
	ЧтеXML.УстановитьСтроку(Настройки);
	Пока ЧтеXML.Прочитать() Цикл
		
		Если ЧтеXML.ТипУзла<>ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЧтеXML.Имя="root" Тогда  
			Продолжить
		КонецЕсли;
		
		Если ЧтеXML.Имя="ProductivityControl" Тогда
			ЗамерятьПроизводительность = Булево(ЧтеXML.ПолучитьАтрибут("Value"));
			Продолжить
		КонецЕсли;
		
		Если ЧтеXML.Имя="InternetMailProfiles" Тогда  
			Продолжить
		КонецЕсли;
		
		Если ЧтеXML.ТипУзла<>ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЧтеXML.Имя="InternetMailProfile" Тогда
			
			Успех = Ложь;
			
			//Определи необходимость чтения почтового ящика
			ЧитатьЭтотПочтовыйЯщик = Булево( ЧтеXML.ПолучитьАтрибут("DoReading") );
			Если Не ЧитатьЭтотПочтовыйЯщик Тогда
				Продолжить
			КонецЕсли;
			
			//Прочитай профиль почты
			ПротоколЧтенияПочты = ЧтеXML.ПолучитьАтрибут("MailProtocol");
			Если ПротоколЧтенияПочты 	= "POP3" 	Тогда
				 АдресСервера		=			ЧтеXML.ПолучитьАтрибут("POP3ServerAdress"	); 
				 Порт				=			ЧтеXML.ПолучитьАтрибут("POP3Port"			);
				 ИспользоватьSSL	=	Булево(	ЧтеXML.ПолучитьАтрибут("POP3UseSSL"			)); 
				 Пользователь		=			ЧтеXML.ПолучитьАтрибут("User"				); 
				 Пароль				=			ЧтеXML.ПолучитьАтрибут("Password"			);		
			ИначеЕсли  ПротоколЧтенияПочты = "IMAP" Тогда
				 АдресСервера		=			ЧтеXML.ПолучитьАтрибут("IMAPServerAdress"	); 
				 Порт				=			ЧтеXML.ПолучитьАтрибут("IMAPPort"			);
				 ИспользоватьSSL	=	Булево(	ЧтеXML.ПолучитьАтрибут("IMAPUseSSL"			)); 
				 Пользователь		=			ЧтеXML.ПолучитьАтрибут("IMAPUser"			); 
				 Пароль				=			ЧтеXML.ПолучитьАтрибут("IMAPPassword"		);		
			КонецЕсли;
				
			//Замер производительности
			СчетчикПроизводительности_Начало=?(ЗамерятьПроизводительность, ТекущаяДата(), 0);
			 
			//Собственно прочитай почту из папки Входящие
			//--------------------------------------------
			Данные = "АдресСервера="+АдресСервера+"; Порт="+Порт+" Пользователь="+Пользователь;
			Попытка
				Успех = ПисьмаЗагрузить( АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПротоколЧтенияПочты);
			Исключение
				ЗаписьЖурналаРегистрации("Загрузка эл. почты.Чтение почты", УровеньЖурналаРегистрации.Ошибка, , Данные, СтрШаблон("Ошибка чтения почты: %1", ОписаниеОшибки())); 
			КонецПопытки;  
			
			ТекДата = 	ТекущаяДата(); 
			ТекЧас	=	Час(ТекДата);
			Доступно = 	Успех И ДеньНедели(ТекДата) <= 5 И 	8 < ТекЧас И ТекЧас < 17;	
			Если Доступно Тогда 
				Авито.GreenApiWhatsapp_SendMessage("120363022348210385@g.us","Новая почта");
				Успех = Ложь;
			КонецЕсли;
			
			//Собственно прочитай почту из папки "Нежелательная почта"
			//---------------------------------------------------------
			Попытка
				Успех = ПисьмаНежелательныеЗагрузить( АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПротоколЧтенияПочты);
			Исключение
				ЗаписьЖурналаРегистрации("Загрузка эл. почты.Чтение нежелательной почты", УровеньЖурналаРегистрации.Ошибка, , Данные, СтрШаблон("Ошибка чтения почты: %1", ОписаниеОшибки())); 
			КонецПопытки;

			
			//Замер производительности
			Если ЗамерятьПроизводительность Тогда
				СчетчикПроизводительности_Окончание		=	ТекущаяДата();
				СчетчикПроизводительности_Длительность 	=	СчетчикПроизводительности_Окончание - СчетчикПроизводительности_Начало;
				Если СчетчикПроизводительности_Длительность>0 Тогда
					ЗаписьЖурналаРегистрации("Загрузка эл. почты. Замер производительности", УровеньЖурналаРегистрации.Ошибка, Данные, СтрШаблон("Длительность = %1", СчетчикПроизводительности_Длительность)); 
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;

	КонецЦикла;  

КонецПроцедуры

Функция ПисьмаЗагрузить(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол = "POP3") Экспорт
	
	ЗначениеПоУмолчанию = Ложь;
	
	Доступно = 		ТипЗнч(АдресСервера) = Тип("Строка")
	            И 	ТипЗнч(Порт) = Тип("Строка")
				И 	ТипЗнч(ИспользоватьSSL) = Тип("Булево")
				И 	ТипЗнч(Пользователь) = Тип("Строка")
				И 	ТипЗнч(Пароль) = Тип("Строка")
				И 	ЗначениеЗаполнено(АдресСервера)
				И 	ЗначениеЗаполнено(Порт)
				И 	ЗначениеЗаполнено(ИспользоватьSSL)
				И 	ЗначениеЗаполнено(Пользователь)
				И 	ЗначениеЗаполнено(Пароль);
	
	Данные = СтрШаблон("АдресСервера = %1, Порт = %2, ИспользоватьSSL = %3, Пользователь = %4, Пароль = %5, ПочтовыйПротокол = %6", АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("Почта.ПисьмаЗагрузить", УровеньЖурналаРегистрации.Ошибка, , Данные, "Ошибка в типе или заполнении аргументов");
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
		
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
		ЗаписьЖурналаРегистрации("ПисьмаЗагрузить", УровеньЖурналаРегистрации.Ошибка, ,Данные, "Ошибка создания объекта ИнтернетПочта или подключения");
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	// Получи почтовые сообщения в виде заголовков (т.е. почтовые сообщения без текстов и вложений)
	// Фильтр (отбор) срабатывает только при протоколе IMAP - по факту фильт не срабатывает!!!
	//--------------------------------------------------------------------------------------------------------------------------------------	
	Попытка
		Если ПочтовыйПротокол = "IMAP" Тогда
			Отб = Новый Структура();
			//Отб.Вставить("ПослеДатыОтправления", НачалоДня(ТекущаяДата()) - 2*24*60*60);
			Отб.Вставить("ДатаОтправления", НачалоДня(ТекущаяДата()));
			МассивЗаголовков = иПочта.ПолучитьЗаголовки(Отб);
		Иначе
			МассивЗаголовков = иПочта.ПолучитьЗаголовки();
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ПисьмаЗагрузить", УровеньЖурналаРегистрации.Ошибка, ,Данные, ОписаниеОшибки());
		Возврат ЗначениеПоУмолчанию;
	КонецПопытки;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	//Найди письма-спам и сформируй массив чисел, п.с. индексы массива писем-заголовков, являющихся спамом
	//----------------------------------------------------------------------------------------------------
	ИндексыСпама = Новый Массив();
	Для i=0 По МассивЗаголовков.Количество()-1 Цикл
		//Если в письме указан адрес отравителя, тогда пропускаем его, несмотря на то, что это скорее всего спам
		//-------------------------------------------------------------------------------------------------------
		Если МассивЗаголовков[i].Отправитель = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//Если спам, тогда добавь в массив индексов спама
		//-----------------------------------------------------------------------------------------------------
		Если ОтправительЕстьСпаммер(МассивЗаголовков[i].Отправитель.Адрес) Тогда
			ИндексыСпама.Добавить(i);
		КонецЕсли;			
	КонецЦикла;	
	
	//Если в массиве заголовков есть сообщения, классифицированные как спам, тогда
	// удали их из массива заголовков
	//--------------------------------------------------------------------------------------------------
	КоличествоСпама =  ИндексыСпама.Количество();
	Если КоличествоСпама>0 Тогда
		i = КоличествоСпама - 1; //Максимальный индекс в массиве ИндексыСпама
		Пока Истина Цикл
			
			// Удали из массива заголовков элемент, с индексом, сохраненным в массиве ИндексыСпама
			//------------------------------------------------------------------------------------
			МассивЗаголовков.Удалить(ИндексыСпама[i]);	
			i = i - 1;
			Если i < 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	// Создадим таблицу значений в которую будем помещать полученные письма
	//----------------------------------------------------------------------
	ТЗПисьма = Новый ТаблицаЗначений;
	ТЗПисьма.Колонки.Добавить("ОтправительСервер");
	ТЗПисьма.Колонки.Добавить("ОтправительАдрес");
	ТЗПисьма.Колонки.Добавить("ОтправительИмя");
	ТЗПисьма.Колонки.Добавить("Идентификатор");  	//МеssageID
	ТЗПисьма.Колонки.Добавить("ТипТекста");
	ТЗПисьма.Колонки.Добавить("ИнтернетПочтовоеСообщение", 	Новый ОписаниеТипов("ИнтернетПочтовоеСообщение"));
	ТЗПисьма.Колонки.Добавить("МассивТелНомеровСтроками", 	Новый ОписаниеТипов("Массив"));	
	ТЗПисьма.Колонки.Добавить("ДатаОтправления");	//PostingDatе
	ТЗПисьма.Колонки.Добавить("Текст");
	ТЗПисьма.Колонки.Добавить("Тема");
	ТЗПисьма.Колонки.Добавить("Дата");
	ТЗПисьма.Колонки.Добавить("ТипЗадачи");
	ТЗПисьма.Колонки.Добавить("ПолучательАдрес");
	ТЗПисьма.Колонки.Добавить("ИмяПользователяПочтовогоЯщика");
	ТЗПисьма.Колонки.Добавить("Свойство1", 	Новый ОписаниеТипов("Строка")); // в тексте письма может быть строка вида ^luidor_property_1: Уфа (Лизинг)^, в этой строке Уфа (Лизинг) является значением свойства 1
		
	// Получи почтовые сообщения  (собственно почтовые сообщения со всеми текстами и вложениями)
	Попытка
		МассивСообщений = иПочта.Выбрать(Ложь, МассивЗаголовков, Истина);
	Исключение
		ЗаписьЖурналаРегистрации("ПисьмаЗагрузить", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());
		Возврат ЗначениеПоУмолчанию;
	КонецПопытки;
	
	// Заполним таблицу значений полученными сообщениями
	//--------------------------------------------------
	ТекущаяДатаНачалоДня = НачалоДня(ТекущаяДата());
	Для Каждого ПочтСообщение Из МассивСообщений Цикл
		
		//Обработай сообщения, отправленные текущим днем
		НовСтрока = ТЗПисьма.Добавить();
		
		НовСтрока.Идентификатор 			= СокрЛП(ПочтСообщение.ИдентификаторСообщения);  //МеssageID	
		НовСтрока.Тема 						= СокрЛП(ПочтСообщение.Тема);
		НовСтрока.Дата						= ТекущаяДата();
		НовСтрока.Текст						= ?(ПочтСообщение.Тексты.Количество()>0, ПочтСообщение.Тексты[0].Текст, "");	
		НовСтрока.ОтправительАдрес			= СокрЛП(ПочтСообщение.Отправитель.Адрес);
		НовСтрока.ОтправительСервер 		= СокрЛП(ПочтСообщение.Отправитель.Сервер);
		НовСтрока.ОтправительИмя 			= СокрЛП(ПочтСообщение.Отправитель.ОтображаемоеИмя);	
		НовСтрока.ИнтернетПочтовоеСообщение = ПочтСообщение;
		НовСтрока.ДатаОтправления 			= ПочтСообщение.ДатаОтправления; //PostingDate
		
		//Определи получателя
		ПолучательАдрес = "неопределено";
		Для Каждого Получатель Из ПочтСообщение.Получатели Цикл
			ПолучательАдрес						= Получатель.Адрес;
			Если СтрНайти(нрег(ПолучательАдрес), "@luidor")>0 Тогда
				ПолучательАдрес						= Получатель.Адрес;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//Определи получателя из поля копия
		Если ПолучательАдрес = "неопределено" Тогда
			Для Каждого Получатель Из ПочтСообщение.Копии Цикл
				ПолучательАдрес						= Получатель.Адрес;
				Если СтрНайти(нрег(ПолучательАдрес), "@luidor")>0 Тогда
					ПолучательАдрес						= Получатель.Адрес;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//Определи получателя из поля скрытая копия
		Если ПолучательАдрес = "неопределено" Тогда
			Для Каждого Получатель Из ПочтСообщение.СлепыеКопии Цикл
				ПолучательАдрес						= Получатель.Адрес;
				Если СтрНайти(нрег(ПолучательАдрес), "@luidor")>0 Тогда
					ПолучательАдрес						= Получатель.Адрес;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//Если отправитель скрыл список получателей, тогда выведем имя пользователя почтового ящика
		Если ПолучательАдрес = "неопределено" Или СокрЛП(ПолучательАдрес)="@" Тогда
			ПолучательАдрес = Пользователь;	
		КонецЕсли;
		НовСтрока.ПолучательАдрес			= ПолучательАдрес;
		
		//Сохрани пользователя почтового ящика (необходиомо для удаления писем
		НовСтрока.ИмяПользователяПочтовогоЯщика	= Пользователь;
		НовСтрока.ТипЗадачи = Перечисления.ТипЗадачи.ПрочаяПочта;
	КонецЦикла;
	иПочта.Отключиться();
	
	ПереченьСайтовКомпании = ПолучитьПереченьСайтовКомпании();	
	
	// Загрузим полученные письма в регист сведений "ЗадачиОбратныйЗвонок"
	//--------------------------------------------------------------------- 
	Успех = Ложь;
	ИскатьНомераТелефоновВПисьме = Ложь;
	Для Каждого СтрокаТЗ Из ТЗПисьма Цикл 
				
		Если ИскатьНомераТелефоновВПисьме Тогда
			СтрокаТЗ.МассивТелНомеровСтроками = ПолучитьМассивТелНомеровСтроками(СтрокаТЗ.ИнтернетПочтовоеСообщение.Тексты);
		Иначе
			СтрокаТЗ.МассивТелНомеровСтроками = Новый массив();	
		КонецЕсли;
		
		//Исключаем из перечня номеров номер телефона самого сервиса Krible
		Если СтрокаТЗ.МассивТелНомеровСтроками.Количество()>0 Тогда
			Для Сч = 0 По СтрокаТЗ.МассивТелНомеровСтроками.Количество()-1 Цикл
				Если СтрокаТЗ.МассивТелНомеровСтроками[Сч] = "4997058290" Тогда
					СтрокаТЗ.МассивТелНомеровСтроками.Удалить(Сч);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//С 21.04.2022 14:48 
		//Если не удалось определить номер, тогда указываем MessageID вместо номера
		Если СтрокаТЗ.МассивТелНомеровСтроками.Количество()=0 Тогда 
			СтрокаТЗ.МассивТелНомеровСтроками.Добавить(СтрокаТЗ.Идентификатор);	
		КонецЕсли;
		
		//04.04.2017, +, Если определился номер телефона, тогда ищем свойства
		Если СтрокаТЗ.МассивТелНомеровСтроками.Количество()>0 Тогда 
			СтрокаТЗ.Свойство1 = ПолучиСвойство1(СтрокаТЗ.ИнтернетПочтовоеСообщение.Тексты);
		КонецЕсли;
				
		// Определение интернет-сайта компании, с которого оформлено письмо
		ПисьмоОформленоНаСайтеКомпании = "";
		НазначениеСайтаКомпании="";
		КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании = Справочники.КонтактЦентры.ПустаяСсылка();
		Если ПереченьСайтовКомпании.Количество()>0 Тогда
			
			Результат = НайдиСайтКомпанииВПисьме(СтрокаТЗ.ИнтернетПочтовоеСообщение, ПереченьСайтовКомпании);
			
			Если Результат ="" Тогда
				ПисьмоОформленоНаСайтеКомпании = "не определился";
				НазначениеСайтаКомпании = "";
				КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании = Справочники.КонтактЦентры.НайтиПоКоду("000000001");
			Иначе // Результат - строка таблицы значений
				ПисьмоОформленоНаСайтеКомпании 	= 	СокрЛП(Результат.Адрес);
				НазначениеСайтаКомпании			=	СокрЛП(Результат.Назначение);
				КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании = Результат.КонтактЦентр;
			КонецЕсли;
		КонецЕсли;
		
		//Запись в Реестр писем
		Регион = Конвертация.РегионПолучитьПоНомеруТелефона(СтрокаТЗ.МассивТелНомеровСтроками[0]);
		
		Загрузили = ПисьмоЗагрузить(СтрокаТЗ.Идентификатор, ТекущаяДата(), Регион, ПисьмоОформленоНаСайтеКомпании, СтрокаТЗ.МассивТелНомеровСтроками[0], СтрокаТЗ.ДатаОтправления, СтрокаТЗ.ОтправительАдрес, СтрокаТЗ.ПолучательАдрес, СтрокаТЗ.Текст, СтрокаТЗ.ИмяПользователяПочтовогоЯщика, СтрокаТЗ.Свойство1);
		
		Если Не Загрузили Тогда
			Продолжить;
		КонецЕсли;
		
		//Загрузить почтовые вложения
		ВложенияСохранить(СтрокаТЗ.ИнтернетПочтовоеСообщение);
		
		//Задачу на обратный звонок создать
		НовЗапись = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
		Телефон = Конвертация.ТелефонВнешнийНормализовать(СтрокаТЗ.МассивТелНомеровСтроками[0]);
		НовЗапись.Телефон 		= Телефон;
		НовЗапись.ДатаЗакрытия 	= Дата('00010101');
		НовЗапись.Прочитать();
		Если НовЗапись.Выбран() Тогда
			Продолжить;
		КонецЕсли;
		
		НовЗапись.Телефон 			= Телефон;
		НовЗапись.ДатаЗакрытия 		= Дата('00010101');
		НовЗапись.Тип 				= СтрокаТЗ.ТипЗадачи;
		НовЗапись.Исполнитель 		= КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании;
		НовЗапись.ИсполнительПлан 	= КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании;
		НовЗапись.Комментарий 		= "Заявка получена с сайта: " + ПисьмоОформленоНаСайтеКомпании+ ": " + НазначениеСайтаКомпании;
		НовЗапись.ДатаПостановки 	= СтрокаТЗ.Дата;
		НовЗапись.ДатаАктуальности 	= СтрокаТЗ.Дата+15*60;
		НовЗапись.ПисьмоИнициатор 	= СтрокаТЗ.Идентификатор;
		
		Попытка 
			НовЗапись.Записать();
			Успех = Истина;
		Исключение
			ЗаписьЖурналаРегистрации("Почта.ПисьмаЗагрузить", УровеньЖурналаРегистрации.Ошибка, , Данные, СтрШаблон("Ошибка записи задачи: %1", ОписаниеОшибки()));
			Возврат ЗначениеПоУмолчанию
		КонецПопытки
		
	КонецЦикла;
	Возврат Успех;
КонецФункции

Функция ПисьмаНежелательныеЗагрузить(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол = "POP3") Экспорт
	//Копия функции ПисьмаЗагрузить, но читает только папку "Нежелательная почта"
	
	ЗначениеПоУмолчанию = Ложь;
	
	Доступно = 		ТипЗнч(АдресСервера) = Тип("Строка")
	            И 	ТипЗнч(Порт) = Тип("Строка")
				И 	ТипЗнч(ИспользоватьSSL) = Тип("Булево")
				И 	ТипЗнч(Пользователь) = Тип("Строка")
				И 	ТипЗнч(Пароль) = Тип("Строка")
				И 	ЗначениеЗаполнено(АдресСервера)
				И 	ЗначениеЗаполнено(Порт)
				И 	ЗначениеЗаполнено(ИспользоватьSSL)
				И 	ЗначениеЗаполнено(Пользователь)
				И 	ЗначениеЗаполнено(Пароль);
	
	Данные = СтрШаблон("АдресСервера = %1, Порт = %2, ИспользоватьSSL = %3, Пользователь = %4, Пароль = %5, ПочтовыйПротокол = %6", АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("Почта.ПисьмаНежелательныеЗагрузить", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ЭлПочта, Данные, "Ошибка в типе или заполнении аргументов");
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
		
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
		ЗаписьЖурналаРегистрации("ПисьмаНежелательныеЗагрузить", УровеньЖурналаРегистрации.Ошибка, ,Данные, "Ошибка создания объекта ИнтернетПочта или подключения");
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	иПочта.ТекущийПочтовыйЯщик="Нежелательная почта";

	
	// Получи почтовые сообщения в виде заголовков (т.е. почтовые сообщения без текстов и вложений)
	// Фильтр (отбор) срабатывает только при протоколе IMAP - по факту фильт не срабатывает!!!
	//--------------------------------------------------------------------------------------------------------------------------------------	
	Попытка
		Если ПочтовыйПротокол = "IMAP" Тогда
			Отб = Новый Структура();
			//Отб.Вставить("ПослеДатыОтправления", НачалоДня(ТекущаяДата()) - 2*24*60*60);
			Отб.Вставить("ДатаОтправления", НачалоДня(ТекущаяДата()));
			МассивЗаголовков = иПочта.ПолучитьЗаголовки(Отб);
		Иначе
			МассивЗаголовков = иПочта.ПолучитьЗаголовки();
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ПисьмаНежелательныеЗагрузить", УровеньЖурналаРегистрации.Ошибка, ,Данные, ОписаниеОшибки());
		Возврат ЗначениеПоУмолчанию;
	КонецПопытки;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	//Найди письма-спам и сформируй массив чисел, п.с. индексы массива писем-заголовков, являющихся спамом
	//----------------------------------------------------------------------------------------------------
	ИндексыСпама = Новый Массив();
	Для i=0 По МассивЗаголовков.Количество()-1 Цикл
		//Если в письме указан адрес отравителя, тогда пропускаем его, несмотря на то, что это скорее всего спам
		Если МассивЗаголовков[i].Отправитель = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//Если спам, тогда добавь в массив индексов спама
		Если ОтправительЕстьСпаммер(МассивЗаголовков[i].Отправитель.Адрес) Тогда
			ИндексыСпама.Добавить(i);
		КонецЕсли;			
	КонецЦикла;	
	
	//Если в массиве заголовков есть сообщения, классифицированные как спам, тогда удали их из массива заголовков
	КоличествоСпама =  ИндексыСпама.Количество();
	Если КоличествоСпама>0 Тогда
		i = КоличествоСпама - 1; //Максимальный индекс в массиве ИндексыСпама
		Пока Истина Цикл
			
			// Удали из массива заголовков элемент, с индексом, сохраненным в массиве ИндексыСпама
			МассивЗаголовков.Удалить(ИндексыСпама[i]);	
			i = i - 1;
			Если i < 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	// Создадим таблицу значений в которую будем помещать полученные письма
	//----------------------------------------------------------------------
	ТЗПисьма = Новый ТаблицаЗначений;
	ТЗПисьма.Колонки.Добавить("ОтправительСервер");
	ТЗПисьма.Колонки.Добавить("ОтправительАдрес");
	ТЗПисьма.Колонки.Добавить("ОтправительИмя");
	ТЗПисьма.Колонки.Добавить("Идентификатор");  	//МеssageID
	ТЗПисьма.Колонки.Добавить("ТипТекста");
	ТЗПисьма.Колонки.Добавить("ИнтернетПочтовоеСообщение", 	Новый ОписаниеТипов("ИнтернетПочтовоеСообщение"));
	ТЗПисьма.Колонки.Добавить("МассивТелНомеровСтроками", 	Новый ОписаниеТипов("Массив"));	
	ТЗПисьма.Колонки.Добавить("ДатаОтправления");	//PostingDatе
	ТЗПисьма.Колонки.Добавить("Текст");
	ТЗПисьма.Колонки.Добавить("Тема");
	ТЗПисьма.Колонки.Добавить("Дата");
	ТЗПисьма.Колонки.Добавить("ТипЗадачи");
	ТЗПисьма.Колонки.Добавить("ПолучательАдрес");
	ТЗПисьма.Колонки.Добавить("ИмяПользователяПочтовогоЯщика");
	ТЗПисьма.Колонки.Добавить("Свойство1", 	Новый ОписаниеТипов("Строка")); // в тексте письма может быть строка вида ^luidor_property_1: Уфа (Лизинг)^, в этой строке Уфа (Лизинг) является значением свойства 1
		
	// Получи почтовые сообщения  (собственно почтовые сообщения со всеми текстами и вложениями)
	Попытка
		МассивСообщений = иПочта.Выбрать(Ложь, МассивЗаголовков, Истина);
	Исключение
		ЗаписьЖурналаРегистрации("ПисьмаНежелательныеЗагрузить", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());
		Возврат ЗначениеПоУмолчанию;
	КонецПопытки;
	
	// Заполним таблицу значений полученными сообщениями
	//--------------------------------------------------
	ТекущаяДатаНачалоДня = НачалоДня(ТекущаяДата());
	Для Каждого ПочтСообщение Из МассивСообщений Цикл
		//Обработай сообщения, отправленные текущим днем
		НовСтрока = ТЗПисьма.Добавить();
		
		НовСтрока.Идентификатор 			= СокрЛП(ПочтСообщение.ИдентификаторСообщения);  //МеssageID	
		НовСтрока.Тема 						= СокрЛП(ПочтСообщение.Тема);
		НовСтрока.Дата						= ТекущаяДата();
		НовСтрока.Текст						= ?(ПочтСообщение.Тексты.Количество()>0, ПочтСообщение.Тексты[0].Текст, "");	
		НовСтрока.ОтправительАдрес			= СокрЛП(ПочтСообщение.Отправитель.Адрес);
		НовСтрока.ОтправительСервер 		= СокрЛП(ПочтСообщение.Отправитель.Сервер);
		НовСтрока.ОтправительИмя 			= СокрЛП(ПочтСообщение.Отправитель.ОтображаемоеИмя);	
		НовСтрока.ИнтернетПочтовоеСообщение = ПочтСообщение;
		НовСтрока.ДатаОтправления 			= ПочтСообщение.ДатаОтправления; //PostingDate
		
		//Определи получателя
		ПолучательАдрес = "неопределено";
		Для Каждого Получатель Из ПочтСообщение.Получатели Цикл
			ПолучательАдрес						= Получатель.Адрес;
			Если СтрНайти(нрег(ПолучательАдрес), "@luidor")>0 Тогда
				ПолучательАдрес						= Получатель.Адрес;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//Определи получателя из поля копия
		Если ПолучательАдрес = "неопределено" Тогда
			Для Каждого Получатель Из ПочтСообщение.Копии Цикл
				ПолучательАдрес						= Получатель.Адрес;
				Если СтрНайти(нрег(ПолучательАдрес), "@luidor")>0 Тогда
					ПолучательАдрес						= Получатель.Адрес;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//Определи получателя из поля скрытая копия
		Если ПолучательАдрес = "неопределено" Тогда
			Для Каждого Получатель Из ПочтСообщение.СлепыеКопии Цикл
				ПолучательАдрес						= Получатель.Адрес;
				Если СтрНайти(нрег(ПолучательАдрес), "@luidor")>0 Тогда
					ПолучательАдрес						= Получатель.Адрес;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//Если отправитель скрыл список получателей, тогда выведем имя пользователя почтового ящика
		Если ПолучательАдрес = "неопределено" Или СокрЛП(ПолучательАдрес)="@" Тогда
			ПолучательАдрес = Пользователь;	
		КонецЕсли;
		НовСтрока.ПолучательАдрес			= ПолучательАдрес;
		
		//Сохрани пользователя почтового ящика (необходиомо для удаления писем
		НовСтрока.ИмяПользователяПочтовогоЯщика	= Пользователь;
		НовСтрока.ТипЗадачи = Перечисления.ТипЗадачи.ПрочаяПочта;
	КонецЦикла;
	иПочта.Отключиться();
	
	ПереченьСайтовКомпании = ПолучитьПереченьСайтовКомпании();	
	
	// Загрузим полученные письма в регист сведений "ЗадачиОбратныйЗвонок"
	//---------------------------------------------------------------------
	Для Каждого СтрокаТЗ Из ТЗПисьма Цикл
		
		СтрокаТЗ.МассивТелНомеровСтроками = ПолучитьМассивТелНомеровСтроками(СтрокаТЗ.ИнтернетПочтовоеСообщение.Тексты);
		
		//Исключаем из перечня номеров номер телефона самого сервиса Krible
		Если СтрокаТЗ.МассивТелНомеровСтроками.Количество()>0 Тогда
			Для Сч = 0 По СтрокаТЗ.МассивТелНомеровСтроками.Количество()-1 Цикл
				Если СтрокаТЗ.МассивТелНомеровСтроками[Сч] = "4997058290" Тогда
					СтрокаТЗ.МассивТелНомеровСтроками.Удалить(Сч);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//Если не удалось определить номер, тогда указываем MessageID вместо номера
		Если СтрокаТЗ.МассивТелНомеровСтроками.Количество()=0 Тогда 
			СтрокаТЗ.МассивТелНомеровСтроками.Добавить(СтрокаТЗ.Идентификатор);	
		КонецЕсли;
		
		//04.04.2017, +, Если определился номер телефона, тогда ищем свойства
		Если СтрокаТЗ.МассивТелНомеровСтроками.Количество()>0 Тогда 
			СтрокаТЗ.Свойство1 = ПолучиСвойство1(СтрокаТЗ.ИнтернетПочтовоеСообщение.Тексты);
		КонецЕсли;
				
		// Определение интернет-сайта компании, с которого оформлено письмо
		ПисьмоОформленоНаСайтеКомпании = "";
		НазначениеСайтаКомпании="";
		КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании = Справочники.КонтактЦентры.ПустаяСсылка();
		Если ПереченьСайтовКомпании.Количество()>0 Тогда
			
			Результат = НайдиСайтКомпанииВПисьме(СтрокаТЗ.ИнтернетПочтовоеСообщение, ПереченьСайтовКомпании);
			
			Если Результат ="" Тогда
				ПисьмоОформленоНаСайтеКомпании = "не определился";
				НазначениеСайтаКомпании = "";
				КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании = Справочники.КонтактЦентры.НайтиПоКоду("000000001");
			Иначе // Результат - строка таблицы значений
				ПисьмоОформленоНаСайтеКомпании 	= 	СокрЛП(Результат.Адрес);
				НазначениеСайтаКомпании			=	СокрЛП(Результат.Назначение);
				КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании = Результат.КонтактЦентр;
			КонецЕсли;
		КонецЕсли;
		
		//Запись в Реестр писем
		Регион = Конвертация.РегионПолучитьПоНомеруТелефона(СтрокаТЗ.МассивТелНомеровСтроками[0]);
		
		Загрузили = ПисьмоЗагрузить(СтрокаТЗ.Идентификатор, ТекущаяДата(), Регион, ПисьмоОформленоНаСайтеКомпании, СтрокаТЗ.МассивТелНомеровСтроками[0], СтрокаТЗ.ДатаОтправления, СтрокаТЗ.ОтправительАдрес, СтрокаТЗ.ПолучательАдрес, СтрокаТЗ.Текст, СтрокаТЗ.ИмяПользователяПочтовогоЯщика, СтрокаТЗ.Свойство1);
		
		Если Не Загрузили Тогда
			Продолжить;
		КонецЕсли;
		
		//Загрузить почтовые вложения
		ВложенияСохранить(СтрокаТЗ.ИнтернетПочтовоеСообщение);
		
		//Задачу на обратный звонок создать
		НовЗапись = РегистрыСведений.ЗадачиОбратныйЗвонок.СоздатьМенеджерЗаписи();
		Телефон = Конвертация.ТелефонВнешнийНормализовать(СтрокаТЗ.МассивТелНомеровСтроками[0]);
		НовЗапись.Телефон 		= Телефон;
		НовЗапись.ДатаЗакрытия 	= Дата('00010101');
		НовЗапись.Прочитать();
		Если НовЗапись.Выбран() Тогда
			Продолжить;
		КонецЕсли;
		
		НовЗапись.Телефон 			= Телефон;
		НовЗапись.ДатаЗакрытия 		= Дата('00010101');
		НовЗапись.Тип 				= СтрокаТЗ.ТипЗадачи;
		НовЗапись.Исполнитель 		= КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании;
		НовЗапись.ИсполнительПлан 	= КонтактЦентрОбрабатывающийЗаявкиСЭтогоСайтаКомпании;
		НовЗапись.Комментарий 		= "Заявка получена с сайта: " + ПисьмоОформленоНаСайтеКомпании+ ": " + НазначениеСайтаКомпании;
		НовЗапись.ДатаПостановки 	= СтрокаТЗ.Дата;
		НовЗапись.ДатаАктуальности 	= СтрокаТЗ.Дата+15*60;
		НовЗапись.ПисьмоИнициатор 	= СтрокаТЗ.Идентификатор;
		
		Попытка 
			НовЗапись.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("ПисьмаНежелательныеЗагрузить", УровеньЖурналаРегистрации.Ошибка, , Данные, СтрШаблон("Ошибка записи задачи: %1", ОписаниеОшибки()));
			Возврат ЗначениеПоУмолчанию
		КонецПопытки
		
	КонецЦикла;
	Возврат Истина;
КонецФункции

Функция ВложенияСохранить(Сообщение) Экспорт
	
	Возврат Ложь;
	//Записывает вложения писем в регистр сведений ПисьмаВложения
	
	Доступно = 		ТипЗнч(Сообщение) = Тип("ИнтернетПочтовоеСообщение")
				И	Сообщение.Вложения.Количество() > 0;
	
				
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;		
	
	Для Каждого i Из Сообщение.Вложения Цикл
		
		Если ТипЗнч(i.Данные) <> Тип("ДвоичныеДанные") Тогда
			Продолжить;
		КонецЕсли;
		Зап 				= РегистрыСведений.ПисьмаВложения.СоздатьМенеджерЗаписи();
		Зап.Сигнатура 		= Сообщение.ИдентификаторСообщения;
		Зап.Идентификатор	= i.Идентификатор;
		Зап.Прочитать();
		Если Зап.Выбран() Тогда
			Продолжить;
		КонецЕсли;
		
		Зап.Сигнатура 		= Сообщение.ИдентификаторСообщения;
		Зап.Идентификатор	= i.Идентификатор;
		ЗаполнитьЗначенияСвойств(Зап, i);
		
		Зап.ДанныеCтрокой	= Base64Строка(i.Данные);
		
		Попытка
			Зап.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("ВложенияСохранить", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("Сообщение.ИдентификаторСообщения = %1", Сообщение.ИдентификаторСообщения), ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецФункции

Функция ОтправительЕстьСпаммер(АдресОтправителя)
	// Если адрес отправителя пустой или не найден в регистре
	// ПисьмаСпам, тогда отправитель не считается спаммером
	
	Доступно =  ТипЗнч(АдресОтправителя)=Тип("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(АдресОтправителя);
	
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПисьмаСпам.АдресОтправителя КАК АдресОтправителя
	               |ИЗ
	               |	РегистрСведений.ПисьмаСпаммеры КАК ПисьмаСпам
	               |ГДЕ
	               |	ПисьмаСпам.АдресОтправителя = &АдресОтправителя";
	Запрос.УстановитьПараметр("АдресОтправителя", АдресОтправителя);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);  
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

Функция ПолучитьПереченьСайтовКомпании()
	// Возвращает список интернет-сайтов компании
	
	ПереченьСайтов = Новый ТаблицаЗначений();
	
	//В письме может быть несколько адресов сайтов, поэтому введем приоритет
	//Сайт luidorauto.ru самый неприоритетный (в заявках krible он может фигурировать в поле
	//"referer", а в поле "Страница вызова:" может быть luidor-ufa.ru. Пользователь должен
	//видеть сайт luidor-ufa.ru;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КонтактЦентрыПочтовыеФильтры.Ссылка КАК КонтактЦентр,
	|	КонтактЦентрыПочтовыеФильтры.Адрес КАК Адрес,
	|	КонтактЦентрыПочтовыеФильтры.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА КонтактЦентрыПочтовыеФильтры.Адрес ПОДОБНО ""%luidorauto.ru%""
	|			ТОГДА 10
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	Справочник.КонтактЦентры.ПочтовыеФильтры КАК КонтактЦентрыПочтовыеФильтры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ПереченьСайтов
	Иначе
		Возврат РезультатЗапроса.Выгрузить();
	КонецЕсли;

КонецФункции

Функция ПолучитьМассивТелНомеровСтроками(ТекстыПочтовогоСообщения)
		
	РАЗРЕШЕННЫЕ_СИМВОЛЫ = "0123456789+";
	
	МассивСтрок = Новый Массив;
	
	//Массив содержащий ключевые подстроки. Если такие подстроки будут найдены в строке,
	//тогда в этой строке пытаемся определить номер телефона. Если строка не содержит ключевую подстроку,
	//то такую строку пропускаем
	ПодстрокиПоиска = Новый Массив();
	ПодстрокиПоиска.Добавить("Телефон:");
	ПодстрокиПоиска.Добавить("Номер:");
	ПодстрокиПоиска.Добавить("Телефон автора:");
	ПодстрокиПоиска.Добавить("Контакты:");
	ПодстрокиПоиска.Добавить("Контактные данные:");

	
	Для Каждого КлючеваяПодстрока Из ПодстрокиПоиска Цикл //поиск ключевой подстроки	
		Для Каждого ТекстПочтовогоСообщения Из ТекстыПочтовогоСообщения Цикл
			Текст = "";
			
			Если ТекстПочтовогоСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML Тогда
				ЧтHTML = Новый ЧтениеHTML();
				ЧтHTML.УстановитьСтроку(ТекстПочтовогоСообщения.Текст);
				Построитель = Новый ПостроительDOM();
				ДокHTML = Построитель.Прочитать(ЧтHTML);	
				Попытка
					Текст =ДокHTML.Тело.ТекстовоеСодержимое;
				Исключение
					Прервать;
				КонецПопытки;
			Иначе
				Текст = ТекстПочтовогоСообщения.Текст;	
			КонецЕсли;
			
			
			Если СтрДлина(Текст) = 0 Тогда
				Продолжить
			КонецЕсли;
			
			ЧислоСтрок = СтрЧислоСтрок(Текст);
			
			Для i = 1 По ЧислоСтрок Цикл
				Стр = СокрЛП(СтрПолучитьСтроку(Текст, i));	
				Если СтрДлина(Стр) = 0 Тогда
					Продолжить
				КонецЕсли;
				
				//ПодстрокаПоиска = "Телефон:";
				ПодстрокаПоиска = КлючеваяПодстрока;
				ЧислоВхождений = СтрЧислоВхождений(Стр, ПодстрокаПоиска);
				
				Если ЧислоВхождений = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Для j=1 По ЧислоВхождений Цикл
					
					ПозицияПодстроки = СтрНайти(Стр, ПодстрокаПоиска,,, j);
					Если ПозицияПодстроки = 0 Тогда
						Продолжить
					КонецЕсли;
					
					 
					Подстрока = СокрЛП(Сред(Стр, ПозицияПодстроки+СтрДлина(КлючеваяПодстрока), СтрДлина(Стр)));   // 8 - это длина строки "Телефон:" 
					Подстрока = СтрЗаменить(Подстрока, " ", "");
					Подстрока = СтрЗаменить(Подстрока, "+7", "8");
					Подстрока = СтрЗаменить(Подстрока, "(", "");
					Подстрока = СтрЗаменить(Подстрока, ")", "");
					Подстрока = СтрЗаменить(Подстрока, "-", "");
					Подстрока = СтрЗаменить(Подстрока, "*","");
					
					ДлинаПодстроки = СтрДлина(Подстрока);
					Если ДлинаПодстроки = 0 Тогда
						Продолжить
					КонецЕсли;
					
					ПодПодСтрока="";
					Для k=1 По ДлинаПодстроки Цикл
						Символ = Сред(Подстрока, k, 1);
						
						Если СтрНайти(РАЗРЕШЕННЫЕ_СИМВОЛЫ, Символ)=0 Тогда
							Прервать;	
						КонецЕсли;
						ПодПодСтрока = ПодПодСтрока+Символ;
					КонецЦикла;
					
					ДлинаПодПодСтроки = СтрДлина(ПодПодСтрока);
					Если ДлинаПодПодСтроки = 0 Тогда
						Продолжить
					КонецЕсли;
					МассивСтрок.Добавить(ПодПодСтрока);
					
				КонецЦикла;	//каждое вхождение "Телефон:" в строку	
			КонецЦикла; //каждая строка многострочного текста
		КонецЦикла; // Каждый текст из текстов интернет-сообщения
	КонецЦикла; //каждая ключевая подстрока поиска ("Телефон:", "Номер:")
	
	Возврат МассивСтрок

КонецФункции 

Функция ПолучитьМассивТелНомеровСтрокамиИзТекста(Текст) Экспорт
		
	РАЗРЕШЕННЫЕ_СИМВОЛЫ = "0123456789+";
	
	МассивСтрок = Новый Массив;
	
	//Массив содержащий ключевые подстроки. Если такие подстроки будут найдены в строке,
	//тогда в этой строке пытаемся определить номер телефона. Если строка не содержит ключевую подстроку,
	//то такую строку пропускаем
	ПодстрокиПоиска = Новый Массив();
	ПодстрокиПоиска.Добавить("Телефон:");
	ПодстрокиПоиска.Добавить("Номер:");
	ПодстрокиПоиска.Добавить("Телефон автора:");
	ПодстрокиПоиска.Добавить("Контакты:");
	ПодстрокиПоиска.Добавить("Контактные данные:");

	
	Для Каждого КлючеваяПодстрока Из ПодстрокиПоиска Цикл //поиск ключевой подстроки				
		Для i = 1 По СтрЧислоСтрок(Текст) Цикл
			Стр = СокрЛП(СтрПолучитьСтроку(Текст, i));	
			Если СтрДлина(Стр) = 0 Тогда
				Продолжить
			КонецЕсли;
			
			ПодстрокаПоиска = КлючеваяПодстрока; 	//ПодстрокаПоиска = "Телефон:", "Номер:" и т.д.;
			ЧислоВхождений = СтрЧислоВхождений(Стр, ПодстрокаПоиска);
			Если ЧислоВхождений = 0 Тогда
				Продолжить
			КонецЕсли;
			
			Для j=1 По ЧислоВхождений Цикл
				
				ПозицияПодстроки = СтрНайти(Стр, ПодстрокаПоиска,,, j);
				Если ПозицияПодстроки = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Подстрока = СокрЛП(Сред(Стр, ПозицияПодстроки+СтрДлина(КлючеваяПодстрока), СтрДлина(Стр)));   // 8 - это длина строки "Телефон:" 
				Подстрока = СтрЗаменить(Подстрока, " ", "");
				Подстрока = СтрЗаменить(Подстрока, "+7", "8");
				Подстрока = СтрЗаменить(Подстрока, "(", "");
				Подстрока = СтрЗаменить(Подстрока, ")", "");
				Подстрока = СтрЗаменить(Подстрока, "-", "");
				Подстрока = СтрЗаменить(Подстрока, "*","");
				
				ДлинаПодстроки = СтрДлина(Подстрока);
				Если ДлинаПодстроки = 0 Тогда
					Продолжить
				КонецЕсли;
				
				ПодПодСтрока="";
				Для k=1 По ДлинаПодстроки Цикл
					Символ = Сред(Подстрока, k, 1);
					
					Если СтрНайти(РАЗРЕШЕННЫЕ_СИМВОЛЫ, Символ)=0 Тогда
						Прервать;	
					КонецЕсли;
					ПодПодСтрока = ПодПодСтрока+Символ;
				КонецЦикла;
				
				ДлинаПодПодСтроки = СтрДлина(ПодПодСтрока);
				Если ДлинаПодПодСтроки = 0 ИЛИ ДлинаПодПодСтроки < 10  Тогда
					Продолжить
				КонецЕсли;    
				
				МассивСтрок.Добавить(ПодПодСтрока);
				
			КонецЦикла;		//каждое вхождение "Телефон:" в строку	
		КонецЦикла; 		//каждая строка многострочного текста
	КонецЦикла; 			//каждая ключевая подстрока поиска ("Телефон:", "Номер:")
	
	Возврат МассивСтрок

КонецФункции  


Функция ПолучиСвойство1(ТекстыПочтовогоСообщения)
	
	//ищет в теле письма строчку вида ^luidor_property_1: Уфа (Лизинг)^ 
	// и должна вернуть значение свойства ,т..е строку "Уфа (Лизинг)" 
	
	ЗначениеПоУмолчанию = "";
	
	МассивСтрок = Новый Массив;
	
	//Массив содержащий ключевые подстроки. Если такие подстроки будут найдены в строке,
	//тогда в этой строке пытаемся определить номер телефона. Если строка не содержит ключевую подстроку,
	//то такую строку пропускаем
	ПодстрокиПоиска = Новый Массив();
	ПодстрокиПоиска.Добавить("^luidor_property_1:");
	
	Для Каждого КлючеваяПодстрока Из ПодстрокиПоиска Цикл //поиск ключевой подстроки	
		Для Каждого ТекстПочтовогоСообщения Из ТекстыПочтовогоСообщения Цикл
			Текст = "";
			
			Если ТекстПочтовогоСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML Тогда
				ЧтHTML = Новый ЧтениеHTML();
				ЧтHTML.УстановитьСтроку(ТекстПочтовогоСообщения.Текст);
				Построитель = Новый ПостроительDOM();
				ДокHTML = Построитель.Прочитать(ЧтHTML);	
				Попытка
					Текст =ДокHTML.Тело.ТекстовоеСодержимое;
				Исключение
					Прервать;
				КонецПопытки;
			Иначе
				Текст = ТекстПочтовогоСообщения.Текст;	
			КонецЕсли;
			
			
			Если СтрДлина(Текст) = 0 Тогда
				Продолжить
			КонецЕсли;
			
			ЧислоСтрок = СтрЧислоСтрок(Текст);
			
			Для i = 1 По ЧислоСтрок Цикл
				Стр = СокрЛП(СтрПолучитьСтроку(Текст, i));	
				Если СтрДлина(Стр) = 0 Тогда
					Продолжить
				КонецЕсли;
				
				//ПодстрокаПоиска = "Телефон:";
				ПодстрокаПоиска = КлючеваяПодстрока;
				ЧислоВхождений = СтрЧислоВхождений(Стр, ПодстрокаПоиска);
				
				Если ЧислоВхождений = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Для j=1 По ЧислоВхождений Цикл
					
					ПозицияПодстроки = СтрНайти(Стр, ПодстрокаПоиска,,, j);
					Если ПозицияПодстроки = 0 Тогда
						Продолжить
					КонецЕсли;
						 
					Подстрока = СокрЛП(Сред(Стр, ПозицияПодстроки+СтрДлина(КлючеваяПодстрока), СтрДлина(Стр)));   // 8 - это длина строки "Телефон:" 
					
										
					ДлинаПодстроки = СтрДлина(Подстрока);
					Если ДлинаПодстроки = 0 Тогда
						Продолжить
					КонецЕсли;
					
					ПодПодСтрока="";
					Для k=1 По ДлинаПодстроки Цикл
						Символ = Сред(Подстрока, k, 1);
						Если Символ="^" Тогда
							Прервать;	
						КонецЕсли;
						ПодПодСтрока = ПодПодСтрока+Символ;
					КонецЦикла;
					
					ДлинаПодПодСтроки = СтрДлина(ПодПодСтрока);
					Если ДлинаПодПодСтроки = 0 Тогда
						Продолжить
					КонецЕсли;
					МассивСтрок.Добавить(ПодПодСтрока);
					
				КонецЦикла;	//каждое вхождение "Телефон:" в строку	
			КонецЦикла; //каждая строка многострочного текста
		КонецЦикла; // Каждый текст из текстов интернет-сообщения
	КонецЦикла; //каждая ключевая подстрока поиска ("Телефон:", "Номер:")
	
	//Возврат МассивСтрок
	
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Возврат  МассивСтрок[0];

КонецФункции

Функция	НайдиСайтКомпанииВПисьме(Письмо, ПереченьСайтовКомпании)
	
	ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ = "";
	Результат = ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
		
	Если ТипЗнч(Письмо) <> Тип("ИнтернетПочтовоеСообщение") Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;
	
	Если ТипЗнч(ПереченьСайтовКомпании) <> Тип("ТаблицаЗначений") Тогда
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ ;
	КонецЕсли;
	
	Если ПереченьСайтовКомпании.Количество() = 0 Тогда 
		Возврат ЗНАЧЕНИЕ_ПО_УМОЛЧАНИЮ;
	КонецЕсли;
	
	Для Каждого СтрокаТЗ Из  ПереченьСайтовКомпании  Цикл
		
		Для Каждого ИнтернетТекст Из Письмо.Тексты Цикл
			
			ИмяСайта = СтрокаТЗ.Адрес;
			
			Если СтрНайти(ИнтернетТекст.Текст, ИмяСайта)>0 Тогда
				Результат = СтрокаТЗ;
				Возврат Результат;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат
КонецФункции

Функция ПисьмоЗагрузить(Сигнатура,  Дата, Регион, Инициатор, АбонентВнешний, ДатаОтправки='00010101000000', АдресОтправителя = "", АдресПолучателя="", Текст="", ИмяПользователяПочтовогоЯщика="", Свойство1="") Экспорт
	Загрузили = РегистрыСведений.Письма.Загрузить(Сигнатура,  Дата, Регион, Инициатор, АбонентВнешний, ДатаОтправки, АдресОтправителя, АдресПолучателя, ИмяПользователяПочтовогоЯщика, Свойство1);
	Если Загрузили Тогда
		РегистрыСведений.ПисьмаСодержание.Загрузить(Сигнатура, Текст);
	КонецЕсли;
	
	
	Возврат Загрузили 
КонецФункции

Функция ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол)
	//Возвращаемое значение подключенный объект интернет-почта или неопределено
	
	Данные = СтрШаблон("АдресСервера = %1, Порт = %2, ИспользоватьSSL = %3, Пользователь = %4, Пароль = %5, ПочтовыйПротокол = %6", АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол );
	
	Доступно = 		ТипЗнч(АдресСервера)	= Тип("Строка")
				И 	ТипЗнч(Порт) 			= Тип("Строка")
				И	ТипЗнч(ИспользоватьSSL)	= Тип("Булево")
				И	ТипЗнч(Пользователь) 	= Тип("Строка")
				И 	ТипЗнч(Пароль) 			= Тип("Строка")
				И	ТипЗнч(ПочтовыйПротокол)	= Тип("Строка")	
				И 	ЗначениеЗаполнено(АдресСервера)
				И	ЗначениеЗаполнено(Порт)
				И	ЗначениеЗаполнено(Пользователь)
				И	ЗначениеЗаполнено(Пароль)
				И	ЗначениеЗаполнено(ПочтовыйПротокол);
	
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("ПолучиОбъектИнтернетПочта", УровеньЖурналаРегистрации.Ошибка, , Данные, "Ошибка в типе или заполнении аргументов");
		Возврат Неопределено;
	КонецЕсли;
	
	//Создать объект Интернет - почта
	Попытка
		иПочта = Новый ИнтернетПочта;
	Исключение
		ЗаписьЖурналаРегистрации("ПолучиОбъектИнтернетПочта", УровеньЖурналаРегистрации.Ошибка, , Данные, СтрШаблон("Ошибка создания объекта ИнтернетПочта: %1",ОписаниеОшибки()));
		Возврат Неопределено;
	КонецПопытки;
	
	//Создать почтовый профиль
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Если 	ПочтовыйПротокол = "POP3"	Тогда		
			Профиль.АдресСервераPOP3		=	АдресСервера;
			Профиль.ПортPOP3				=	Число(Порт);
			Профиль.ИспользоватьSSLPOP3 	=	ИспользоватьSSL;
			Профиль.Пользователь			=	Пользователь;
			Профиль.Пароль					=	Пароль;	
			ПротоколПочты					=	ПротоколИнтернетПочты.POP3;	
	ИначеЕсли 	ПочтовыйПротокол = "IMAP"	Тогда	
			Профиль.АдресСервераIMAP		=	АдресСервера;
			Профиль.ПортIMAP				=	Число(Порт);
			Профиль.ИспользоватьSSLIMAP		=	ИспользоватьSSL;
			Профиль.ПользовательIMAP		=	Пользователь;
			Профиль.ПарольIMAP				=	Пароль;
			ПротоколПочты					=   ПротоколИнтернетПочты.IMAP;		
	КонецЕсли;

	//Подключиться
	//------------
	Попытка
		иПочта.Подключиться(Профиль,	ПротоколПочты);	
	Исключение
		ЗаписьЖурналаРегистрации("Почта.ПисьмаЗагрузить", УровеньЖурналаРегистрации.Ошибка, , Данные, СтрШаблон("Ошибка подключения к почтовому серверу: %1)", ОписаниеОшибки()));
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат иПочта;
КонецФункции

Функция УдалитьСообщение(Сигнатура) Экспорт
	//Помечает на удаление почтовое сообщение на почтовом сервере
	//Параметры:
	//	Сигнатура - сигнатура почтового сообщения
	
	Данные = "Сигнатура ="+ Сигнатура;
	ЗначениеПоУмолчанию = "Ошибка";
	
	//Определи имя пользователя почтового ящика
	//--------------------------------------------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Письма.ИмяПользователяПочтовогоЯщика КАК ИмяПользователяПочтовогоЯщика
	               |ИЗ
	               |	РегистрСведений.Письма КАК Письма
	               |ГДЕ
	               |	Письма.Сигнатура ПОДОБНО &Сигнатура
	               |	И Письма.ИмяПользователяПочтовогоЯщика <> &ПустоеИмяПользователяПочтовогоЯщика";
	Запрос.УстановитьПараметр("Сигнатура", Сигнатура+"%");
	Запрос.УстановитьПараметр("ПустоеИмяПользователяПочтовогоЯщика", "");
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию+": не найдено имя пользователя почтового ящика"
	КонецЕсли;
	ИмяПользователяПочтовогоЯщика = РезультатЗапроса.Выгрузить()[0][0];
	
	
	//Получи параметры профиля интернет почты из файла ресурсов
	//---------------------------------------------------------------------------------    
	
	Настройки 	= "";	 
	ИмяПарам	= "Ресурс_ПрофилиЭлПочты";
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	Пока Выборка.Следующий() Цикл
		Настройки = Выборка.Настройки;	
	КонецЦикла;
	
	//Прочитай из настроек учетные данные для luidorexpertALL@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("Прочитать()", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетных записей почты");
			Возврат "Ошибка";
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли; 

	ЧтеXML = Новый ЧтениеXML();
	ЧтеXML.УстановитьСтроку(Настройки);
	Постр = Новый ПостроительDOM();
	ДокДом = Постр.Прочитать(ЧтеXML);
	Резолвер = Новый РазыменовательПространствИменDOM(ДокДом);
	
	//Шаблон выражения XPath, указано имя пользователя одного из почтовых ящиков
	//-------------------------------------------------------------------------------
	ТекстВыражения = "/root/InternetMailProfiles/InternetMailProfile[@DoReading='true' and @IMAPUser='LuidorUser160@main.luidorauto.ru' or @User='LuidorUser160@main.luidorauto.ru']"; // Получи узлы с именем InternetMailProfile, у которого атрибут MailProtocol=true  и MailProtocol='IMAP' и IMAPUser='LuidorUser160@main.luidorauto.ru
	
	//Собственно выражение XPath, указано имя пользователя требуемого почтового ящика
	//----------------------------------------------------------------------------------------------------------------
	ТекстВыражения = СтрЗаменить(ТекстВыражения, "LuidorUser160@main.luidorauto.ru", ИмяПользователяПочтовогоЯщика);

	
	Попытка	
		Выр 	= ДокДом.СоздатьВыражениеXPath(ТекстВыражения, Резолвер);
		ПлановыйТипРезультата 		= ТипРезультатаDOMXPath.Любой;
		РезультатКакВыборка			= Выр.Вычислить(ДокДом, ПлановыйТипРезультата);
	Исключение
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("УдалитьСообщение", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ЭлПочта, Данные, Комментарий);
		Возврат ЗначениеПоУмолчанию+ " : ошибка в выражении XPath";
	КонецПопытки;
	
	УзелДОМ = РезультатКакВыборка.ПолучитьСледующий();
	Если ТипЗнч(УзелДОМ) <> Тип("ЭлементDOM") Тогда
			Комментарий = "Выражение XPath не вернуло узел DOM";
		    ЗаписьЖурналаРегистрации("УдалитьСообщение", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ЭлПочта, Данные, Комментарий);
			Возврат ЗначениеПоУмолчанию+ " : выражение XPath не вернуло узел DOM";
	КонецЕсли;
	
	//Определи почтовый протокол
	//---------------------------------------------------------------------
	ПочтовыйПротокол 			=  УзелДОМ.ПолучитьАтрибут("MailProtocol");
	
	//Прочитай настройки обмена данными в зависимости от протокола
	//---------------------------------------------------------------------
	Если  ПочтовыйПротокол = "IMAP" Тогда
		АдресСервера 	= 			УзелДОМ.ПолучитьАтрибут("IMAPServerAdress");
		Порт 			=			УзелДОМ.ПолучитьАтрибут("IMAPPort");
		ИспользоватьSSL	=	Булево(	УзелДОМ.ПолучитьАтрибут("IMAPUseSSL"));
		Пользователь 	=			УзелДОМ.ПолучитьАтрибут("IMAPUser");
		Пароль 			= 			УзелДОМ.ПолучитьАтрибут("IMAPPassword");     
	Иначе //POP3
		АдресСервера 	= 			УзелДОМ.ПолучитьАтрибут("POP3ServerAdress");
		Порт 			=			УзелДОМ.ПолучитьАтрибут("POP3Port");
		ИспользоватьSSL	=	Булево(	УзелДОМ.ПолучитьАтрибут("POP3UseSSL"));
		Пользователь 	=			УзелДОМ.ПолучитьАтрибут("User");
		Пароль 			= 			УзелДОМ.ПолучитьАтрибут("Password");  
	КонецЕсли;
	
	//Создай объект ИнтернетПочта
	//---------------------------------------------------------------------------------------------------------------------------------------
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
		Комментарий = "Ошибка создания объекта ИнтернетПочта";
		ЗаписьЖурналаРегистрации("УдалитьСообщение", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ЭлПочта, Данные, Комментарий);
		Возврат ЗначениеПоУмолчанию+": "+Комментарий;
	КонецЕсли;
	
	//Прочитай заголовки почтовых сообщений
	//-----------------------------------------------------------------------------------------------------------------------------------------
	МассивСообщений = иПочта.ПолучитьЗаголовки();	
	Если МассивСообщений.Количество()=0 Тогда
		Комментарий = "Массив почтовых сообщений пуст";
		ЗаписьЖурналаРегистрации("УдалитьСообщение", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ЭлПочта, Данные, Комментарий);
		Возврат ЗначениеПоУмолчанию+": " + Комментарий;
	КонецЕсли;

	//Сформируй массив из помечаемых на удаление почтовых сообщений
	//--------------------------------------------------------------------
	МассивУдаляемыхСообщений = Новый Массив();
	Для Каждого Сообщ Из МассивСообщений Цикл
		Если СтрНайти(Сообщ.ИдентификаторСообщения, Сигнатура)<>0 Тогда
			МассивУдаляемыхСообщений.Добавить(Сообщ);	
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если МассивУдаляемыхСообщений.Количество()=0 Тогда
		Возврат ЗначениеПоУмолчанию+": массив удаляемых сообщений пуст!";
	КонецЕсли;
	
	Попытка
		//POP3 сразу удалит сообщение, IMAP - пометит на удаление
		//-------------------------------------------------------
		иПочта.УдалитьСообщения(МассивУдаляемыхСообщений);   
		
		//IMAP: непосредственное удаление помеченных на удаление писем
		//-------------------------------------------------------------
		Если  ПочтовыйПротокол = "IMAP" Тогда
			иПочта.ОчиститьУдаленныеСообщения();
		КонецЕсли;
		
		иПочта.Отключиться();
	Исключение
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ЭлПочта.ПисьмоОтправитьАсинхронно().Почта.Подключиться()", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ЭлПочта, Данные, Комментарий);
		
		//вывод сообщения пользователю, если реализован метод обработки сообщений пользователю из фонового задания
		Сообщ = Новый СообщениеПользователю();
		Сообщ.Текст ="Данные: "+Данные+"; Ошибка: "+ Комментарий;
		Сообщ.Сообщить();

		Возврат ЗначениеПоУмолчанию+": "+Комментарий; 
	КонецПопытки;	
	
	Возврат "";
КонецФункции

Функция ОчистиСодержаниеПисем() Экспорт
	Попытка
		РегистрыСведений.ПисьмаСодержание.Очистить();
	Исключение
		ЗаписьЖурналаРегистрации("ОчистиСодержаниеПисем()", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.ПисьмаСодержание,,ОписаниеОшибки());
	КонецПопытки	 
КонецФункции


//************************************************************************************************************************************
// Обработка исходящих сообщений электронной почты
//************************************************************************************************************************************

Функция ВыполнениеПланаПоТрафикуНаПочту()Экспорт
	
	ИмяФайла1 	= "C:\Users\Public\Documents\MonthTrafic.html";	// отчет с начала месяца до вчерашний день
	ИмяФайла2	= "C:\Users\Public\Documents\DayTrafic.html";	// отчет за вчерашний день
	
	ТекДата = ТекущаяДата();

	//Отчет с начала месяца по вечер вчерашнего дня
	//-----------------------------------------------
	Отч1 = Отчеты.ОтчетПоЦелевомуТрафикуЧерезКонтактЦентрСОктября2020_ВыпПланаПоТрафику.Создать();
	Отч1.ЗагрузитьНастройкиПриОтправкеНаПочту();
	Отч1.Период.ДатаНачала 		= НачалоМесяца(ТекДата);
	Отч1.Период.ДатаОкончания	= КонецДня(ТекДата);

	ТаблДок1 = Новый ТабличныйДокумент();
	Отч1.СкомпоноватьРезультат(ТаблДок1);
	ТаблДок1.Записать(ИмяФайла1, ТипФайлаТабличногоДокумента.HTML5);
	
	Заголовок1 =  Формат(Отч1.Период.ДатаНачала, "ДФ=dd.MM.yyyy")+" - "+Формат(Отч1.Период.ДатаОкончания, "ДФ=dd.MM.yyyy");
	
	//Отчет с за вчерашний день
	//-------------------------
	Отч2 = Отчеты.ОтчетПоЦелевомуТрафикуЧерезКонтактЦентрСОктября2020_ВыпПланаПоТрафику.Создать();
	
	Отч2.ЗагрузитьНастройкиПриОтправкеНаПочту();
	Отч2.Период.ДатаНачала 		= НачалоДня(ТекДата);
	Отч2.Период.ДатаОкончания	= КонецДня(ТекДата);

	ТаблДок2 = Новый ТабличныйДокумент();
	Отч2.СкомпоноватьРезультат(ТаблДок2);
	ТаблДок2.Записать(ИмяФайла2, ТипФайлаТабличногоДокумента.HTML5);
	
	Заголовок2 =  Формат(Отч2.Период.ДатаНачала, "ДФ=dd.MM.yyyy")+" - "+Формат(Отч2.Период.ДатаОкончания, "ДФ=dd.MM.yyyy");

	//Таблица значений - вложений к письму
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("ИмяФайла");
	ТЗ.Колонки.Добавить("НазваниеВложения");
	Новая = ТЗ.Добавить();
	Новая[0] = ИмяФайла1;
	Новая[1] = Заголовок1;
	Новая = ТЗ.Добавить();
	Новая[0] = ИмяФайла2;
	Новая[1] = Заголовок2;

	ПисьмоОтправить("info@luidor.ru", "v.fedin@luidor.ru", , "KoshelevSS@luidor.ru", "Выполнение плана по трафику", "См.вложения",  "Агрегатор", Ложь, 587, ТЗ);
	

КонецФункции

Функция ПисьмоОтправить(От="KoshelevSS@luidor.ru", Кому="KoshelevSS@luidor.ru", Копия="KoshelevSS@luidor.ru", СкрытаяКопия="KoshelevSS@luidor.ru", Тема="Перезвоните клиенту на номер: ", Содержание="Перезвоните клиенту на номер: ",  ОтображаемоеИмяОтправителя = "Агрегатор: обращение с сайта или непринятый звонок", ОтправлятьФонЗаданием = Ложь, ПортSMTP = 25, Вложения = Неопределено) Экспорт
	//Функция отправляет запрос почтовому серверу на отправку электронного письма
	//Параметры:
	//	От - имя отправителя; Кому - имя получателя; Копия	- имя получателя копии; СкрытаяКопия- имя получатея скрытой копии; Тема - тема письма; Содержание		- содержание письма;
	//	Отображаемое имя отправителя	- имя, отображаемое рядом с От
	//  Отправлять фоновым заданием		- если истина, тогда отправка выплняется фоновым заданием
	Данные = "От = "+От+"; Кому = "+Кому+"; Копия = "+Копия+"; СкрытаяКопия = "+СкрытаяКопия +"; Тема= "+Тема+"; Содержание="+Содержание+ "; ОтправлятьФонЗаданием = "+ОтправлятьФонЗаданием;
	
	ТекстСообщения = "";
	ТекстСообщения = ?(Не ЗначениеЗаполнено(От), 					"Не указан адрес отправителя. ", 		ТекстСообщения);
	ТекстСообщения = ?(Не ЗначениеЗаполнено(Кому), 					"Не указан адрес получателя. ", 		ТекстСообщения);
	ТекстСообщения = ?(Не ЗначениеЗаполнено(Тема), 					"Не указана тема. ", 					ТекстСообщения);
	ТекстСообщения = ?(Не ЗначениеЗаполнено(Содержание), 			"Не заполнено содержание", 				ТекстСообщения);	
	
	Если СтрДлина(ТекстСообщения) > 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	От				= СокрЛП(От);
	Кому			= СокрЛП(Кому);
	Копия			= СокрЛП(Копия);
	СкрытаяКопия	= СокрЛП(СкрытаяКопия);
	Тема			= СокрЛП(Тема);
	Содержание		= СокрЛП(Содержание);
	
	Если ОтправлятьФонЗаданием Тогда
		ПараметрыФЗ = Новый Массив();
		ПараметрыФЗ.Добавить(От);
		ПараметрыФЗ.Добавить(Кому);
		ПараметрыФЗ.Добавить(Копия);
		ПараметрыФЗ.Добавить(СкрытаяКопия);
		ПараметрыФЗ.Добавить(Тема);
		ПараметрыФЗ.Добавить(Содержание);
		ПараметрыФЗ.Добавить(ОтображаемоеИмяОтправителя);
		ПараметрыФЗ.Добавить(25);
		ПараметрыФЗ.Добавить(Вложения);
		ИдентификаторФонЗадания = "";
		ФоновыеЗадания.Выполнить("ЭлПочта.ПисьмоОтправитьАсинхронно", ПараметрыФЗ, ИдентификаторФонЗадания, "Отправка эл.письма"); 
	Иначе
		
		Профиль = Новый ИнтернетПочтовыйПрофиль;
		Профиль.АдресСервераSMTP					= "mail.luidorauto.ru";
		Профиль.ПортSMTP							= 25;
		Профиль.ПользовательSMTP					= "LuidorUser160@main.luidorauto.ru";
		Профиль.ПарольSMTP							= "luidor1423";
		Профиль.ТолькоЗащищеннаяАутентификацияSMTP  = ложь;
		Профиль.ИспользоватьSSLSMTP 				= Ложь;    
		
		Профиль.АдресСервераIMAP					=	"mail.luidorauto.ru";
		Профиль.ПортIMAP							=	993;
		Профиль.ПользовательIMAP					=	"LuidorUser160@main.luidorauto.ru";
		Профиль.ПарольIMAP							=	"luidor1423";
		Профиль.ИспользоватьSSLIMAP					=	Ложь;
		Профиль.ТолькоЗащищеннаяАутентификацияIMAP 	=   Ложь;
		
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Отправитель.Адрес 					= От;	
		Письмо.Отправитель.Кодировка 				= "windows-1251";
		Письмо.Отправитель.ОтображаемоеИмя 			= ОтображаемоеИмяОтправителя;
		
		Если СтрНайти(Кому, ";")>0 Тогда
			МассивСтрок = СтрРазделить(Кому, ";");
			Для Каждого Эл Из МассивСтрок Цикл
				Письмо.Получатели.Добавить(СокрЛП(Эл));		
			КонецЦикла;
		Иначе
			Письмо.Получатели.Добавить(Кому);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Копия) Тогда
			Если СтрНайти(Копия, ";")>0 Тогда
				МассивСтрок = СтрРазделить(Копия, ";");
				Для Каждого Эл Из МассивСтрок Цикл
					Письмо.Копии.Добавить(СокрЛП(Эл));		
				КонецЦикла;
			Иначе
				Письмо.Получатели.Добавить(Копия);	
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СкрытаяКопия) Тогда
			Если СтрНайти(СкрытаяКопия, ";")>0 Тогда
				МассивСтрок = СтрРазделить(Копия, ";");
				Для Каждого Эл Из МассивСтрок Цикл
					Письмо.СлепыеКопии.Добавить(СокрЛП(Эл));		
				КонецЦикла;
			Иначе
				Письмо.Получатели.Добавить(СкрытаяКопия);	
			КонецЕсли;
		КонецЕсли;
		
		Письмо.Тема	 = Тема;	
		ТекстПисьма	 = Содержание;
		Письмо.Тексты.Добавить(ТекстПисьма, типТекстаПочтовогоСообщения.HTML); 
		
		Если ТипЗнч(Вложения) = Тип("ТаблицаЗначений") Тогда
			Для Каждого i Из Вложения Цикл
				Письмо.Вложения.Добавить(i[0], i[1]);
			КонецЦикла;
		КонецЕсли;
		
		Письмо.УведомитьОДоставке = Ложь;
		
		Почта = Новый ИнтернетПочта;  
		ПротоколПолученияПочты	=   ПротоколИнтернетПочты.IMAP;
		Попытка
			Почта.Подключиться(Профиль, ПротоколПолученияПочты);
			РезультатОтправки = Почта.Послать(Письмо);			
			
			Если РезультатОтправки.Количество()>0 Тогда
				Комментарий = "";
				Для Каждого Эл Из РезультатОтправки Цикл
					Комментарий = Комментарий + Строка(Эл.Значение) + "; ";			
				КонецЦикла;    
				ЗаписьЖурналаРегистрации("Отправить сообщение (не асинхронно)", УровеньЖурналаРегистрации.Ошибка,,Данные, Комментарий);
				Возврат Ложь;	
			КонецЕсли;
		Исключение  
			Почта.Отключиться();
			ЗаписьЖурналаРегистрации("Отправить сообщение (не асинхронно)", УровеньЖурналаРегистрации.Ошибка,,Данные, ОписаниеОшибки());
			Возврат Ложь;
		КонецПопытки;  
		
		//Если оказались здесь, тогда письмо ушло клиенту по SMTP. Пересылка письма в папку отправленные по IMAP. Даже если возникла ошибка в пересылке в папку отправленные возвращаем Истина, т.к. письмо клиенту по SMTP ушло
		Попытка
			Почта.ТекущийПочтовыйЯщик	= "Отправленные";
			РезультатОтправки 			= Почта.Послать(Письмо,,ПротоколИнтернетПочты.IMAP);	
			Если РезультатОтправки.Количество()>0 Тогда //Получены ошибки
				Комментарий = "";
				Для Каждого i Из РезультатОтправки Цикл
					Комментарий = Комментарий + Строка(i.Значение) + "; ";			
				КонецЦикла;	
				ЗаписьЖурналаРегистрации("Переслать сообщение по IMAP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);		
				Возврат Истина;	
			КонецЕсли;
		Исключение
			Почта.Отключиться();
			ЗаписьЖурналаРегистрации("Переслать сообщение по IMAP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());		
			Возврат Истина;
		КонецПопытки;
		
		Почта.Отключиться();
		Возврат Истина;	
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция ПисьмоОтправитьАсинхронно(От = "KoshelevSS@luidor.ru", Кому = "KoshelevSS@luidor.ru", Копия = "", СкрытаяКопия = "", Тема="", Содержание="", ОтображаемоеИмяОтправителя = "Агрегатор: обращение с сайта или непринятый звонок", ПортSMTP = 587, Вложения) Экспорт
	// Функция определена как экспортная только потому, что вызывается фоновым заданием
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP					= "mail.luidorauto.ru";
	Профиль.ПортSMTP							= ПортSMTP;
	Профиль.ПользовательSMTP					= "LuidorUser160@main.luidorauto.ru";
	Профиль.ПарольSMTP							= "luidor1423";
	Профиль.ТолькоЗащищеннаяАутентификацияSMTP 	= ложь;
	Профиль.ИспользоватьSSLSMTP 				= Ложь;   
	
	Профиль.АдресСервераIMAP					= "mail.luidorauto.ru";
	Профиль.ПортIMAP							= 993;
	Профиль.ПользовательIMAP					= "LuidorUser160@main.luidorauto.ru";
	Профиль.ПарольIMAP							= "luidor1423";
	Профиль.ИспользоватьSSLIMAP					= Ложь;
	Профиль.ТолькоЗащищеннаяАутентификацияIMAP 	= Ложь;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;	
	Письмо.Отправитель.Адрес 					= От; // абсолютно любой адрес	
	Письмо.Отправитель.Кодировка 				= "windows-1251";
	Письмо.Отправитель.ОтображаемоеИмя 			= ОтображаемоеИмяОтправителя;	
	
	Если СтрНайти(Кому, ";")>0 Тогда
		МассивСтрок = СтрРазделить(Кому, ";");
		Для Каждого Эл Из МассивСтрок Цикл
			Письмо.Получатели.Добавить(СокрЛП(Эл));		
		КонецЦикла;
	Иначе
		Письмо.Получатели.Добавить(Кому);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Копия) Тогда
		Если СтрНайти(Копия, ";")>0 Тогда
			МассивСтрок = СтрРазделить(Копия, ";");
			Для Каждого Эл Из МассивСтрок Цикл
				Письмо.Копии.Добавить(СокрЛП(Эл));		
			КонецЦикла;
		Иначе
			Письмо.Получатели.Добавить(Копия);	
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СкрытаяКопия) Тогда
		Если СтрНайти(СкрытаяКопия, ";")>0 Тогда
			МассивСтрок = СтрРазделить(Копия, ";");
			Для Каждого Эл Из МассивСтрок Цикл
				Письмо.СлепыеКопии.Добавить(СокрЛП(Эл));		
			КонецЦикла;
		Иначе
			Письмо.Получатели.Добавить(СкрытаяКопия);	
		КонецЕсли;
	КонецЕсли;
	
	Письмо.Тема = Тема;
	ТекстПисьма = Содержание;
	
	Письмо.Тексты.Добавить(ТекстПисьма, типТекстаПочтовогоСообщения.HTML); // если верстку не используешь, то типТекстаПочтовогоСообщения.ПростойТекст
	
	Если ТипЗнч(Вложения) = Тип("ТаблицаЗначений") Тогда
		Для Каждого i Из Вложения Цикл
			Письмо.Вложения.Добавить(i[0], i[1]);
		КонецЦикла;
	КонецЕсли;
	
	Письмо.УведомитьОДоставке = Ложь;
	
	Данные = "От="+От+"; Кому="+Кому+"; Тема="+Тема+"; Содержание="+Содержание;
	
	
	йПочта = Новый ИнтернетПочта; 
	ПротоколПолученияПочты	=   ПротоколИнтернетПочты.IMAP;
	Попытка
		йПочта.Подключиться(Профиль, ПротоколПолученияПочты);
	Исключение
		ОписаниеОш = ОписаниеОшибки();  
		ЗаписьЖурналаРегистрации("ЭлПочта.ПисьмоОтправитьАсинхронно().Почта.Подключиться()", УровеньЖурналаРегистрации.Ошибка,,Данные,ОписаниеОш);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данные: "+Данные+"; Ошибка: "+ ОписаниеОш);
		Возврат "" 
	КонецПопытки;
	
	Попытка
		РезультатОтправки = йПочта.Послать(Письмо);
		
		Если РезультатОтправки.Количество()>0 Тогда
			Комментарий = "";
			Для Каждого Эл Из РезультатОтправки Цикл
				Комментарий = Комментарий + Строка(Эл.Значение) + "; ";			
			КонецЦикла;      
			ЗаписьЖурналаРегистрации("Отправить сообщение (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, ,Данные, Комментарий);
			Возврат "";	
		КонецЕсли;
		
		//вывод сообщения пользователю, если реализован метод обработки сообщений пользователю из фонового задания
		Если РезультатОтправки.Количество()>0 Тогда
			Для Каждого Эл Из РезультатОтправки Цикл
				Сообщить(Эл.Ключ+" ; " + Эл.Значение);
			КонецЦикла;
		КонецЕсли;
		
	Исключение
		Комментарий = ОписаниеОшибки();    
		ЗаписьЖурналаРегистрации("ЭлПочта.ПисьмоОтправитьАсинхронно().Почта.Послать()", УровеньЖурналаРегистрации.Ошибка, ,Данные, Комментарий);
		
		//вывод сообщения пользователю, если реализован метод обработки сообщений пользователю из фонового задания   
		Возврат "";
	КонецПопытки;
	
	//Если оказались здесь, тогда письмо ушло клиенту по SMTP. Пересылка письма в папку отправленные по IMAP. Даже если возникла ошибка в пересылке в папку отправленные возвращаем Истина, т.к. письмо клиенту по SMTP ушло
	Попытка
		йПочта.ТекущийПочтовыйЯщик	= "Отправленные";
		РезультатОтправки 			= йПочта.Послать(Письмо,,ПротоколИнтернетПочты.IMAP);	
		
		Если РезультатОтправки.Количество()>0 Тогда //Получены ошибки
			Комментарий = "";
			Для Каждого i Из РезультатОтправки Цикл
				Комментарий = Комментарий + Строка(i.Значение) + "; ";			
			КонецЦикла;	
			ЗаписьЖурналаРегистрации("Переслать сообщение по IMAP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);		
			Возврат Ложь;	
		КонецЕсли;
	Исключение
		йПочта.Отключиться();
		ЗаписьЖурналаРегистрации("Переслать сообщение по IMAP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());		
		Возврат Ложь;
	КонецПопытки;
	йПочта.Отключиться();
	Возврат "";
КонецФункции

#Область ОУ_Почта

Функция ОУ_ПисьмоОтправить(От="KoshelevSS@luidor.ru", Кому="KoshelevSS@luidor.ru", Копия="KoshelevSS@luidor.ru", СкрытаяКопия="KoshelevSS@luidor.ru", Тема="Документы ", Содержание="Документы",  Вложения = Неопределено, ОтображаемоеИмяОтправителя = "Техцентр Луидор", ОтправлятьФонЗаданием = Ложь, ПортSMTP = 587) Экспорт
	//Функция отправляет запрос почтовому серверу на отправку электронного письма
	//Параметры:
	//	От 								- имя отправителя;
	//	Кому							- имя получателя;
	//	Копия							- имя получателя копии;
	//	СкрытаяКопия					- имя получатея скрытой копии;
	//	Тема							- тема письма;
	//	Содержание						- содержание (тело) письма;
	//  Вложения						- таблица значений из вложений
	//	Отображаемое имя отправителя	- имя, отображаемое рядом с От
	//  Отправлять фоновым заданием		- если истина, тогда отправка выплняется фоновым заданием
	//	ПортSMTP		- если 587, тогда 1С авторизуется на почтовом сервере и сможет отправлять письма наружу (а не только внутри домена), например
	//						отправятся письма на @vladauto.com? при этом ограничивается количество одновременно отправляемых писем (сейчас настроено 64 письма);
	//					- если 25, тогда 1С не авторизуется на почтовом сервере, поэтому может отправлять письма только внутри домена, но нет ограничения на количество
	//						одновременно отправляемых писем
		
	ЗначениеПоУмолчанию = Ложь;
	Данные = "От = "+От+"; Кому = "+Кому+"; Копия = "+Копия+"; СкрытаяКопия = "+СкрытаяКопия +"; Тема= "+Тема+"; Содержание="+Содержание+ "; ОтправлятьФонЗаданием = "+ОтправлятьФонЗаданием;

	ТекстСообщения = "";
	ТекстСообщения = ?(Не ЗначениеЗаполнено(От), 					"Не указан адрес отправителя. ", 		ТекстСообщения);
	ТекстСообщения = ?(Не ЗначениеЗаполнено(Кому), 					"Не указан адрес получателя. ", 		ТекстСообщения);
	ТекстСообщения = ?(Не ЗначениеЗаполнено(Тема), 					"Не указана тема. ", 					ТекстСообщения);
				
	От				= СокрЛП(От);
	Кому			= СокрЛП(Кому);
	Копия			= СокрЛП(Копия);
	СкрытаяКопия	= СокрЛП(СкрытаяКопия);
	Тема			= СокрЛП(Тема);
	Содержание		= СокрЛП(Содержание);
	
	Если ОтправлятьФонЗаданием Тогда
		ПараметрыФЗ = Новый Массив();
		ПараметрыФЗ.Добавить(От);
		ПараметрыФЗ.Добавить(Кому);
		ПараметрыФЗ.Добавить(Копия);
		ПараметрыФЗ.Добавить(СкрытаяКопия);
		ПараметрыФЗ.Добавить(Тема);
		ПараметрыФЗ.Добавить(Содержание);
		ПараметрыФЗ.Добавить(Вложения);
		ПараметрыФЗ.Добавить(ОтображаемоеИмяОтправителя);
		ПараметрыФЗ.Добавить(ПортSMTP);
		
		ИдентификаторФонЗадания = "";
		ФоновыеЗадания.Выполнить("ОбщегоНазначения.ПисьмоОтправитьАсинхронно", ПараметрыФЗ, ИдентификаторФонЗадания, "Отправка эл.письма"); 
	Иначе
				
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Отправитель.Адрес 			= От;	
		Письмо.Отправитель.Кодировка 		= "windows-1251";
		Письмо.Отправитель.ОтображаемоеИмя 	= ОтображаемоеИмяОтправителя;
			
		Если СтрНайти(Кому, ";")>0 Тогда
			МассивСтрок = СтрРазделить(Кому, ";");
			Для Каждого Эл Из МассивСтрок Цикл
				Письмо.Получатели.Добавить(СокрЛП(Эл));		
			КонецЦикла;
		Иначе
			Письмо.Получатели.Добавить(Кому);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Копия) Тогда
			Если СтрНайти(Копия, ";")>0 Тогда
				МассивСтрок = СтрРазделить(Копия, ";");
				Для Каждого Эл Из МассивСтрок Цикл
					Письмо.Копии.Добавить(СокрЛП(Эл));		
				КонецЦикла;
			Иначе
				Письмо.Получатели.Добавить(Копия);	
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СкрытаяКопия) Тогда
			Если СтрНайти(СкрытаяКопия, ";")>0 Тогда
				МассивСтрок = СтрРазделить(Копия, ";");
				Для Каждого Эл Из МассивСтрок Цикл
					Письмо.СлепыеКопии.Добавить(СокрЛП(Эл));		
				КонецЦикла;
			Иначе
				Письмо.Получатели.Добавить(СкрытаяКопия);	
			КонецЕсли;
		КонецЕсли;

		Письмо.Тема	= Тема;	
		ТекстПисьма = Содержание;
		Письмо.Тексты.Добавить(ТекстПисьма, типТекстаПочтовогоСообщения.HTML); 
		
		Доступно = ТипЗнч(Вложения) = Тип("СписокЗначений");
		Если Доступно Тогда
			Для Каждого Вложение Из Вложения Цикл
				Если ЗначениеЗаполнено(Вложение.Значение) = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				ВложениеКакАдресФайлаИлиДвДанные = "";
				
				Доступно = Истина;
				Доступно = Доступно И ТипЗнч(Вложение.Значение) = Тип("Строка");
				Доступно = Доступно И СтрНайти(Вложение.Значение,  "e1cib/tempstorage");
				Если Доступно Тогда
					ДвоичнДанные = ПолучитьИзВременногоХранилища(Вложение.Значение);
					ВложениеКакАдресФайлаИлиДвДанные = ДвоичнДанные;
				Иначе
					ВложениеКакАдресФайлаИлиДвДанные = Вложение.Значение;	
				КонецЕсли;
				
				Письмо.Вложения.Добавить(ВложениеКакАдресФайлаИлиДвДанные, Вложение.Представление);	
			КонецЦикла;
		КонецЕсли;
	
		Письмо.УведомитьОДоставке = Ложь;

		ПротоколПолученияПочты	=   ПротоколИнтернетПочты.IMAP;
		
		Профиль = Новый ИнтернетПочтовыйПрофиль;
		
		Профиль.АдресСервераIMAP					=	"mail.luidorauto.ru";
		Профиль.ПортIMAP							=	993;
		Профиль.ПользовательIMAP					=	"LuidorUser160@main.luidorauto.ru";
		Профиль.ПарольIMAP							=	"luidor1423";
		Профиль.ИспользоватьSSLIMAP					=	Ложь;
		Профиль.ТолькоЗащищеннаяАутентификацияIMAP 	=   Ложь;
		
		Профиль.АдресСервераSMTP					=	"mail.luidorauto.ru";
		Профиль.ПортSMTP							=	ПортSMTP;
		Профиль.ПользовательSMTP					=	"LuidorUser160@main.luidorauto.ru";
		Профиль.ПарольSMTP							=	"luidor1423";
		Профиль.ИспользоватьSSLSMTP 				=	Ложь;
		Профиль.ТолькоЗащищеннаяАутентификацияSMTP 	= 	Ложь;

		Почта = Новый ИнтернетПочта;
		Попытка
			Почта.Подключиться(Профиль, ПротоколПолученияПочты);		
		Исключение
			ЗаписьЖурналаРегистрации("ОУ_ПисьмоОтправитьОтправить(не асинхронно). Подключиться", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());		
			Возврат Ложь;
		КонецПопытки;
		
		//Отправка письма по SMTP
		Попытка
			РезультатОтправки = Почта.Послать(Письмо,, ПротоколИнтернетПочты.SMTP);	
			
			//Получены ошибки
			Если РезультатОтправки.Количество()>0 Тогда
				Комментарий = "";
				Для Каждого i Из РезультатОтправки Цикл
					Комментарий = Комментарий + Строка(i.Значение) + "; ";			
				КонецЦикла;	
				ЗаписьЖурналаРегистрации("Отправить сообщение по SMTP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);		
				Возврат Ложь;	
			КонецЕсли;
		Исключение
			Почта.Отключиться();	
			ЗаписьЖурналаРегистрации("Отправить сообщение по SMTP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());		
			Возврат Ложь;
		КонецПопытки;
		
		//Если оказались здесь, тогда письмо ушло клиенту по SMTP	
		//Пересылка письма в папку отправленные по IMAP. Даже если возникла ошибка в пересылке в папку отправленные возвращаем Истина,
		//т.к. письмо клиенту по SMTP ушло
		Попытка
			Почта.ТекущийПочтовыйЯщик = "Отправленные";
			РезультатОтправки = Почта.Послать(Письмо,,ПротоколИнтернетПочты.IMAP);	
			
			//Получены ошибки
			Если РезультатОтправки.Количество()>0 Тогда
				Комментарий = "";
				Для Каждого i Из РезультатОтправки Цикл
					Комментарий = Комментарий + Строка(i.Значение) + "; ";			
				КонецЦикла;	
				ЗаписьЖурналаРегистрации("Переслать сообщение по IMAP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, Комментарий);		
				Возврат Истина;	
			КонецЕсли;
		Исключение
			Почта.Отключиться();
			ЗаписьЖурналаРегистрации("Переслать сообщение по IMAP (не асинхронно)", УровеньЖурналаРегистрации.Ошибка, , Данные, ОписаниеОшибки());		
			Возврат Истина;
		КонецПопытки;
		
		Возврат Истина;	
	КонецЕсли;
			
	Возврат Истина;
КонецФункции

Функция ОУ_ПисьмоОтправитьАсинхронно(От = "KoshelevSS@luidor.ru", Кому = "KoshelevSS@luidor.ru", Копия = "", СкрытаяКопия = "", Тема="", Содержание="", Вложения, ОтображаемоеИмяОтправителя = "Техцентр Луидор", ПортSMTP = 587) Экспорт
	// Функция определена как экспортная только потому, что вызывается фоновым заданием
	
	Профиль=Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP					=	"mail.luidorauto.ru";
	Профиль.ПортSMTP							=	ПортSMTP;
	Профиль.ПользовательSMTP					=	"LuidorUser160@main.luidorauto.ru";
	Профиль.ПарольSMTP							=	"luidor1423";
	Профиль.ТолькоЗащищеннаяАутентификацияSMTP 	= 	Ложь;
	Профиль.ИспользоватьSSLSMTP 				=	Ложь;
	
	Письмо=Новый ИнтернетПочтовоеСообщение;	
	Письмо.Отправитель.Адрес 			= От; 	
	Письмо.Отправитель.Кодировка 		= "windows-1251";
	Письмо.Отправитель.ОтображаемоеИмя 	= ОтображаемоеИмяОтправителя;	
	
	Если СтрНайти(Кому, ";")>0 Тогда
		МассивСтрок = СтрРазделить(Кому, ";");
		Для Каждого Эл Из МассивСтрок Цикл
			Письмо.Получатели.Добавить(СокрЛП(Эл));		
		КонецЦикла;
	Иначе
		Письмо.Получатели.Добавить(Кому);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Копия) Тогда
		Если СтрНайти(Копия, ";")>0 Тогда
			МассивСтрок = СтрРазделить(Копия, ";");
			Для Каждого Эл Из МассивСтрок Цикл
				Письмо.Копии.Добавить(СокрЛП(Эл));		
			КонецЦикла;
		Иначе
			Письмо.Получатели.Добавить(Копия);	
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СкрытаяКопия) Тогда
		Если СтрНайти(СкрытаяКопия, ";")>0 Тогда
			МассивСтрок = СтрРазделить(Копия, ";");
			Для Каждого Эл Из МассивСтрок Цикл
				Письмо.СлепыеКопии.Добавить(СокрЛП(Эл));		
			КонецЦикла;
		Иначе
			Письмо.Получатели.Добавить(СкрытаяКопия);	
		КонецЕсли;
	КонецЕсли;
	
	Письмо.Тема = Тема;
	ТекстПисьма = Содержание;
	
	Письмо.Тексты.Добавить(ТекстПисьма, типТекстаПочтовогоСообщения.HTML);	
	
	Доступно = ТипЗнч(Вложения) = Тип("СписокЗначений");
	Если Доступно Тогда
		Для Каждого Вложение Из Вложения Цикл
			Если ЗначениеЗаполнено(Вложение.Значение) = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			ВложениеКакАдресФайлаИлиДвДанные = "";
			
			Доступно = Истина;
			Доступно = Доступно И ТипЗнч(Вложение.Значение) = Тип("Строка");
			Доступно = Доступно И СтрНайти(Вложение.Значение,  "e1cib/tempstorage");
			Если Доступно Тогда
				ДвоичнДанные = ПолучитьИзВременногоХранилища(Вложение.Значение);
				ВложениеКакАдресФайлаИлиДвДанные = ДвоичнДанные;
			Иначе
				ВложениеКакАдресФайлаИлиДвДанные = Вложение.Значение;	
			КонецЕсли;
			
			Письмо.Вложения.Добавить(ВложениеКакАдресФайлаИлиДвДанные, Вложение.Представление);	
		КонецЦикла;
	КонецЕсли;
	
	Письмо.УведомитьОДоставке = Ложь;
	
	Данные = "От="+От+"; Кому="+Кому+"; Тема="+Тема+"; Содержание="+Содержание;
	
	йПочта = Новый ИнтернетПочта;
	Попытка
		йПочта.Подключиться(Профиль);
	Исключение
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ПисьмоОтправитьАсинхронно", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ОбщегоНазначения, Данные, Комментарий);
		Возврат "" 
	КонецПопытки;
	
	Попытка
		РезультатОтправки = йПочта.Послать(Письмо);
		йПочта.Отключиться();
		
		Если РезультатОтправки.Количество()>0 Тогда
				Комментарий = "";
				Для Каждого Эл Из РезультатОтправки Цикл
					Комментарий = Комментарий + Строка(Эл.Значение) + "; ";			
				КонецЦикла;
				ЗаписьЖурналаРегистрации("ПисьмоОтправитьАсинхронно", УровеньЖурналаРегистрации.Ошибка,  Метаданные.ОбщиеМодули.ОбщегоНазначения, Данные, Комментарий);		
				Возврат "";	
			КонецЕсли;
	Исключение
		Комментарий = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ПисьмоОтправитьАсинхронно", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ОбщегоНазначения, Данные, Комментарий);
	КонецПопытки;

КонецФункции

#КонецОбласти

Функция ПочтовыйПрофильПоИмениПользователя(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, Польз) Экспорт
	//Возвращает почтовый профиль в переданные переменные АдресСервера,Порт,ИспользоватьSSL, Пароль по имени пользователя почтового ящика в параметре Польз
	
	Доступно = 		ТипЗнч("Польз") = Тип("Строка")
				И   ЗначениеЗаполнено(Польз);
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Настройки 	= "";	 
	ИмяПарам	= "Ресурс_ПрофилиЭлПочты";
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	Пока Выборка.Следующий() Цикл
		Настройки = Выборка.Настройки;	
	КонецЦикла;
	
	//Прочитай из настроек учетные данные для luidorexpertALL@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("Прочитать()", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетных записей почты");
			Возврат Ложь;
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли; 

	ЧтеXML = Новый ЧтениеXML();
	ЧтеXML.УстановитьСтроку(Настройки);
	Пока ЧтеXML.Прочитать() Цикл
		
		Если ЧтеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЧтеXML.Имя="root" Тогда  
			Продолжить
		КонецЕсли;
				
		Если ЧтеXML.Имя="InternetMailProfiles" Тогда  
			Продолжить
		КонецЕсли;
		
		Если ЧтеXML.ТипУзла<>ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЧтеXML.Имя="InternetMailProfile" Тогда
			ПротоколЧтенияПочты = ЧтеXML.ПолучитьАтрибут("MailProtocol");
			Если ПротоколЧтенияПочты 	= "POP3" 	Тогда
				 АдресСервера		=			ЧтеXML.ПолучитьАтрибут("POP3ServerAdress"	); 
				 Порт				=			ЧтеXML.ПолучитьАтрибут("POP3Port"			);
				 ИспользоватьSSL	=	Булево(	ЧтеXML.ПолучитьАтрибут("POP3UseSSL"			)); 
				 Пользователь		=			ЧтеXML.ПолучитьАтрибут("User"				); 
				 Пароль				=			ЧтеXML.ПолучитьАтрибут("Password"			);		
			ИначеЕсли  ПротоколЧтенияПочты = "IMAP" Тогда
				 АдресСервера		=			ЧтеXML.ПолучитьАтрибут("IMAPServerAdress"	); 
				 Порт				=			ЧтеXML.ПолучитьАтрибут("IMAPPort"			);
				 ИспользоватьSSL	=	Булево(	ЧтеXML.ПолучитьАтрибут("IMAPUseSSL"			)); 
				 Пользователь		=			ЧтеXML.ПолучитьАтрибут("IMAPUser"			); 
				 Пароль				=			ЧтеXML.ПолучитьАтрибут("IMAPPassword"		);		
			 КонецЕсли;
			 
			 Если Пользователь = Польз Тогда
				 Возврат Истина
			 КонецЕсли;	 				
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

#Область Чтение_почты_Автоброкер
Функция ПрочитатьПочтуАвтоброкер() Экспорт
	//Читает письма с почтового ящика luidorexpertALL@yandex.ru от отправителя Автоброкер(ab-club.ru) "no-reply@a-b63.ru" и  пересылает их на обработку в ОУ
	
	Начало = ТекущаяДата();
		
	//Проверь доступность "http://mainiis:8680/mail". Если доступен, значит письма считатаны тем приложением
	json		= "";  
	Попытка 
		json = Авито.CURL_Str("curl -X GET http://mainiis:8680/mail");	
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуАвтоброкер. Java", УровеньЖурналаРегистрации.Ошибка,,СтрШаблон("Длительность = %1",ТекущаяДата() - Начало));	
	Исключение 
		//Если оказались здесь, значит приложение http://mainiis:8680/mail не функционирует. Другой способ чтения - с почты
		ЗаписьЖурналаРегистрации("Обращение к сервису http://mainiis:8680/mail для чтения сообщнеий Autobroker", УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
	КонецПопытки;           
	
	
	Если ЗначениеЗаполнено(json) Тогда
		//Http-сервис mainiis:8680/mail читает почтовый ящик и обращается к http-сервису http://mainappl.main.luidorauto.ru/sys_agr/hs/webhooks/anypost/v1 
		//и передает ему сообщение следующего вида:
		//{"messageBody":"Заявка: Автокредит модальное окно Ваше имя: Сергей Телефон*: 8 (950) *** ** ** С уважением, «Портал Автоброкер»","messageID":"9OmH1SSYaEgCYzt5ulYbqBf0v0zGzQTF8VhDxxjw@ab-club.ru","type":"autobroker mail message"}
		Возврат ""
	КонецЕсли;
	
	Настройки 	= "";	 
	ИмяПарам	= "УчетнаяЗаписьПочтыДляАвтоброкер";
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	//Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	//Пока Выборка.Следующий() Цикл
	//	Настройки = Выборка.Настройки;	
	//КонецЦикла;
	
	//Прочитай из настроек учетные данные для luidorexpertALL@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("ПрочитатьПочтуАвтоброкер", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетной записи luidorexpertALL@yandex.ru");
			Возврат "ошибка";
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли;
	
	Чт = Новый ЧтениеJSON();
	Чт.УстановитьСтроку(Настройки);
	Попытка
		Фабрика = ПрочитатьJSON(Чт);
		АдресСервера 		= Фабрика.server;
		Порт				= Фабрика.port;
		ИспользоватьSSL 	= Булево(Фабрика.useSSL);
		Пользователь		= Фабрика.user;
		Пароль          	= Фабрика.password;
		ПочтовыйПротокол 	= Фабрика.protocol;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуАвтоброкер", УровеньЖурналаРегистрации.Ошибка,, ,"Ошибка чтения в фабрику XDTO");
		Возврат "ошибка";
	КонецПопытки;
	
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
		Возврат "ошибка";
	КонецЕсли;
	
	Попытка
		Если ПочтовыйПротокол = "IMAP" Тогда
			Отб = Новый Структура("ДатаОтправления", НачалоДня(ТекущаяДата()));
			МассивЗаголовков = иПочта.ПолучитьЗаголовки(Отб);
		Иначе
			МассивЗаголовков = иПочта.ПолучитьЗаголовки();
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуАвтоброкер", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат "ошибка"
	КонецПопытки;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат "ошибка"
	КонецЕсли;
	
	// Получи почтовые сообщения  (собственно почтовые сообщения со всеми текстами и вложениями)
	Попытка
		ПочтСообщения = иПочта.Выбрать(Ложь, МассивЗаголовков, Истина);
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуАвтоброкер", УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат "ошибка";
	КонецПопытки;               	
	
	Для Каждого ПочтСообщение Из ПочтСообщения Цикл
		
		Доступно = 		СтрНайти(ПочтСообщение.Отправитель.Адрес,"no_reply@ab-club.ru") > 0
		Или	СтрНайти(ПочтСообщение.Отправитель.Адрес,"no-reply@bibika.ru") > 0;
		Если Не Доступно Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПочтСообщение.Тексты.Количество()=0 Тогда
			Продолжить
		КонецЕсли;
		
		Тело 			= ПочтСообщение.Тексты[0].Текст;
		Чт 				= Новый ЧтениеHTML();
		Чт.УстановитьСтроку(Тело);
		Построитель 	= Новый ПостроительDOM();
		Док 		  	= Построитель.Прочитать(Чт);
		Док.Нормализовать();
		ТелоСообщения 	= СокрЛП(Док.Тело.ТекстовоеСодержимое);
		
		Если Не ЗначениеЗаполнено(ТелоСообщения) Тогда
			Продолжить;
		КонецЕсли;      
		
		//Вариант1: Дальнейшая обработка (отправка в опер. учет) - в http-сервисе "//mainappl.main.luidorauto.ru/sys_agr/hs/webhooks/anypost/v1" 
		//body= СтрШаблон("{""type"":""%1"", ""messageID"":""%2"", ""messageBody"":""%3""}", "autobroker mail message", ПочтСообщение.ИдентификаторСообщения, ТелоСообщения); 
		//Кмд = СтрШаблон("curl --request POST ""http://mainappl.main.luidorauto.ru/sys_agr/hs/webhooks/anypost/v1"" -H ""Accept"":""application/json"" --data %1", body);
		//Авито.CURL(Кмд);

		//Вариант2: интернет-заявка
		Автоброкер_СоздайИнтернетЗаявку(ТелоСообщения, ПочтСообщение.ИдентификаторСообщения);
	
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("ПрочитатьПочтуАвтоброкер. Без Java", УровеньЖурналаРегистрации.Ошибка,,СтрШаблон("Длительность = %1",ТекущаяДата() - Начало));	

	Возврат "";
	
КонецФункции   

Функция Автоброкер_СоздайИнтернетЗаявку(Сообщение, СообщениеИд)   Экспорт
	//Если с тексте параметра Сообщение удается выделить номер телефона, тогда создается интрнет-заявка на обратный звонок с сайта "ab-club.ru"
		
	Доступно = ТипЗнч(Сообщение) = Тип("Строка") И ТипЗнч(СообщениеИд) = Тип("Строка") И ЗначениеЗаполнено(Сообщение) И ЗначениеЗаполнено(СообщениеИд);
	Если Не Доступно Тогда           
		ЗаписьЖурналаРегистрации("Автоброкер_СоздайИнтернетЗаявку", УровеньЖурналаРегистрации.Ошибка, СтрШаблон("Сообщение = %1; СообщениеИд = %2", Сообщение, СообщениеИд), "Неверные параметры");
		Возврат "error: bad parameters";
	КонецЕсли;   
	
	Телефоны = ПолучитьМассивТелНомеровСтрокамиИзТекста(Сообщение);
	Если Не Телефоны.Количество()>0 Тогда
		ЗаписьЖурналаРегистрации("Автоброкер_СоздайИнтернетЗаявку", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("Сообщение = %1",Сообщение), "Не определен телефон, интернет-заявка не создана");
		Возврат "error: phones not found";
	КонецЕсли; 
	ВэбСервисы.ИнтернетЗаявка(Телефоны[0], "ab-club.ru", ,СообщениеИд);		
	Возврат "";
КонецФункции
#КонецОбласти

#Область Чтение_почты_ЯндексТурбоСтраницы
Функция ПрочитатьПочтуЯндексТурбоСтраницы() Экспорт
	//Читает письма с почтового ящика luidorexpertALL@yandex.ru от отправителя devnull@yandex.ru и формирует интернет-заявку
	
	//Прочитай найстройки из хранилища общих настроек
	Настройки 	= "";
	ИмяПарам	= "УчетнаяЗаписьПочтыДляЯндексТурбоСтраницы";
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	Пока Выборка.Следующий() Цикл
		Настройки = Выборка.Настройки;	
	КонецЦикла;
	
	//Прочитай из настроек учетные данные для яндекс-аккаунта turbopages2021@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексТурбоСтраницы", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетной записи turbopages2021@yandex.ru");
			Возврат "ошибка";
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли;
	
    Чт = Новый ЧтениеJSON();
	Чт.УстановитьСтроку(Настройки);
	Попытка
		Фабрика = ПрочитатьJSON(Чт);
		АдресСервера 		= Фабрика.server;
		Порт				= Фабрика.port;
		ИспользоватьSSL 	= Булево(Фабрика.useSSL);
		Пользователь		= Фабрика.user;
	 	Пароль          	= Фабрика.password;
	 	ПочтовыйПротокол 	= Фабрика.protocol;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексТурбоСтраницы", УровеньЖурналаРегистрации.Ошибка,, ,"Ошибка чтения в фабрику XDTO");
		Возврат "ошибка";
	КонецПопытки;
	
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
 		Возврат "ошибка";
	КонецЕсли;
	
	ДатаОтправления = НачалоДня(ТекущаяДата());

	Попытка
		Если ПочтовыйПротокол = "IMAP" Тогда
			Отб = Новый Структура("ДатаОтправления", ДатаОтправления);
			МассивЗаголовков = иПочта.ПолучитьЗаголовки(Отб);
		Иначе
			МассивЗаголовков = иПочта.ПолучитьЗаголовки();
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексТурбоСтраницы", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат "ошибка"
	КонецПопытки;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат "ошибка"
	КонецЕсли;

	// Получи почтовые сообщения  (собственно почтовые сообщения со всеми текстами и вложениями)
	Попытка
		ПочтСообщения = иПочта.Выбрать(Ложь, МассивЗаголовков, Истина);
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексТурбоСтраницы", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат "ошибка";
	КонецПопытки;
	
	Для Каждого ПочтСообщение Из ПочтСообщения Цикл
		
		//Проверь, отправителем должен быть "devnull@yandex.ru" 
		Если СтрНайти(ПочтСообщение.Отправитель.Адрес,"devnull@yandex.ru")=0 Тогда
			Продолжить;
		КонецЕсли;
		
		//Проверь, обязательно должно быть вложение
		Если ПочтСообщение.Вложения.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		//Поищи в интернет-заявках, возможно уже загружено
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Т.Сигнатура КАК Сигнатура ИЗ РегистрСведений.ИнтернетЗаявки КАК Т ГДЕ Т.СигнатураПочтовогоСообщения = &СигнатураПочтовогоСообщения");
		Запрос.УстановитьПараметр("Дата", 		 					ПочтСообщение.ДатаОтправления);
		Запрос.УстановитьПараметр("СигнатураПочтовогоСообщения", 	ПочтСообщение.ИдентификаторСообщения);
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Вложение = ПочтСообщение.Вложения[0];
		
		//Пример вложения:
		//Client id;Fio;Generated;Hit id;Landing id;Landing name;Tel;Utm params
		//"1,66678E+18";Dasha Sorokina;TRUE;843242742;12454417;turbopage kamaz-nn ru_/turbopage kamaz-nn ru_;79260941334;{}

		ЧтДанных = Новый ЧтениеДанных(Вложение.Данные, КодировкаТекста.UTF8, ПорядокБайтов.LittleEndian, Символы.ПС);
		Landing_name 				= "";
		Tel			 				= "";
		ПозицияКолонкиPhone 		= -1;	// с 28.10.2022 она называется не Phone, а Tel, но имя переменной не стал менять
		ПозицияКолонкиLandingName 	= -1;
	
		Пока Не ЧтДанных.ЧтениеЗавершено Цикл
			Зап = ЧтДанных.ПрочитатьСтроку(); 
			
			//Обработай первую строку - строку заголовка
			Если СтрНайти(Зап, "Tel")>0 И СтрНайти(Зап, "Landing name")>0 Тогда
				
				//Значит это строка заголовка
				СтрокаМассивом = СтрРазделить(Зап, ";", Истина);
				
				//Найди позицию колонки "Phone" в таблице в строке заголовка, такая же позиция у собственно номера телефона будет в строке данных 
				Для i = 0 По СтрокаМассивом.Количество()-1 Цикл 
					Если СтрНайти(СтрокаМассивом[i], "Tel" )>0 Тогда  
						ПозицияКолонкиPhone = i;
						Прервать;
					КонецЕсли;
				КонецЦикла;  
				
				//Найди позицию колонки "Landing name" в таблице в строке заголовка, такая же позиция у собственно номера телефона будет в строке данных 
				Для i = 0 По СтрокаМассивом.Количество()-1 Цикл 
					Если СтрНайти(СтрокаМассивом[i], "Landing name")>0 Тогда  
						ПозицияКолонкиLandingName = i;
						Прервать;
					КонецЕсли;
				КонецЦикла;  

				//Заверши обработку строки заголовка
				Продолжить;
			КонецЕсли;  
			
			Если ПозицияКолонкиPhone = -1 Тогда
				//Позиция колонки Tel в строке заголовка не найдена, значит не найдем позицию телефона в стркое данных, завершы обработку текущего письма, переходи к следующему
				Продолжить;
			КонецЕсли;
			
			//Обработай вторую строку - строк данных
			Знч = СтрРазделить(Зап,";"); 
			
			//Получи номер телефона из строки данных
			Tel				= Знч[ПозицияКолонкиPhone];	       
			
			//В поле Landing_name должно содержаться имя сайта, если колонка не найдена, установи "undefined"	
			Landing_name 	= ?(ПозицияКолонкиLandingName>-1, Знч[ПозицияКолонкиLandingName], "undefined"); 
			
			Tel				= СтрЗаменить(Tel, Символ(34), "");
			Landing_name 	= СтрЗаменить(Landing_name, Символ(34),"");
		КонецЦикла;
		ЧтДанных.Закрыть();
		
		Если Tel = ""  Тогда
			//Номер телефона не найден, перейди к обработке следующего письма
			Продолжить;
		КонецЕсли;
		
		//Из строки "turbopage ufa uaz-luido ru_/УАЗ тест 1" получи имя сайта вида "turbopage.ufa.uaz-luido.ru"
		ПозСлеша = СтрНайти(Landing_name, "/");
		Site 	 = Лев(Landing_name, ПозСлеша-2); 
		Site	 = СтрЗаменить(Site, " ", ".");
		
		ВэбСервисы.ИнтернетЗаявка(Tel, Site, , ПочтСообщение.ИдентификаторСообщения);		
	КонецЦикла;
	
	Возврат "";

КонецФункции
#КонецОбласти

#Область Чтение_почты_ЯндексСмартПойнт

Функция ПрочитатьПочтуЯндексСмартПойнт() Экспорт   
	
	//Читает письма с почтового ящика smartpoint2021@yandex.ru от отправителя noreply@smartpoint.pro и сформировать интенет-заявку от имени сайта vladavto.com
	//---------------------------------------------------------------------------------------------------------------------------------------------------------
	ПрочитатьЯщикЯндексСмартПойнт("УчетнаяЗаписьПочтыДляЯндексСмартПойнт", 										"vladavto.com");  
	
	ПрочитатьЯщикЯндексСмартПойнт("Учетка_smartpoint_luidor_chebAtyandex_ru", 	"luidor-cheb.ru");	
	ПрочитатьЯщикЯндексСмартПойнт("Учетка_smartpoint_luidor_rmAtyandex_ru", 	"luidor-rm.ru");	
	ПрочитатьЯщикЯндексСмартПойнт("Учетка_smartpoint_luidor_tambovAtyandex_ru", "avtogaz68.ru");	
	ПрочитатьЯщикЯндексСмартПойнт("Учетка_smartpoint_uaz_kazanAtyandex_ru", 	"kazan.uaz-luidor.ru");		
	ПрочитатьЯщикЯндексСмартПойнт("Учетка_smartpoint_uaz_ufaAtyandex_ru", 		"ufa.uaz-luidor.ru");	
	ПрочитатьЯщикЯндексСмартПойнт("Учетка_smartpoint_lada_ufaAtyandex_ru", 		"luidor.lada.ru");	
КонецФункции    

Функция ПрочитатьЯщикЯндексСмартПойнт(ИмяПарамУчетнойПолитики, Site) Экспорт
		
	Рез = "ошибка";
	
	//Прочитай найстройки из хранилища общих настроек
	Настройки 	= "";
	ИмяПарам	= ИмяПарамУчетнойПолитики;
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	Пока Выборка.Следующий() Цикл
		Настройки = Выборка.Настройки;	
	КонецЦикла;
	
	//Прочитай из настроек учетные данные для яндекс-аккаунта smartpoint2021@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексСмартПойнт", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетной записи turbopages2021@yandex.ru");
			Возврат Рез;
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли;
	
    Чт = Новый ЧтениеJSON();
	Чт.УстановитьСтроку(Настройки);
	Попытка
		Фабрика = ПрочитатьJSON(Чт);
		АдресСервера 		= Фабрика.server;
		Порт				= Фабрика.port;
		ИспользоватьSSL 	= Булево(Фабрика.useSSL);
		Пользователь		= Фабрика.user;
	 	Пароль          	= Фабрика.password;
	 	ПочтовыйПротокол 	= Фабрика.protocol;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексСмартПойнт", УровеньЖурналаРегистрации.Ошибка,, ,"Ошибка чтения в фабрику XDTO");
		Возврат Рез;
	КонецПопытки;
	
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
 		Возврат Рез;
	КонецЕсли;
	
	//ДатаОтправления = НачалоДня('20210718');
	ДатаОтправления = НачалоДня(ТекущаяДата());

	Попытка
		Если ПочтовыйПротокол = "IMAP" Тогда
			Отб = Новый Структура();
			Отб.Вставить("ДатаОтправления", ДатаОтправления);
			МассивЗаголовков = иПочта.ПолучитьЗаголовки(Отб);
		Иначе
			МассивЗаголовков = иПочта.ПолучитьЗаголовки();
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексСмартПойнт", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат Рез
	КонецПопытки;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат Рез
	КонецЕсли;

	// Получи почтовые сообщения  (собственно почтовые сообщения со всеми текстами и вложениями)
	Попытка
		ПочтСообщения = иПочта.Выбрать(Ложь, МассивЗаголовков, Истина);
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексСмартПойнт", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат Рез;
	КонецПопытки;
	
	Для Каждого ПочтСообщение Из ПочтСообщения Цикл
		
		Если СтрНайти(ПочтСообщение.Отправитель.Адрес,"noreply@smartpoint.pro")=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПочтСообщение.Тексты.Количество()=0 Тогда
			Продолжить
		КонецЕсли;
					
		//Поищи в интернет-заявках, возможно уже загружено
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Т.Сигнатура КАК Сигнатура ИЗ РегистрСведений.ИнтернетЗаявки КАК Т ГДЕ Т.СигнатураПочтовогоСообщения = &СигнатураПочтовогоСообщения";
		Запрос.УстановитьПараметр("Дата", 		 				 ПочтСообщение.ДатаОтправления);
		Запрос.УстановитьПараметр("СигнатураПочтовогоСообщения", ПочтСообщение.ИдентификаторСообщения);
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			Продолжить;
		КонецЕсли;
					
		//Прочитай текст письма	
		//----------------------
		Текст					= ПочтСообщение.Тексты[0].Текст;
		
		//Пример текста письма:
		//---------------------
		//Сбор контактов<br/>
		//<p>Имя: виктор</p><p>Телефон: 8 (910) 987-49-00</p><p>E-mail: </p>
		//<br/><p>Заголовок: Интересует цена на ГАЗель NEXT?</p><p>Призыв к действию: Оставьте заявку, мы вам перезвоним, сделаем расчеты автомобиля по вашим требованиям!</p>
		//<br/><hr/>
		//<p>URL: https://vladavto.com/models/gazelle-next/gazelle-next-bort/</p>
		//<p>Устройство: desktop</p>
			
		//Найти строку типа "Телефон: 8 (910) 987-49-00"
		//----------------------------------------------
		МассивСтрок = СтрРазделить(Текст, Символы.ПС, Ложь);
		Для Каждого Зап Из МассивСтрок Цикл
			ПозТелефон = СтрНайти(Зап, "Телефон:");
			Если ПозТелефон = 0 Тогда 
				Продолжить;
			КонецЕсли;
			Tel	= Сред(Зап, ПозТелефон+9, 20);
			ПозКонецАбзаза = СтрНайти(Tel, "</");
			Tel = Сред(Tel, 1, ПозКонецАбзаза-1);
			Прервать;
		КонецЦикла;
		
		Если Tel = "" Тогда
			Продолжить;
		КонецЕсли;
		
		ВэбСервисы.ИнтернетЗаявка(Tel, Site, ,ПочтСообщение.ИдентификаторСообщения);		
	КонецЦикла;
	
	Возврат "";	
КонецФункции
#КонецОбласти    

Функция ПрочитатьПочтуЯндексЛуидорЛадаУфа() Экспорт 
	//Название функции не соответствует содержанию, с 24.10.2022 читает почту с ящика luidorparts@yandex.ru
	Возврат ПрочитатьПочтуЯндексЛуидорПартс();
КонецФункции

Функция ПрочитатьПочтуЯндексЛуидорПартс() Экспорт
	//Читает письма с почтового ящика luidorparts@yandex.ru от отправителя noreply@unverified.beget.ru
	//и сформировать интенет-заявку от имени сайта https://luidor-parts.ru.
	//Обрабатываем письма с заявками двух видов (остальные виды заявок - технические, игнорируем):
	//1. Собственно заявка на автозвонок. В заговке письма фраза Заказ обратного звонка https://luidor-parts.ru/
	//2. Интернет-магазин запчастей Луидор - заказ XX , где XX - номер заказа. В таком письме приходит и табличая часть с заказанными запчастями,
	// в будущем такой тип заявок не должен приходить автозвонком
		
	//Прочитай найстройки из хранилища общих настроек
	Настройки 	= "";	 
	ИмяПарам	= "УчетнаяЗаписьПочтыДляЯндексЛуидорПартс";
	Парам 		= Новый Структура("КлючОбъекта, КлючНастроек", "УчетнаяПолитика", ИмяПарам);
	Выборка 	= ХранилищеОбщихНастроек.Выбрать(Парам);
	Пока Выборка.Следующий() Цикл
		Настройки = Выборка.Настройки;	
	КонецЦикла;
	
	//Прочитай из настроек учетные данные для яндекс-аккаунта luidorparts@yandex.ru
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		//Если оказались здесь, значит нет настройки в хранилище общих настроек, прочитай из регистра сведений
		Парам = Новый Структура(ИмяПарам);
		РегистрыСведений.УчетнаяПолитика.Получи(Парам);
		Если Не ЗначениеЗаполнено(Парам[ИмяПарам]) Тогда
			ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексЛуидорПартс", УровеньЖурналаРегистрации.Ошибка,, ,"Нет параметров учетной записи turbopages2021@yandex.ru");
			Возврат "ошибка";
		КонецЕсли;
		Настройки = Парам[ИмяПарам];
		
		//Запиши настройки в хранилище настроек
		ХранилищеОбщихНастроек.Сохранить("УчетнаяПолитика", ИмяПарам, Настройки);
	КонецЕсли;
	
    Чт = Новый ЧтениеJSON();
	Чт.УстановитьСтроку(Настройки);
	Попытка
		Фабрика = ПрочитатьJSON(Чт);
		АдресСервера 		= Фабрика.server;
		Порт				= Фабрика.port;
		ИспользоватьSSL 	= Булево(Фабрика.useSSL);
		Пользователь		= Фабрика.user;
	 	Пароль          	= Фабрика.password;
	 	ПочтовыйПротокол 	= Фабрика.protocol;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексЛуидорПартс", УровеньЖурналаРегистрации.Ошибка,, ,"Ошибка чтения в фабрику XDTO");
		Возврат "ошибка";
	КонецПопытки;
	
	иПочта = ОбъектИнтернетПочта_ПолучиПодключи(АдресСервера, Порт, ИспользоватьSSL, Пользователь, Пароль, ПочтовыйПротокол);
	Если ТипЗнч(иПочта) <> Тип("ИнтернетПочта") Тогда
 		Возврат "ошибка";
	КонецЕсли;
	
	//ДатаОтправления = НачалоДня('20221019');
	ДатаОтправления = НачалоДня(ТекущаяДата());

	Попытка
		Если ПочтовыйПротокол = "IMAP" Тогда
			Отб = Новый Структура();
			Отб.Вставить("ДатаОтправления", ДатаОтправления);
			МассивЗаголовков = иПочта.ПолучитьЗаголовки(Отб);
		Иначе
			МассивЗаголовков = иПочта.ПолучитьЗаголовки();
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексЛуидорПартс", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат "ошибка"
	КонецПопытки;
	
	Если МассивЗаголовков.Количество() = 0 Тогда
		Возврат "ошибка"
	КонецЕсли;

	// Получи почтовые сообщения  (собственно почтовые сообщения со всеми текстами и вложениями)
	Попытка
		ПочтСообщения = иПочта.Выбрать(Ложь, МассивЗаголовков, Истина);
	Исключение
		ЗаписьЖурналаРегистрации("ПрочитатьПочтуЯндексЛуидорПартс", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат "ошибка";
	КонецПопытки;
	
	Site = "luidor-parts.ru";
	Для Каждого ПочтСообщение Из ПочтСообщения Цикл
		Tel = "";
		
		Если СтрНайти(ПочтСообщение.Отправитель.Адрес,"noreply@unverified.beget.ru")=0 Тогда
			Продолжить;
		КонецЕсли;
		
		//Будем обрабатывать только письма двух видов: или заявку на автозвонок или интернет-заказ
		ЗаголовокИнтернетЗаявкиАвтозвонка 	= "";
		ЗаголовокИнтернетЗаказаЗапчасти		= "";   
		
		ЗаголовокИнтернетЗаявкиАвтозвонка	= ?(СтрНайти(ПочтСообщение.Тема, "Заказ обратного звонка https://luidor-parts.ru/") > 0,	"Заказ обратного звонка https://luidor-parts.ru/", 	ЗаголовокИнтернетЗаявкиАвтозвонка);
		ЗаголовокИнтернетЗаказаЗапчасти		= ?(СтрНайти(ПочтСообщение.Тема, "Интернет магазин запчастей Луидор - заказ") > 0, 		"Интернет магазин запчастей Луидор - заказ", 		ЗаголовокИнтернетЗаказаЗапчасти);
		
		Доступно = 		ЗначениеЗаполнено(ЗаголовокИнтернетЗаявкиАвтозвонка)
		ИЛИ ЗначениеЗаполнено(ЗаголовокИнтернетЗаказаЗапчасти);
		Если Не Доступно Тогда
			Возврат "";
		КонецЕсли;
			
		Если ПочтСообщение.Тексты.Количество()=0 Тогда
			Продолжить
		КонецЕсли;
		
		//Поищи в интернет-заявках, возможно уже загружено
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Сигнатура ИЗ РегистрСведений.ИнтернетЗаявки ГДЕ СигнатураПочтовогоСообщения = &СигнатураПочтовогоСообщения");
		Запрос.УстановитьПараметр("Дата", 		 				 ПочтСообщение.ДатаОтправления);
		Запрос.УстановитьПараметр("СигнатураПочтовогоСообщения", ПочтСообщение.ИдентификаторСообщения);
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			Продолжить;
		КонецЕсли;   
		
		//Случай 1: заявка на обратный звонок. Заголовок такого письма содержит "Заказ обратного звонка https://luidor-parts.ru/"
		Если ЗначениеЗаполнено(ЗаголовокИнтернетЗаявкиАвтозвонка) Тогда
			//Прочитай текст письма	
			//----------------------
			Текст					= ПочтСообщение.Тексты[0].Текст;
			
			//Найти строку типа "Телефон: 8 (910) 987-49-00"
			//----------------------------------------------
			МассивСтрок = СтрРазделить(Текст, Символы.ПС, Ложь);
			Для Каждого Зап Из МассивСтрок Цикл
				ПозТелефон = СтрНайти(Зап, "Телефон:");
				Если ПозТелефон = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Tel	= Сред(Зап, ПозТелефон+9, 20);
				ПозКонецАбзаза = СтрНайти(Tel, "</");
				Tel = Сред(Tel, 1, ПозКонецАбзаза-1);
				Прервать;
			КонецЦикла;
			
			Если Tel = "" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли; 
		
		//Случай 2: заявка на обратный звонок. Заголовок такого письма содержит "Заказ обратного звонка https://luidor-parts.ru/"
		Если ЗначениеЗаполнено(ЗаголовокИнтернетЗаказаЗапчасти)	Тогда
			
			//Прочитай текст письма	
			//----------------------
			Текст					= ПочтСообщение.Тексты[0].Текст;
			
			//Найти строку типа "Телефон: 8 (910) 987-49-00"
			//----------------------------------------------
			МассивСтрок = СтрРазделить(Текст, Символы.ПС, Ложь);
			КолвоСтрок  = МассивСтрок.Количество()-1;
			
			Для i = 0 По МассивСтрок.Количество()-1 Цикл
				ПозТелефон = СтрНайти(МассивСтрок[i], "ТЕЛЕФОН:");
				Если ПозТелефон = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Если ПозТелефон > 0 И ПозТелефон <= КолвоСтрок Тогда 
					Tel	= СокрЛП(МассивСтрок[i+1]);
					Прервать;
				КонецЕсли;
				Прервать;
			КонецЦикла;
			
			Если Tel = "" Тогда
				Продолжить;
			КонецЕсли;  
		КонецЕсли;
			
		ВэбСервисы.ИнтернетЗаявка(Tel, Site, ,ПочтСообщение.ИдентификаторСообщения);		
	КонецЦикла;
	
	Возврат "";	
КонецФункции