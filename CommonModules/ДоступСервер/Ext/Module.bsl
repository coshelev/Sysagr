Функция ДоступныеЦелевыеТочки(Пользователь)Экспорт
	//Назначение: возвращает список доступных пользователю на чтение целевых точек. Они указываются в табл. части  ДоступныеЦелевыеТочки справочника Пользователи
	//Если табл. часть ДоступныеЦелевыеТочки справочника Пользователи пустая, тогда возвращаются все целевые точки
	//Игнорируются целевые точки, не привязанные к очередям
	
	ДоступныеЦелевыеТочки = Новый СписокЗначений();
	
	Доступно = ТипЗнч(Пользователь)=Тип("СправочникСсылка.Пользователи");
	Если Не Доступно Тогда
		Возврат ДоступныеЦелевыеТочки;
	КонецЕсли; 
		
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПользователиДоступныеЦелевыеТочки.ЦелеваяТочка КАК ЦелеваяТочка,
	|	ПользователиДоступныеЦелевыеТочки.ЦелеваяТочка.Наименование КАК ЦелеваяТочкаНаименование
	|ИЗ
	|	Справочник.Пользователи.ДоступныеЦелевыеТочки КАК ПользователиДоступныеЦелевыеТочки
	|ГДЕ
	|	ПользователиДоступныеЦелевыеТочки.Ссылка = &Ссылка
	|	И ПользователиДоступныеЦелевыеТочки.ЦелеваяТочка.ПометкаУдаления = ЛОЖЬ
	|	И НЕ ПользователиДоступныеЦелевыеТочки.ЦелеваяТочка.Очередь = ЗНАЧЕНИЕ(Справочник.ТелОчереди.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦелеваяТочкаНаименование";
	Запрос.УстановитьПараметр("Ссылка", Пользователь);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл			
			ДоступныеЦелевыеТочки.Добавить(Выборка.ЦелеваяТочка);
	КонецЦикла;
	
	Если ДоступныеЦелевыеТочки.Количество()>0 Тогда	
		Возврат ДоступныеЦелевыеТочки;
	КонецЕсли;
	
	//Если список доступных целевых точек - пуст, тогда доступны все
	//--------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТочкиЦелевые.Ссылка КАК ЦелеваяТочка,
	|	ТочкиЦелевые.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ТочкиЦелевые КАК ТочкиЦелевые
	|ГДЕ
	|	ТочкиЦелевые.ПометкаУдаления = ЛОЖЬ
	|	И НЕ ТочкиЦелевые.Очередь = ЗНАЧЕНИЕ(Справочник.ТелОчереди.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДоступныеЦелевыеТочки.Добавить(Выборка.ЦелеваяТочка);
	КонецЦикла;	
	
	Возврат ДоступныеЦелевыеТочки;

КонецФункции

Функция ДоступныеЦелевыеОчереди(Пользователь) Экспорт
	//Назначение: возвращает список доступных пользователю на чтение целевых очередий. Они определяются 
	// через доступные целевые точки в табл. части  ДоступныеЦелевыеТочки справочника Пользователи
	//Если табл. часть ДоступныеЦелевыеТочки справочника Пользователи пустая, тогда возвращаются все целевые точки
	//Игнорируются целевые точки, не привязанные к очередям
	//НЕ ВОЗВРАЩАЕТ ДОСТУПНЫЕ ОБЩИЕ ОЧЕРЕДИ
	
	ДоступныеЦелевыеОчереди = Новый СписокЗначений();
	
	Доступно = ТипЗнч(Пользователь)=Тип("СправочникСсылка.Пользователи");
	Если Не Доступно Тогда
		Возврат ДоступныеЦелевыеОчереди;
	КонецЕсли; 
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ЦелеваяТочка.Очередь КАК Очередь,
	|	Т.ЦелеваяТочка.Наименование КАК ЦелеваяТочкаНаименование
	|ИЗ
	|	Справочник.Пользователи.ДоступныеЦелевыеТочки КАК Т
	|ГДЕ
	|	Т.Ссылка = &Ссылка
	|	И НЕ Т.ЦелеваяТочка.ПометкаУдаления
	|	И НЕ Т.ЦелеваяТочка.Очередь = ЗНАЧЕНИЕ(Справочник.ТелОчереди.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦелеваяТочкаНаименование";
	Запрос.УстановитьПараметр("Ссылка", Пользователь);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
			ДоступныеЦелевыеОчереди.Добавить(Выборка.Очередь);
	КонецЦикла;
	
	Если ДоступныеЦелевыеОчереди.Количество()>0 Тогда
		Возврат ДоступныеЦелевыеОчереди;
	КонецЕсли;
	
	//Если список доступных целевых точек - пуст, тогда доступны все
	//--------------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Очередь КАК Очередь, Т.Наименование КАК Наименование ИЗ Справочник.ТочкиЦелевые КАК Т
	|ГДЕ
	|	НЕ Т.ПометкаУдаления
	|	И НЕ Т.Очередь = ЗНАЧЕНИЕ(Справочник.ТелОчереди.ПустаяСсылка)
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДоступныеЦелевыеОчереди.Добавить(Выборка.Очередь);	
	КонецЦикла;	
	
	Возврат ДоступныеЦелевыеОчереди;
КонецФункции

Функция  ДоступныеЦелевыеИОбщиеОчереди(Пользователь) Экспорт
	//Назначение: возвращает список доступных пользователю на чтение целевых очередий. Они определяются 
	// через доступные целевые точки в табл. части  ДоступныеЦелевыеТочки справочника Пользователи
	//Если табл. часть ДоступныеЦелевыеТочки справочника Пользователи пустая, тогда возвращаются все целевые точки
	//Игнорируются целевые точки, не привязанные к очередям
	//ВОЗВРАЩАЕТ ТАКЖЕ ДОСТУПНЫЕ ОБЩИЕ ОЧЕРЕДИ
	
	ДоступныеЦелевыеОчереди = ДоступныеЦелевыеОчереди(Пользователь);
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПользователиДоступныеОбщиеОчереди.Очередь КАК Очередь
	|ИЗ
	|	Справочник.Пользователи.ДоступныеОбщиеОчереди КАК ПользователиДоступныеОбщиеОчереди
	|ГДЕ
	|	ПользователиДоступныеОбщиеОчереди.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Пользователь);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);	
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ДоступныеЦелевыеОчереди;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ДоступныеЦелевыеОчереди.НайтиПоЗначению(Выборка.Очередь) = Неопределено Тогда
			ДоступныеЦелевыеОчереди.Добавить(Выборка.Очередь);
		КонецЕсли;
	КонецЦикла;
		
	Возврат ДоступныеЦелевыеОчереди;

КонецФункции 
