Функция СформируйИсториюОбщения(Телефон, Начало, Окончание) Экспорт
	
	Результат = Новый ТаблицаЗначений();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	&АбонентВнешний КАК Телефон,
	|	ИСТИНА КАК ЭтоЗвонок,
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК Дата,
	|	Звонки.ЭтоВходящий КАК ЭтоВходящий,
	|	Звонки.Принят КАК Принят,
	|	Звонки.АбонентВнутренний.Код КАК АбонентВнутренний,
	|	Звонки.Инициатор КАК Инициатор,
	|	ЕСТЬNULL(Стат.Исполнитель, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК Оператор,
	|	ЕСТЬNULL(Стат.ОПСсылка, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК ОП,
	|	ЕСТЬNULL(Стат.Исполнитель.ТочкаРазмещения, ЗНАЧЕНИЕ(Справочник.ТочкиРазмещения.ПустаяСсылка)) КАК ТочкаРазмещения
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Стат
	|		ПО (Стат.Сигнатура = Звонки.Сигнатура)
	|ГДЕ
	|	Звонки.АбонентВнешний = &АбонентВнешний
	|	И Звонки.Дата МЕЖДУ &Начало И &Окончание
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("АбонентВнешний", СокрЛП(Телефон));
	Запрос.УстановитьПараметр("Начало",			Начало);
	Запрос.УстановитьПараметр("Окончание", 		Окончание);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат; 
	КонецЕсли;
	
	Результат = РезультатЗапроса.Выгрузить();
	Возврат Результат;	
КонецФункции

#Область История_общения_асинхронно

Функция ИсториюОбщенияВСообщениеСистемыВзаимодействия(Телефон, Начало, Окончание, КлючФоновогоЗадания, КлючОбсуждения, ИдФормы, АдресВХ) Экспорт
	
	// 	ИдЗадания 			- ключ фонового задания
	//	КлючОбсуждения 		- ключ обсуждения системы взаимодействия
	//	ИдФормы			 	- идентификатор формы из которой вызвано фоновое задание 
	
	Результат = Новый ТаблицаЗначений();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	&АбонентВнешний КАК Телефон,
	|	ИСТИНА КАК ЭтоЗвонок,
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК Дата,
	|	Звонки.ЭтоВходящий КАК ЭтоВходящий,
	|	Звонки.Принят КАК Принят,
	|	Звонки.АбонентВнутренний.Код КАК АбонентВнутренний,
	|	Звонки.Инициатор КАК Инициатор,
	|	ЕСТЬNULL(Стат.Исполнитель, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК Оператор,
	|	ЕСТЬNULL(Стат.ОПСсылка, ЗНАЧЕНИЕ(Справочник.Предприятие.ПустаяСсылка)) КАК ОП,
	|	ЕСТЬNULL(Стат.Исполнитель.ТочкаРазмещения, ЗНАЧЕНИЕ(Справочник.ТочкиРазмещения.ПустаяСсылка)) КАК ТочкаРазмещения
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК Стат
	|		ПО (Стат.Сигнатура = Звонки.Сигнатура)
	|ГДЕ
	|	Звонки.АбонентВнешний = &АбонентВнешний
	|	И Звонки.Дата МЕЖДУ &Начало И &Окончание
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("АбонентВнешний", СокрЛП(Телефон));
	Запрос.УстановитьПараметр("Начало",			Начало);
	Запрос.УстановитьПараметр("Окончание", 		Окончание);
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если Не РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	//Для отладки
	//------------
	//Результат = 1;
	
	Доступно = Истина;
	Доступно = Доступно И ЭтоАдресВременногоХранилища(АдресВХ);
	Если Не Доступно Тогда
		Данные = "Телефон = " + Телефон + ", КлючФоновогоЗадания = " + КлючФоновогоЗадания+", КлючОбсуждения = " + КлючОбсуждения+", АдресВХ = " + АдресВХ;
		ЗаписьЖурналаРегистрации("КонсольКонтактЦентраСервер.ИсториюОбщенияВСообщениеСистемыВзаимодействия", УровеньЖурналаРегистрации.Ошибка, Данные, "АдресВХ не является адресом временного хранилища");
		Возврат "";
	КонецЕсли;
	Адрес = ПоместитьВоВременноеХранилище(Результат, АдресВХ);

	//Адрес = ПоместитьВоВременноеХранилище(Результат);
	
	Ответ = Новый Структура();
	Ответ.Вставить("Источник", 						"ФоновоеЗадание");
	Ответ.Вставить("Результат",						"ВременноеХранилище");	// результат выполнения фонового задания, если "временное хранилище", тогда результат см.в "Адрес"
	Ответ.Вставить("ТипЗначенияРезультата",			"ТаблицаЗначений");		// тип значения результата
	Ответ.Вставить("НазначениеРезультата",			"ИсторияОбщения");		// что содержит результат с методологической точки зрения
	Ответ.Вставить("Адрес",						 	Адрес);					// адрес во временном хранилище, содержащим результат фонового задания
	Ответ.Вставить("КлючФоновогоЗадания",			КлючФоновогоЗадания);   // ключ фонового задания
	Ответ.Вставить("ИдФормы",						ИдФормы);     			// идентификатор формы, которую необходимо уведомить об окончании фонового задания
	
	//Получи обсуждение, используемое как канал скрытого оповещения
	//--------------------------------------------------------------
	УстановитьПривилегированныйРежим(Истина);

	Обс = СистемаВзаимодействия.ПолучитьОбсуждение(КлючОбсуждения);
	Если  Обс = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Сообщ 		 = СистемаВзаимодействия.СоздатьСообщение(Обс.Идентификатор);
	Сообщ.Данные = Ответ;
	
	//Для отладки
	//------------
	Сообщ.Текст = "Результат фонового задания";
	Сообщ.Записать();
	
	Обс = "";
	Сообщ = "";
	УстановитьПривилегированныйРежим(Ложь);

	Возврат "";	
	
КонецФункции

Функция СформируйИсториюФоновымЗаданием(Телефон, Начало, Окончание, Фоном, КлючОбсуждения = "", ИдФормы="") Экспорт
	
	Доступно = Истина;
	Доступно = Доступно И Фоном = Истина;
	
	Если Доступно Тогда
		//Телефон = "9506080027"; //Для отладки

		КлючФоновогоЗадания = Телефон+"_"+xmlСтрока(Новый УникальныйИдентификатор());
		
		АдресВХ = ПоместитьВоВременноеХранилище("", ИдФормы);
		
		Парам = Новый Массив();
		Парам.Добавить(Телефон);
		Парам.Добавить(Начало);
		Парам.Добавить(Окончание);
		Парам.Добавить(КлючФоновогоЗадания);
		Парам.Добавить(КлючОбсуждения);
		Парам.Добавить(ИдФормы);
		Парам.Добавить(АдресВХ);
		
		ФоновыеЗадания.Выполнить("КонсольКонтактЦентраСервер.ИсториюОбщенияВСообщениеСистемыВзаимодействия", Парам, КлючФоновогоЗадания, "История общения");
	КонецЕсли;
КонецФункции
#КонецОбласти

#Область Анкета_вопросов_ответов

Функция ТаблицаВопросовОтветов2(Период, Телефон) Экспорт
	//Период  - дата среза последних по анкете
	//Телефон - телефон внешнего абонента
	//Возвращает ТЗ из вопросов и ответа
	
	Результат = Новый ТаблицаЗначений();
			
	Результат.Колонки.Добавить("ВопросАнкеты", 					Новый ОписаниеТипов("СправочникСсылка.Анкеты"));
	Результат.Колонки.Добавить("ВопросСтрокой",					Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ВопросТребуетВыбораОтвета",		Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ДопускаемоеЧислоОтветов",		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0)));
	Результат.Колонки.Добавить("ВопросТребуетОбновитьОтвет",	Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ОтветСтрокой",					Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ФорматТекстаОтвета",			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0)));
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	""idq_CCConsole"" КАК Поле1,
	|	Анкеты.Ссылка КАК Вопрос,
	|	Анкеты.Наименование КАК ВопросСтрокой,
	|	Анкеты.Порядок КАК Порядок,
	|	ЕСТЬNULL(ИдентификаторыВопросов.Ссылка, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК ИдВопроса,
	|	Анкеты.ДопускаемоеЧислоОтветов КАК ДопускаемоеЧислоОтветов
	|ПОМЕСТИТЬ ВТ00_ТекущиеВопросыАнкеты
	|ИЗ
	|	Справочник.Анкеты КАК Анкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыСтрок КАК ИдентификаторыВопросов
	|		ПО (ИдентификаторыВопросов.МодифицированнаяСтрока = Анкеты.МодифицированнаяСтрока)
	|ГДЕ
	|	Анкеты.ПометкаУдаления = ЛОЖЬ
	|	И Анкеты.ЭтоГруппа = ЛОЖЬ
	|	И Анкеты.Родитель.Наименование = &НаименованиеГруппы
	|	И Анкеты.НеПоказыватьПредыдущийОтвет = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Вопрос,
	|	ИдВопроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыОтветов.Ссылка КАК Вопрос
	|ПОМЕСТИТЬ ВТ01_ВопросыСВыборомОтвета
	|ИЗ
	|	Справочник.Анкеты.ВариантыОтветов КАК ВариантыОтветов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ВариантыОтветов.Ссылка = Анкеты.Вопрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияВопроса.Ссылка КАК Вопрос,
	|	МАКСИМУМ(ИсторияВопроса.Период) КАК ДатаСозданияИлиПоследнегоИзмененияВопроса
	|ПОМЕСТИТЬ ВТ02_ВопросыВозможноТребущиеОбновленияОтвета
	|ИЗ
	|	Справочник.Анкеты.ИсторияВопроса КАК ИсторияВопроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ИсторияВопроса.Ссылка = Анкеты.Вопрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияВопроса.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Анкеты.Телефон КАК Телефон,
	|	Анкеты.Вопрос КАК Вопрос,
	|	Анкеты.Номер КАК Номер,
	|	МАКСИМУМ(Анкеты.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ04_КлючиАнкеты
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(
	|			,
	|			Телефон = &Телефон
	|				И Вопрос В
	|					(ВЫБРАТЬ
	|						ВТ00.ИдВопроса
	|					ИЗ
	|						ВТ00_ТекущиеВопросыАнкеты КАК ВТ00)) КАК Анкеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Анкеты.Телефон,
	|	Анкеты.Вопрос,
	|	Анкеты.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Анкеты.Вопрос КАК Вопрос,
	|	Анкеты.Ответ КАК Ответ
	|ПОМЕСТИТЬ ВТ05_ПоследниеОтветы
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(
	|			,
	|			Телефон = &Телефон
	|				И Вопрос В
	|					(ВЫБРАТЬ
	|						ВТ00.ИдВопроса
	|					ИЗ
	|						ВТ00_ТекущиеВопросыАнкеты КАК ВТ00)) КАК Анкеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ04_КлючиАнкеты КАК ВТ04
	|		ПО Анкеты.Телефон = ВТ04.Телефон
	|			И Анкеты.Вопрос = ВТ04.Вопрос
	|			И Анкеты.Номер = ВТ04.Номер
	|			И Анкеты.Период = ВТ04.МаксПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.Вопрос КАК Вопрос,
	|	ВТ00.ВопросСтрокой КАК ВопросСтрокой,
	|	ВТ00.ИдВопроса КАК ИдВопроса,
	|	ВТ00.Порядок КАК Порядок,
	|	ВЫБОР
	|		КОГДА ВТ00.Вопрос = ЕСТЬNULL(ВТ01.Вопрос, ЗНАЧЕНИЕ(Справочник.Анкеты.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВопросТребуетВыбораОтвета,
	|	ВТ00.ДопускаемоеЧислоОтветов КАК ДопускаемоеЧислоОтветов,
	|	ЕСТЬNULL(ВТ02.ДатаСозданияИлиПоследнегоИзмененияВопроса, &ТекущаяДата) КАК ДатаСозданияИлиПоследнегоИзмененияВопроса,
	|	РегСрез.Ответ КАК ОтветСтрокой
	|ИЗ
	|	ВТ00_ТекущиеВопросыАнкеты КАК ВТ00
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ01_ВопросыСВыборомОтвета КАК ВТ01
	|		ПО (ВТ01.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ02_ВопросыВозможноТребущиеОбновленияОтвета КАК ВТ02
	|		ПО (ВТ02.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ05_ПоследниеОтветы КАК РегСрез
	|		ПО (РегСрез.Вопрос = ВТ00.ИдВопроса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ00.Порядок";
	
	
	Запрос.УстановитьПараметр("ТекущаяДата", 			Период);	
	Запрос.УстановитьПараметр("Телефон", 				Телефон);
	Запрос.УстановитьПараметр("НаименованиеГруппы", 	"АНКЕТА");
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
				
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ВопросАнкеты 				=	Выборка.Вопрос;
		НоваяСтрока.ВопросСтрокой 				=	Выборка.ВопросСтрокой;
		НоваяСтрока.ВопросТребуетВыбораОтвета	=	Выборка.ВопросТребуетВыбораОтвета;
		НоваяСтрока.ДопускаемоеЧислоОтветов		=	Выборка.ДопускаемоеЧислоОтветов;
		
		Доступно = ЗначениеЗаполнено(Выборка.ОтветСтрокой);
		НоваяСтрока.ФорматТекстаОтвета 			= ?(Доступно, 1, 2);				
						
	КонецЦикла;	
	
	Возврат Результат;
КонецФункции

Функция ТаблицаВопросовОтветов(Период, Телефон) Экспорт
	//Период  - дата среза последних по анкете
	//Телефон - телефон внешнего абонента
	//Возвращает ТЗ из вопросов и ответа
	
	Результат = Новый ТаблицаЗначений();
			
	Результат.Колонки.Добавить("ВопросАнкеты", 					Новый ОписаниеТипов("СправочникСсылка.Анкеты"));
	Результат.Колонки.Добавить("ВопросСтрокой",					Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ВопросТребуетВыбораОтвета",		Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ДопускаемоеЧислоОтветов",		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0)));
	Результат.Колонки.Добавить("ВопросТребуетОбновитьОтвет",	Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ОтветСтрокой",					Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ФорматТекстаОтвета",			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0)));
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	Анкеты.Ссылка КАК Вопрос,
	|	Анкеты.Наименование КАК ВопросСтрокой,
	|	Анкеты.Порядок КАК Порядок,
	|	ЕСТЬNULL(ИдентификаторыВопросов.Ссылка, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрок.ПустаяСсылка)) КАК ИдВопроса,
	|	Анкеты.ДопускаемоеЧислоОтветов КАК ДопускаемоеЧислоОтветов,
	|	ВЫБОР
	|		КОГДА Анкеты.ПериодНеПоказыватьПредыдущийОтвет = 0
	|			ТОГДА 9999999999
	|		ИНАЧЕ Анкеты.ПериодНеПоказыватьПредыдущийОтвет
	|	КОНЕЦ КАК ПериодНеПоказыватьПредыдущийОтвет
	|ПОМЕСТИТЬ ВТ00_ТекущиеВопросыАнкеты
	|ИЗ
	|	Справочник.Анкеты КАК Анкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыСтрок КАК ИдентификаторыВопросов
	|		ПО (ИдентификаторыВопросов.МодифицированнаяСтрока = Анкеты.МодифицированнаяСтрока)
	|ГДЕ
	|	Анкеты.ПометкаУдаления = ЛОЖЬ
	|	И Анкеты.ЭтоГруппа = ЛОЖЬ
	|	И Анкеты.Родитель.Наименование = &НаименованиеГруппы
	|	И Анкеты.НеПоказыватьПредыдущийОтвет = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Вопрос,
	|	ИдВопроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВариантыОтветов.Ссылка КАК Вопрос
	|ПОМЕСТИТЬ ВТ01_ВопросыСВыборомОтвета
	|ИЗ
	|	Справочник.Анкеты.ВариантыОтветов КАК ВариантыОтветов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ВариантыОтветов.Ссылка = Анкеты.Вопрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияВопроса.Ссылка КАК Вопрос,
	|	МАКСИМУМ(ИсторияВопроса.Период) КАК ДатаСозданияИлиПоследнегоИзмененияВопроса
	|ПОМЕСТИТЬ ВТ02_ВопросыВозможноТребущиеОбновленияОтвета
	|ИЗ
	|	Справочник.Анкеты.ИсторияВопроса КАК ИсторияВопроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК Анкеты
	|		ПО ИсторияВопроса.Ссылка = Анкеты.Вопрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияВопроса.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.Вопрос КАК Вопрос,
	|	МАКСИМУМ(РегГод.Период) КАК ДатаПоследнегоОтвета
	|ПОМЕСТИТЬ ВТ03_РегистрЗаГод
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные КАК РегГод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ00_ТекущиеВопросыАнкеты КАК ВТ00
	|		ПО РегГод.Вопрос = ВТ00.ИдВопроса
	|ГДЕ
	|	РегГод.Телефон = &Телефон
	|	И РегГод.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ТекущаяДата, ГОД, -1) И &ТекущаяДата
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ00.Вопрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Анкеты.Телефон КАК Телефон,
	|	Анкеты.Вопрос КАК Вопрос,
	|	Анкеты.Номер КАК Номер,
	|	МАКСИМУМ(Анкеты.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ04_КлючиАнкеты
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(
	|			,
	|			Телефон = &Телефон
	|				И Вопрос В
	|					(ВЫБРАТЬ
	|						ВТ00.ИдВопроса
	|					ИЗ
	|						ВТ00_ТекущиеВопросыАнкеты КАК ВТ00)) КАК Анкеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Анкеты.Телефон,
	|	Анкеты.Вопрос,
	|	Анкеты.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Анкеты.Вопрос КАК Вопрос,
	|	Анкеты.Ответ КАК Ответ
	|ПОМЕСТИТЬ ВТ05_ПоследниеОтветы
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(
	|			,
	|			Телефон = &Телефон
	|				И Вопрос В
	|					(ВЫБРАТЬ
	|						ВТ00.ИдВопроса
	|					ИЗ
	|						ВТ00_ТекущиеВопросыАнкеты КАК ВТ00)) КАК Анкеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ04_КлючиАнкеты КАК ВТ04
	|		ПО Анкеты.Телефон = ВТ04.Телефон
	|			И Анкеты.Вопрос = ВТ04.Вопрос
	|			И Анкеты.Номер = ВТ04.Номер
	|			И Анкеты.Период = ВТ04.МаксПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ00.Вопрос КАК Вопрос,
	|	ВТ00.ВопросСтрокой КАК ВопросСтрокой,
	|	ВТ00.ИдВопроса КАК ИдВопроса,
	|	ВТ00.Порядок КАК Порядок,
	|	ВЫБОР
	|		КОГДА ВТ00.Вопрос = ЕСТЬNULL(ВТ01.Вопрос, ЗНАЧЕНИЕ(Справочник.Анкеты.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВопросТребуетВыбораОтвета,
	|	ВТ00.ДопускаемоеЧислоОтветов КАК ДопускаемоеЧислоОтветов,
	|	ВТ00.ПериодНеПоказыватьПредыдущийОтвет КАК ПериодНеПоказыватьПредыдущийОтвет,
	|	ЕСТЬNULL(ВТ02.ДатаСозданияИлиПоследнегоИзмененияВопроса, &ТекущаяДата) КАК ДатаСозданияИлиПоследнегоИзмененияВопроса,
	|	ЕСТЬNULL(ВТ03.ДатаПоследнегоОтвета, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоследнегоОтвета,
	|	РАЗНОСТЬДАТ(ЕСТЬNULL(ВТ03.ДатаПоследнегоОтвета, ДАТАВРЕМЯ(1, 1, 1)), ЕСТЬNULL(ВТ02.ДатаСозданияИлиПоследнегоИзмененияВопроса, &ТекущаяДата), МЕСЯЦ) КАК ПериодМеждуПоследнимОтветомИВопросом,
	|	РегСрез.Ответ КАК ОтветСтрокой
	|ИЗ
	|	ВТ00_ТекущиеВопросыАнкеты КАК ВТ00
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ01_ВопросыСВыборомОтвета КАК ВТ01
	|		ПО (ВТ01.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ02_ВопросыВозможноТребущиеОбновленияОтвета КАК ВТ02
	|		ПО (ВТ02.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ03_РегистрЗаГод КАК ВТ03
	|		ПО (ВТ03.Вопрос = ВТ00.Вопрос)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ05_ПоследниеОтветы КАК РегСрез
	|		ПО (РегСрез.Вопрос = ВТ00.ИдВопроса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ00.Порядок";
	
	
	Запрос.УстановитьПараметр("ТекущаяДата", 			Период);	
	Запрос.УстановитьПараметр("Телефон", 				Телефон);
	Запрос.УстановитьПараметр("НаименованиеГруппы", 	"АНКЕТА");
	
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НормативныйПериодОбновленияОтветаНаВопрос 	=	Выборка.ПериодНеПоказыватьПредыдущийОтвет;
		МодульПериодаМеждуПоследнимОтветомИВопросом =	Выборка.ПериодМеждуПоследнимОтветомИВопросом;
			
		Если МодульПериодаМеждуПоследнимОтветомИВопросом < 0 Тогда
			МодульПериодаМеждуПоследнимОтветомИВопросом = (-1)*МодульПериодаМеждуПоследнимОтветомИВопросом;
		КонецЕсли;
		
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ВопросАнкеты 				=	Выборка.Вопрос;
		НоваяСтрока.ВопросСтрокой 				=	Выборка.ВопросСтрокой;
		НоваяСтрока.ВопросТребуетВыбораОтвета	=	Выборка.ВопросТребуетВыбораОтвета;
		НоваяСтрока.ДопускаемоеЧислоОтветов		=	Выборка.ДопускаемоеЧислоОтветов;
		
		Если МодульПериодаМеждуПоследнимОтветомИВопросом > НормативныйПериодОбновленияОтветаНаВопрос Тогда 
			НоваяСтрока.ВопросТребуетОбновитьОтвет = ИСТИНА;
		Иначе
			НоваяСтрока.ОтветСтрокой  = Выборка.ОтветСтрокой;	
			
			//Форматирование текста ответа: ответ серым цветом, если есть ранее полученный ответ, иначе черным
			//-------------------------------------------------------------------------------------------------
			Доступно = ЗначениеЗаполнено(Выборка.ОтветСтрокой);
			НоваяСтрока.ФорматТекстаОтвета = ?(Доступно, 1, 2);				
		КонецЕсли;
					
	КонецЦикла;	
	
	Возврат Результат;
КонецФункции

Функция ТаблицаВопросовОтветов_В_СообщениеСистемыВзаимодействия(Период, Телефон, КлючФоновогоЗадания, КлючОбсуждения, ИдФормы, АдресВХ) Экспорт
	//Период  - дата среза последних по анкете
	//Телефон - телефон внешнего абонента
	//Возвращает ТЗ из вопросов и ответа
	
	Результат = ТаблицаВопросовОтветов(Период, Телефон);
	
	Доступно = Истина;
	Доступно = Доступно И ЭтоАдресВременногоХранилища(АдресВХ);
	Если Не Доступно Тогда
		Данные = "Телефон = " + Телефон + ", КлючФоновогоЗадания = " + КлючФоновогоЗадания + ", КлючОбсуждения = " + КлючОбсуждения + ", АдресВХ = " + АдресВХ;
		ЗаписьЖурналаРегистрации("КонсольКонтактЦентраСервер.ТаблицаВопросовОтветов_В_СообщениеСистемыВзаимодействия", УровеньЖурналаРегистрации.Ошибка, Данные, "АдресВХ не является адресом временного хранилища");
		Возврат "";
	КонецЕсли;
	Адрес = ПоместитьВоВременноеХранилище(Результат, АдресВХ);

	Ответ = Новый Структура();
	Ответ.Вставить("Источник", 						"ФоновоеЗадание");
	Ответ.Вставить("Результат",						"ВременноеХранилище");		// результат выполнения фонового задания, если "временное хранилище", тогда результат см.в "Адрес"
	Ответ.Вставить("ТипЗначенияРезультата",			"ТаблицаЗначений");			// тип значения результата
	Ответ.Вставить("НазначениеРезультата",			"ТаблицаВопросовОтветов");	// что содержит результат с методологической точки зрения
	Ответ.Вставить("Адрес",						 	Адрес);						// адрес во временном хранилище, содержащим результат фонового задания
	Ответ.Вставить("КлючФоновогоЗадания",			КлючФоновогоЗадания);   	// ключ фонового задания
	Ответ.Вставить("ИдФормы",						ИдФормы);     				// идентификатор формы, которую необходимо уведомить об окончании фонового задания
	
	//Получи обсуждение, используемое как канал скрытого оповещения
	//--------------------------------------------------------------
	Обс = СистемаВзаимодействия.ПолучитьОбсуждение(КлючОбсуждения);
	Если  Обс = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Сообщ 		 = СистемаВзаимодействия.СоздатьСообщение(Обс.Идентификатор);
	Сообщ.Данные = Ответ;
	
	//Для отладки
	//------------
	Сообщ.Текст = "Результат фонового задания: таблица вопросов и ответов";
	
	УстановитьПривилегированныйРежим(Истина);
	Сообщ.Записать();
	Обс = "";
	УстановитьПривилегированныйРежим(Ложь);

	Возврат "";	

КонецФункции

Функция ТаблицаВопросовОтветовФоновымЗаданием(Период, Телефон, Фоном, КлючОбсуждения, ИдФормы) Экспорт
	
	Доступно = Истина;
	Доступно = Доступно И Фоном = Истина;
	
	Если Доступно Тогда
		//Телефон = "9506080027"; //Для отладки

		КлючФоновогоЗадания = Телефон+"_"+xmlСтрока(Новый УникальныйИдентификатор());
		
		АдресВХ = ПоместитьВоВременноеХранилище("", ИдФормы);
		
		Парам = Новый Массив();
		Парам.Добавить(Период);
		Парам.Добавить(Телефон);
		Парам.Добавить(КлючФоновогоЗадания);
		Парам.Добавить(КлючОбсуждения);
		Парам.Добавить(ИдФормы);
		Парам.Добавить(АдресВХ);
		
		ФоновыеЗадания.Выполнить("КонсольКонтактЦентраСервер.ТаблицаВопросовОтветов_В_СообщениеСистемыВзаимодействия", Парам, КлючФоновогоЗадания, "Таблица вопросов-ответов");
	КонецЕсли;

КонецФункции
#КонецОбласти