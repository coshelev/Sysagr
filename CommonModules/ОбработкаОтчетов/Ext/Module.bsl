//**********************************************************************************************************************************
// ВЫЧИСЛЯЕМЫЕ ПОЛЯ ОТЧЕТОВ СКД
//**********************************************************************************************************************************

Функция ЗначенияСтрокой (Сигнатура, ИмяРеквизита) Экспорт

	// Вызывается из отчета ОтчетЗадачиЛояльностиДляExcel
	// Параметры: 
	//		- сигнатура мастер-продажи;
	//		- имя реквизита регистра сведений Продажи, значения которых должны быть возвращены строкой в виде списка
	// Возвращает в виде строки список из значений реквизитов (напр. номера) заказ-нарядов, составляющих пакет
		
	Результат = "";
	
	Доступно = ТипЗнч(Сигнатура) = Тип("Строка");
	Доступно = Доступно И ТипЗнч(ИмяРеквизита) = Тип ("Строка");
	Доступно = Доступно И ЗначениеЗаполнено(Сигнатура);
	Доступно = Доступно И ЗначениеЗаполнено(ИмяРеквизита);
	
	Если Не Доступно Тогда
		Возврат Результат
	КонецЕсли;
	
	
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажиПакеты.Продажа КАК Продажа
	|ПОМЕСТИТЬ ВТ01_ПродажиПакета
	|ИЗ
	|	РегистрСведений.ПродажиПакеты КАК ПродажиПакеты
	|ГДЕ
	|	ПродажиПакеты.Сигнатура = &Сигнатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Продажи.Номер КАК ЗначениеПоля
	|ИЗ
	|	РегистрСведений.Продажи КАК Продажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ01_ПродажиПакета КАК ВТ01
	|		ПО Продажи.Сигнатура = ВТ01.Продажа";
	
	//Если требуется список не из номеров заказ-нарядов
	//---------------------------------------------------------------------
	Если ИмяРеквизита<> "Номер" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Продажи.Номер", "Продажи."+ИмяРеквизита); 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Сигнатура", Сигнатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Сч = 0;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Сч=0 Тогда
			Результат = Выборка.ЗначениеПоля
		Иначе
			Результат = Результат+";"+Выборка.ЗначениеПоля;
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;
	
	Возврат Результат;
		
КонецФункции

Функция РегионПолучитьПоНомеруТелефона(АбонентВнешний) Экспорт
 	Возврат КонвертацияСервер.РегионПолучитьПоНомеруТелефона(АбонентВнешний);
КонецФункции

#Область БазовыеРеестрыСТОреестрЗадачОбработкиНегативаПоДатеЗакрытияЗаказНаряда
Функция ОтветыСтрокой(Сигнатура, Вопрос)Экспорт
	//Возвращает несколько ответов одной строкой	
	//Параметры:
	//	Сигнатура 	- сигнатура задачи (анкеты)
	//	Вопрос		- вопрос
	//	Номер		- номер вопроса
	
	Результат  = "";
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыОбратнойСвязи.Ответ.ПолнаяСтрока КАК Ответ
	|ИЗ
	|	РегистрСведений.АнкетыОбратнойСвязи КАК АнкетыОбратнойСвязи
	|ГДЕ
	|	АнкетыОбратнойСвязи.СигнатураЗадачи = &Сигнатура
	|	И АнкетыОбратнойСвязи.Вопрос = &Вопрос";
	Запрос.УстановитьПараметр("Сигнатура",	Сигнатура);
	Запрос.УстановитьПараметр("Вопрос",		Вопрос);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат = Результат+";"+Символы.ПС+Выборка.Ответ;
	КонецЦикла;
	Результат = Прав(Результат, СтрДлина(Результат)-2);
	Возврат Результат;
КонецФункции

Функция ОтветыКомментарииСтрокой(Сигнатура, Вопрос)Экспорт
	//Возвращает несколько ответов одной строкой	
	//Параметры:
	//	Сигнатура 	- сигнатура задачи (анкеты)
	//	Вопрос		- вопрос
	//	Номер		- номер вопроса
	
	Результат  = "";
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетыОбратнойСвязи.ОтветКомментарий.ПолнаяСтрока КАК Ответ
	|ИЗ
	|	РегистрСведений.АнкетыОбратнойСвязи КАК АнкетыОбратнойСвязи
	|ГДЕ
	|	АнкетыОбратнойСвязи.СигнатураЗадачи = &Сигнатура
	|	И АнкетыОбратнойСвязи.Вопрос = &Вопрос";
	Запрос.УстановитьПараметр("Сигнатура",	Сигнатура);
	Запрос.УстановитьПараметр("Вопрос",		Вопрос);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат = Результат+";"+Символы.ПС+Выборка.Ответ;
	КонецЦикла;
	Результат = Прав(Результат, СтрДлина(Результат)-2);
	Возврат Результат;
КонецФункции
#КонецОбласти

#Область Отчеты_для_отправки_на_эл_почту
//*********************************************************************************************************************
// Отчеты для отправки на эл.почту
//*********************************************************************************************************************

Процедура ОтправьНаЭлПочтуОтчет_ГрафикАктивностиТелефоновВОчереди() Экспорт
	
	//Регламентное задание отключено 30.08.2018, т.к. отчет устарел
	Возврат;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТелОчередиОповещатьСотрудников.Ссылка КАК Очередь,
	|	ТелОчередиОповещатьСотрудников.Сотрудник.АдресЭлектроннойПочты КАК СотрудникАдресЭлектроннойПочты
	|ИЗ
	|	Справочник.ТелОчереди.ОповещатьСотрудников КАК ТелОчередиОповещатьСотрудников
	|ГДЕ
	|	ТелОчередиОповещатьСотрудников.Сотрудник <> ЗНАЧЕНИЕ(Справочник.ТелОчереди.ПустаяСсылка)
	|	И ТелОчередиОповещатьСотрудников.Сотрудник.ЭтоГруппа = ЛОЖЬ
	|	И ТелОчередиОповещатьСотрудников.Сотрудник.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеЭлементаПредприятия.РабочееМесто)
	|	И ТелОчередиОповещатьСотрудников.Сотрудник.АдресЭлектроннойПочты <> &ПустаяСтрока
	|ИТОГИ ПО
	|	Очередь";
	Запрос.УстановитьПараметр("ПустаяСтрока", "");
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос, "ЛокальнаяСистема");
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Дерево = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого Строка1 Из Дерево.Строки Цикл
		
		Очередь = Строка1.Очередь;
		
		// Установи параметры отчета
		//-------------------------------------------------
		Отч = Отчеты.ГрафикАктивностиТелефоновВОчереди.Создать();
		Отч.Дата											= НачалоДня(ТекущаяДата())-1;
		Отч.Очередь 										= Очередь;
		Отч.НачалоРабочегоВремениВАстрономическихЧасах 		= 6;
		Отч.КонецРабочегоВремениВАстрономическихЧасах		= 20;
		Отч.НормаОжидания									= 20;
		
		// Сформировать табличный документ, содержащий отчет
		//-----------------------------------------------------------------
		ТаблДок = Новый ТабличныйДокумент();
		Отч.СформироватьОтчет(ТаблДок);
		
		//Вариант 1. Через файл на диске
		//-----------------------------------------------------------------------------------
		//ИмяФайла = КаталогВременныхФайлов()+xmlСтрока(Новый УникальныйИдентификатор)+".html";
		//ТаблДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.HTML);	
		//Файл = Новый Файл(ИмяФайла);
		//ТекстДок = Новый ТекстовыйДокумент();
		//ТекстДок.Прочитать(ИмяФайла);
		//Содержание =  ТекстДок.ПолучитьТекст();
		//=>
		Содержание = ОбщегоНазначения.ТабличныйДокумент1C_в_HTML(ТаблДок);		
		
		//Вариант 2. Через поток - НЕ РАБОТАЕТ                                                         
		//---------------------------------------------------------------------------------------------
		//Птк = Новый ПотокВПамяти();
		//ТаблДок.Записать(Птк, ТипФайлаТабличногоДокумента.HTML5);
		//ТекстДок = Новый ТекстовыйДокумент();
		//ТекстДок.Прочитать(Птк); 
		//Содержание =  ТекстДок.ПолучитьТекст();
		
		// Отправь эл.письмо
		//---------------------------------------------------------------------------------------------------------------------------
		Для Каждого Строка2 Из Строка1.Строки Цикл
			АдресЭлПочты   = Строка2.СотрудникАдресЭлектроннойПочты;
			
			От							= "info@luidor.ru";
			ОтображаемоеИмяОтправителя 	= "Агрегатор. Отчетность";
			Кому						= АдресЭлПочты;
			Копия						= ""; 
			СкрытаяКопия				= "";
			
			//Тема
			//---------------------------------------------------------------------------------------------
			ДатаОтчета		= Формат(НачалоДня(НачалоДня(ТекущаяДата())-1),"ДЛФ=DD");
			Тема			= "График активности телефонов в очереди "+Отч.Очередь.Наименование+" за "+ДатаОтчета;
			
			Если СтрНайти(АдресЭлПочты,"@luidor")>0 Тогда
				ПортSMTP = 25; // отправка письма внутри домена, таких писем может быть много, отправляем без авторизации
			Иначе
				ПортSMTP = 587; //отправка не внутри домена, поэтому возможна отправка только при авторизации на почтовом сервере
			КонецЕсли;
			ЭлПочта.ПисьмоОтправить(От, Кому, Копия, СкрытаяКопия, Тема, Содержание, ОтображаемоеИмяОтправителя, Ложь, ПортSMTP);
			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//*********************************************************************************************************************

Процедура ОтправьНаЭлПочтуОтчет_ГрафикДоступностиПодразделенийДляПриемаЗвонков() Экспорт
	
	//С 11.03.2019 более не рассылать, поэтому возврат
	//--------------------------------------------------
	Возврат;
	
	Отч = Отчеты.ГрафикДоступностиПодразделенийДляПриемаЗвонков.Создать();
	Отч.УстановитьНастройки();
	ТаблДок = Новый ТабличныйДокумент();
	Отч.СформироватьОтчет(ТаблДок);
	Содержание = ОбщегоНазначения.ТабличныйДокумент1C_в_HTML(ТаблДок);	
	
	СписокПолучателей = Новый СписокЗначений();
	СписокПолучателей.Добавить("GusevSV@luidor.ru");
	СписокПолучателей.Добавить("GubarIN@luidor.ru");
	СписокПолучателей.Добавить("BelyantsevaJN@luidor.ru");
	СписокПолучателей.Добавить("KoshelevSS@luidor.ru");
	
	
	Для Каждого Получатель Из СписокПолучателей Цикл
			АдресЭлПочты   = Получатель.Значение;
			
			От							= "info@luidor.ru";
			ОтображаемоеИмяОтправителя 	= "Агрегатор. Отчетность";
			Кому						= АдресЭлПочты;
			Копия						= ""; 
			СкрытаяКопия				= "";
			
			//Тема
			//---------------------------------------------------------------------------------------------
			ДатаОтчета		= Формат(НачалоДня(НачалоДня(ТекущаяДата())-1),"ДЛФ=DD");
			Тема			= "График доступности подразделений для приема звонков за "+ДатаОтчета;
			
			Если СтрНайти(АдресЭлПочты,"@luidor")>0 Тогда
				ПортSMTP = 25; // отправка письма внутри домена, таких писем может быть много, отправляем без авторизации
			Иначе
				ПортSMTP = 587; //отправка не внутри домена, поэтому возможна отправка только при авторизации на почтовом сервере
			КонецЕсли;
			ЭлПочта.ПисьмоОтправить(От, Кому, Копия, СкрытаяКопия, Тема, Содержание, ОтображаемоеИмяОтправителя, Ложь, ПортSMTP);
			
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

#Область Контроль_доступа

Функция ОтборПоПолю(ИмяПоля, КомпоновщикНастроек) Экспорт
	// Устанавливает отбор по полю, связанному с доступными пользовтелю подразделениями
	// ИмяПоля - имя поля компоновки данных, по которому требуется наложить отбор
	
	Если ПараметрыСеанса.РольДоступнаАдминистратор Тогда
		Возврат "";
	КонецЕсли;
	
	ЭлОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПользователиПодразделения.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ01
	|ИЗ
	|	Справочник.Пользователи.Подразделения КАК ПользователиПодразделения
	|ГДЕ
	|	ПользователиПодразделения.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КонтактЦентрыПодразделения.Подразделение
	|ИЗ
	|	Справочник.КонтактЦентры.Подразделения КАК КонтактЦентрыПодразделения
	|ГДЕ
	|	КонтактЦентрыПодразделения.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				КЦ.Ссылка
	|			ИЗ
	|				Справочник.КонтактЦентры.Пользователи КАК КЦ
	|			ГДЕ
	|				КЦ.Пользователь = &Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ПродажиСоответствиеТочек.ТочкаОформления, ТочкиПродажВподразделения.Точка) КАК Точка
	|ИЗ
	|	РегистрСведений.ТочкиПродажВподразделения КАК ТочкиПродажВподразделения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Предприятие КАК Предприятие
	|		ПО ТочкиПродажВподразделения.Подразделение = Предприятие.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПродажиСоответствиеТочек КАК ПродажиСоответствиеТочек
	|		ПО ТочкиПродажВподразделения.Точка = ПродажиСоответствиеТочек.Точка
	|ГДЕ
	|	Предприятие.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ
	|				ВТ01.Подразделение
	|			ИЗ
	|				ВТ01)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Точка";
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийПользователь);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	ДоступныеТочки = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);

	СписокДоступныхТочек = Новый СписокЗначений();
	СписокДоступныхТочек.ЗагрузитьЗначения(ДоступныеТочки);
	
	ЭлОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлОтбора.ВидСравнения	= ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлОтбора.ПравоеЗначение = СписокДоступныхТочек;
	ЭлОтбора.Использование 	= Истина;	
	
КонецФункции

#КонецОбласти

#Область ЗапросЛояльностиДетальный
Функция ЗапросЛояльностиДетальный(Начало, Окончание, ТипПериода = 0) Экспорт
	//Возвращает таблицу значений с анкетой лояльности
	//Параметры:
	//	Начало, Окончание - 	начало и окончание период запроса;
	//  ТипПериода		  - 0,  если периодом является период анкетирования; 1 - если периодом является период дат реализаций и 
	//							период дат закрытия заказ-нарядов
	
	Перем Рез;
	
	//Получи пустой результат запроса как значение по умолчанию
	Запрос = Новый Запрос();
	Запрос.Текст = "SELECT 1 WHERE TRUE = FALSE";
	Рез = Запрос.Выполнить();
		
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Начало) 	= Тип("Дата");
	Доступно = Доступно И ТипЗнч(Окончание) = Тип("Дата");
	Доступно = Доступно И ТипЗнч(ТипПериода) = Тип("Число");
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("ОбработкаОтчетов.ЗапросЛояльностиДетальный", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ОбработкаОтчетов, "Начало = "+Строка(Начало)+", Окончание = "+Строка(Окончание)+", ТипПериода="+Строка(ТипПериода), "Ошибка в типах/значениях параметров");
		Возврат Рез;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""ОбработкаОтчетов.ОтчетЛояльностиДетальный()"" КАК ИдЗапроса,
	|	Анкеты1.Период КАК АнкетаПериод,
	|	Анкеты1.СигнатураЗадачQ КАК СигнатураЗадачи,
	|	Анкеты1.Вопрос КАК Вопрос1,
	|	Анкеты1.Ответ КАК Ответ1,
	|	Анкеты1.ОтветКомментарий.Наименование КАК ОтветКомментарий1,
	|	Продажи.Документ КАК ТипДокумента,
	|	Продажи.Заказчик КАК Заказчик,
	|	Продажи.Точка КАК Точка,
	|	Анкеты2.Вопрос КАК Вопрос2,
	|	Анкеты2.Ответ КАК Ответ2,
	|	Анкеты2.ОтветКомментарий.Наименование КАК ОтветКомментарий2,
	|	ВЫБОР
	|		КОГДА Машинозаезды.Сигнатура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА Продажи.Документ = ""Реализация""
	|						ТОГДА ""Реализация""
	|					ИНАЧЕ ""Заказ-наряд""
	|				КОНЕЦ
	|		ИНАЧЕ ""Машинозаезд""
	|	КОНЕЦ КАК ДокТип,
	|	ВЫБОР
	|		КОГДА Машинозаезды.Сигнатура ЕСТЬ NULL
	|			ТОГДА ПОДСТРОКА(Анкеты1.СигнатураЗадачQ, 4, 36)
	|		ИНАЧЕ Машинозаезды.Сигнатура
	|	КОНЕЦ КАК ДокСсылка,
	|	ВЫБОР
	|		КОГДА Машинозаезды.Сигнатура ЕСТЬ NULL
	|			ТОГДА Продажи.Номер
	|		ИНАЧЕ Машинозаезды.Номер
	|	КОНЕЦ КАК ДокНомер,
	|	ВЫБОР
	|		КОГДА Машинозаезды.Сигнатура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА Продажи.Документ = ""Реализация""
	|						ТОГДА Продажи.Дата
	|					ИНАЧЕ Продажи.ДопДата
	|				КОНЕЦ
	|		ИНАЧЕ Машинозаезды.Дата
	|	КОНЕЦ КАК ДокДата
	|ПОМЕСТИТЬ ВТ01_АнкетыПродаж
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос В (&БазовыйВопросЛояльности1)) КАК Анкеты1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Продажи КАК Продажи
	|		ПО Анкеты1.СигнатураЗадачQ = Продажи.Сигнатура
	|			И (ВЫБОР
	|				КОГДА &ТипПериода = 0
	|					ТОГДА Анкеты1.Период МЕЖДУ &Начало И &Окончание
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Продажи.Документ = ""Реализация""
	|							ТОГДА Продажи.Дата МЕЖДУ &Начало И &Окончание
	|						ИНАЧЕ Продажи.ДопДата МЕЖДУ &Начало И &Окончание
	|					КОНЕЦ
	|			КОНЕЦ)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АнкетыРасширенные.СрезПоследних(, Вопрос В (&БазовыйВопросЛояльности2)) КАК Анкеты2
	|		ПО Анкеты1.СигнатураЗадачQ = Анкеты2.СигнатураЗадачQ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПродажиМашинозаезды КАК Машинозаезды
	|		ПО (Продажи.Машинозаезд = Машинозаезды.Сигнатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ01.Заказчик КАК Заказчик,
	|	КонтрагентыКлючиВИсточникахДанных.Ссылка КАК Ссылка,
	|	КонтрагентыКлючиВИсточникахДанных.Ссылка.ИНН КАК ИНН,
	|	КонтрагентыКлючиВИсточникахДанных.Ссылка.КПП КАК КПП
	|ПОМЕСТИТЬ ВТ02_Контрагенты
	|ИЗ
	|	ВТ01_АнкетыПродаж КАК ВТ01
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КлючиВИсточникахДанных КАК КонтрагентыКлючиВИсточникахДанных
	|		ПО ВТ01.Заказчик = КонтрагентыКлючиВИсточникахДанных.ЗначениеКлюча
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ01.АнкетаПериод КАК АнкетаПериод,
	|	ВТ01.СигнатураЗадачи КАК СигнатураЗадачи,
	|	ВТ01.Вопрос1 КАК Вопрос1,
	|	ВТ01.Ответ1 КАК Ответ1,
	|	ВЫРАЗИТЬ(ВТ01.ОтветКомментарий1 КАК СТРОКА(1000)) КАК ОтветКомментарий1,
	|	ВТ01.ТипДокумента КАК ТипДокумента,
	|	ВТ01.Заказчик КАК Заказчик,
	|	ВТ01.Точка КАК Точка,
	|	ВТ01.Вопрос2 КАК Вопрос2,
	|	ВТ01.Ответ2 КАК Ответ2,
	|	ВЫБОР
	|		КОГДА ВТ01.Вопрос2 = &ДовольныЛиВыПосещениемСтанцииПо10бальнойШкале
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ01.Ответ2 = &_0
	|						ТОГДА &_1
	|					КОГДА ВТ01.Ответ2 = &_1
	|						ТОГДА &_1
	|					КОГДА ВТ01.Ответ2 = &_2
	|						ТОГДА &_1
	|					КОГДА ВТ01.Ответ2 = &_3
	|						ТОГДА &_2
	|					КОГДА ВТ01.Ответ2 = &_4
	|						ТОГДА &_2
	|					КОГДА ВТ01.Ответ2 = &_5
	|						ТОГДА &_3
	|					КОГДА ВТ01.Ответ2 = &_6
	|						ТОГДА &_3
	|					КОГДА ВТ01.Ответ2 = &_7
	|						ТОГДА &_4
	|					КОГДА ВТ01.Ответ2 = &_8
	|						ТОГДА &_4
	|					КОГДА ВТ01.Ответ2 = &_9
	|						ТОГДА &_5
	|					КОГДА ВТ01.Ответ2 = &_10
	|						ТОГДА &_5
	|				КОНЕЦ
	|		ИНАЧЕ ВТ01.Ответ2
	|	КОНЕЦ КАК Ответ2ДляОценкиЛояльности,
	|	ВЫРАЗИТЬ(ВТ01.ОтветКомментарий2 КАК СТРОКА(1000)) КАК ОтветКомментарий2,
	|	ВТ01.ДокТип КАК ДокТип,
	|	ВТ01.ДокСсылка КАК ДокСсылка,
	|	ВТ01.ДокНомер КАК ДокНомер,
	|	ВТ01.ДокДата КАК ДокДата,
	|	ВТ02_Контрагенты.ИНН КАК ИНН,
	|	ВТ02_Контрагенты.КПП КАК КПП,
	|	ВТ02_Контрагенты.Ссылка КАК Контрагент
	|ПОМЕСТИТЬ ВТ03
	|ИЗ
	|	ВТ01_АнкетыПродаж КАК ВТ01
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ02_Контрагенты КАК ВТ02_Контрагенты
	|		ПО ВТ01.Заказчик = ВТ02_Контрагенты.Заказчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ03.АнкетаПериод КАК АнкетаПериод,
	|	ВТ03.СигнатураЗадачи КАК СигнатураЗадачи,
	|	ВТ03.Вопрос1.Наименование КАК Вопрос1,
	|	ВТ03.Ответ1.Наименование КАК Ответ1,
	|	ВТ03.ОтветКомментарий1 КАК ОтветКомментарий1,
	|	ВТ03.ТипДокумента КАК ТипДокумента,
	|	ВТ03.Заказчик КАК Заказчик,
	|	ВТ03.Точка КАК Точка,
	|	ВТ03.Вопрос2.Наименование КАК Вопрос2,
	|	ВТ03.Ответ2.Наименование КАК Ответ2,
	|	ВТ03.Ответ2ДляОценкиЛояльности.Наименование КАК Ответ2ДляОценкиЛояльности,
	|	ВТ03.ОтветКомментарий2 КАК ОтветКомментарий2,
	|	ВТ03.ДокТип КАК ДокТип,
	|	ВТ03.ДокСсылка КАК ДокСсылка,
	|	ВТ03.ДокНомер КАК ДокНомер,
	|	ВТ03.ДокДата КАК ДокДата,
	|	ВТ03.ИНН КАК ИНН,
	|	ВТ03.КПП КАК КПП,
	|	ВТ03.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ВТ03.Ответ1 = &Нет
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_1
	|			ТОГДА ""Негативный-Нелояльный""
	|		КОГДА ВТ03.Ответ1 = &Нет
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_2
	|			ТОГДА ""Негативный-Нелояльный""
	|		КОГДА ВТ03.Ответ1 = &Нет
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_3
	|			ТОГДА ""Негативный-Нелояльный""
	|		КОГДА ВТ03.Ответ1 = &Нет
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_4
	|			ТОГДА ""Негативный-Лояльный""
	|		КОГДА ВТ03.Ответ1 = &Нет
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_5
	|			ТОГДА ""Негативный-Лояльный""
	|		КОГДА ВТ03.Ответ1 = &Да
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_1
	|			ТОГДА ""Позитивный-Нелояльный""
	|		КОГДА ВТ03.Ответ1 = &Да
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_2
	|			ТОГДА ""Позитивный-Нелояльный""
	|		КОГДА ВТ03.Ответ1 = &Да
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_3
	|			ТОГДА ""Позитивный-Нелояльный""
	|		КОГДА ВТ03.Ответ1 = &Да
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_4
	|			ТОГДА ""Позитивный-Лояльный""
	|		КОГДА ВТ03.Ответ1 = &Да
	|				И ВТ03.Ответ2ДляОценкиЛояльности = &_5
	|			ТОГДА ""Позитивный-Лояльный""
	|		ИНАЧЕ ""Ошибка""
	|	КОНЕЦ КАК ТипОтзыва
	|ИЗ
	|	ВТ03 КАК ВТ03";
	
	Запрос.УстановитьПараметр("ТипПериода",	ТипПериода);
	Запрос.УстановитьПараметр("Начало",		Начало);
	Запрос.УстановитьПараметр("Окончание",	Окончание);
	Запрос.УстановитьПараметр("БазовыйВопросЛояльности1", 	Анкета._1йБазовыйВопросЛояльности());
	Запрос.УстановитьПараметр("БазовыйВопросЛояльности2",	Анкета._2йБазовыйВопросЛояльности());
	Запрос.УстановитьПараметр("Да",		Анкета.Да());
	Запрос.УстановитьПараметр("Нет",	Анкета.Нет());
	Запрос.УстановитьПараметр("ДовольныЛиВыПосещениемСтанцииПо10бальнойШкале",	Анкета.КаковаВероятностьЧтоВыПосоветуетеНашАвтосалон());
	Запрос.УстановитьПараметр("_0",		Анкета._0());
	Запрос.УстановитьПараметр("_1", 	Анкета._1());
	Запрос.УстановитьПараметр("_2",		Анкета._2());
	Запрос.УстановитьПараметр("_3", 	Анкета._3());
	Запрос.УстановитьПараметр("_4", 	Анкета._4());
	Запрос.УстановитьПараметр("_5", 	Анкета._5());
	Запрос.УстановитьПараметр("_6", 	Анкета._6());
	Запрос.УстановитьПараметр("_7", 	Анкета._7());
	Запрос.УстановитьПараметр("_8", 	Анкета._8());
	Запрос.УстановитьПараметр("_9",		Анкета._9());
	Запрос.УстановитьПараметр("_10", 	Анкета._10());
	
	
	Рез = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	
	
	
	Возврат Рез;
КонецФункции
#КонецОбласти

#Область ОтчетТМЦ
Функция ТМЦ1Отчет(Начало, Окончание) Экспорт
	Перем Рез;
	
	//Получи пустой результат запроса как значение по умолчанию
	//----------------------------------------------------------
	Запрос = Новый Запрос();
	Запрос.Текст = "SELECT 1 WHERE TRUE = FALSE";
	Рез = Запрос.Выполнить();
		
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Начало) 	= Тип("Дата");
	Доступно = Доступно И ТипЗнч(Окончание) = Тип("Дата");
	Если Не Доступно Тогда
		ЗаписьЖурналаРегистрации("ОбработкаОтчетов.ТМЦ1Отчет", УровеньЖурналаРегистрации.Ошибка, Метаданные.ОбщиеМодули.ОбработкаОтчетов, "Начало = "+Строка(Начало)+", Окончание = "+Строка(Окончание), "Ошибка в типах/значениях параметров");
		Возврат Рез;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Звонки.Сигнатура КАК Сигнатура,
	|	Звонки.Дата КАК Дата,
	|	Звонки.Регион.Наименование КАК Регион,
	|	Звонки.ЭтоВходящий КАК ЭтоВходящий,
	|	Звонки.АбонентВнешний КАК Абонент,
	|	Звонки.АбонентВнутренний.Код КАК ОператорТелефон,
	|	ВЫБОР
	|		КОГДА Звонки.ЭтоВходящий
	|			ТОГДА Звонки.Инициатор.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Канал,
	|	Звонки.Принят КАК Принят,
	|	ЗвонкиСтатОбщая.ОПРазговор КАК ОПРазговор,
	|	ЗвонкиСтатОбщая.Основание КАК АгрОснование
	|ИЗ
	|	РегистрСведений.Звонки КАК Звонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК ЗвонкиСтатОбщая
	|		ПО Звонки.Сигнатура = ЗвонкиСтатОбщая.Сигнатура
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &Начало И &Окончание
	|	И Звонки.АбонентВнутренний.Код В (""3023"", ""3024"", ""3025"", ""3026"", ""3027"", ""3028"", ""3029"", ""3041"", ""3045"", ""3046"", ""3048"", ""5900"")
	|	И НЕ Звонки.АбонентВнешний В
	|				(ВЫБРАТЬ
	|					ТелВнутренние.Код
	|				ИЗ
	|					Справочник.ТелВнутренние КАК ТелВнутренние)
	|	И НЕ Звонки.АбонентВнешний В
	|				(ВЫБРАТЬ
	|					ТелВнутренние.Код
	|				ИЗ
	|					Справочник.ТелОчереди КАК ТелВнутренние)";
	
	Запрос.УстановитьПараметр("Начало",		Начало);
	Запрос.УстановитьПараметр("Окончание",	Окончание);
	Рез = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	Возврат Рез;
КонецФункции
#КонецОбласти

#Область Отчет_по_целевому_трафику_И_выполнение_плана_по_трафику
Функция ТексЗапросаРеестрЦелевыхОУ() Экспорт
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	Звонки.Ссылка КАК Ссылка,
	|	Звонки.Дата КАК ДатаЗвонка,
	|	Звонки.Код КАК Сигнатура,
	|	Звонки.Входящий КАК Входящий,
	|	Звонки.Оператор КАК СотрудникСсылка,
	|	Звонки.ТелОператор КАК НомерВнутреннегоТелефона,
	|	Звонки.ТочкаОформления КАК ТочкаОформленияcСсылка,
	|	Звонки.Состояние.Наименование КАК Состояние,
	|	Звонки.Статус КАК Статус,
	|	Звонки.Основание КАК ОснованиеДля,
	|	0 КАК Количество1,
	|	ВЫБОР
	|		КОГДА Звонки.Состояние = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийНовый)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество2,
	|	ВЫБОР
	|		КОГДА 		Звонки.Статус = ""ОТКАЗ-КЛИЕНТ"" 				ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ГАЗ""	ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ УАЗ"" 	ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ФОРД"" 
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ВАЗ"" 			ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ CHERY"" 	ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ КАМАЗ"" 
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ СПЕЦТЕХНИКА""	ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ПРОЧЕЕ"" ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ВТОР""  
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ KANGAROO""		ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ МТЗ""    ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ МАЗ"" 
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ПАЗ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество3,
	|	ВЫБОР
	|		КОГДА Звонки.Статус = ""ОТКАЗ-НЕЦЕЛЕВОЙ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество4,
	|	0 КАК Количество5,
	|	ВЫБОР
	|		КОГДА Звонки.Статус = ""ОТКАЗ-ОПЕРАТОР""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество6,
	|	ВЫБОР
	|		КОГДА Звонки.Статус = ""РАБОТА-ПРИВЯЗКА""
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-ВРАБОТЕ""
	|				ИЛИ Звонки.Статус = ""РАБОТА-АВТОПРИВЯЗКА""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество7,
	|	ВЫБОР
	|		КОГДА Звонки.Статус = ""РАБОТА-НОВЫЙ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество8,
	|	1 КАК КоличествоОбщееБезПочты,
	|	ВЫБОР
	|		КОГДА Звонки.Статус = ""РАБОТА-НОВЫЙ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЦелевыхБезПочты,
	|	ВЫБОР
	|		КОГДА Звонки.Состояние = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийНовый)
	|			ТОГДА ""<Нет направления>""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ""
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ГАЗ""
	|			ТОГДА ""ГАЗ""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ УАЗ""
	|			ТОГДА ""УАЗ""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ФОРД""
	|			ТОГДА ""Ford""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ВАЗ""
	|			ТОГДА ""ВАЗ""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ CHERY""
	|			ТОГДА ""CHERY""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ КАМАЗ""
	|			ТОГДА ""КАМАЗ""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ СПЕЦТЕХНИКА""
	|			ТОГДА ""СПЕЦТЕХНИКА"" 
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ВТОР""
	|			ТОГДА ""С пробегом""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ KANGAROO""
	|			ТОГДА ""Kangaroo Electro""   
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ МТЗ""
	|			ТОГДА ""МТЗ""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ МАЗ""	
	|			ТОГДА ""МАЗ""   
	|		КОГДА Звонки.Статус = ""ОТКАЗ-КЛИЕНТ ПАЗ""	
	|			ТОГДА ""ПАЗ""  
	|		КОГДА Звонки.Статус = ""ОТКАЗ-НЕЦЕЛЕВОЙ""
	|			ТОГДА ""<Нет направления>""
	|		КОГДА Звонки.Статус = ""ОТКАЗ-ОПЕРАТОР""
	|			ТОГДА ""<Нет направления>""
	|		КОГДА Звонки.Статус = ""РАБОТА-ПРИВЯЗКА""
	|				ИЛИ Звонки.Статус = ""ОТКАЗ-ВРАБОТЕ""
	|				ИЛИ Звонки.Статус = ""РАБОТА-АВТОПРИВЯЗКА""
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Звонки.Основание) = ТИП(Документ.СделкаРеализации)
	|						ТОГДА ВЫБОР
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеГАЗ)
	|									ТОГДА ""ГАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеУАЗ)
	|									ТОГДА ""УАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеFORD)
	|									ТОГДА ""Ford""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеВАЗ)
	|									ТОГДА ""ВАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY)
	|									ТОГДА ""Chery""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеКАМАЗ)
	|									ТОГДА ""КАМАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеСПЕЦ)
	|									ТОГДА ""СПЕЦТЕХНИКА""  
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ВторОбщий)
	|										ИЛИ Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ВторВыкуп)
    |                                        ИЛИ Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.Телемаркетинг)
	|									ТОГДА ""С пробегом""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеKangarooElectro)
	|									ТОГДА ""Kangaroo Electro""
    |								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМТЗ)
	|									ТОГДА ""МТЗ""
    |								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМАЗ)
	|									ТОГДА ""МАЗ""
    |								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеПАЗ)
	|									ТОГДА ""ПАЗ""       
	|								ИНАЧЕ ""<Нет направления>""
	|							КОНЕЦ
	|					ИНАЧЕ ""<Нет направления>""
	|				КОНЕЦ
	|		КОГДА Звонки.Статус = ""РАБОТА-НОВЫЙ""
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Звонки.Основание) = ТИП(Документ.СделкаРеализации)
	|						ТОГДА ВЫБОР
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеГАЗ)
	|									ТОГДА ""ГАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеУАЗ)
	|									ТОГДА ""УАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеFORD)
	|									ТОГДА ""Ford""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеВАЗ)
	|									ТОГДА ""ВАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY)
	|									ТОГДА ""Chery""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеКАМАЗ)
	|									ТОГДА ""КАМАЗ""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеСПЕЦ)
	|									ТОГДА ""СПЕЦТЕХНИКА"" 
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ВторВыкуп)
	|										ИЛИ Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ВторОбщий)   
	|										ИЛИ  Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.Телемаркетинг) 	
	|									ТОГДА ""С пробегом""
	|								КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеKangarooElectro)
	|									ТОГДА ""Kangaroo Electro""  
	|							КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМТЗ)
	|									ТОГДА ""МТЗ"" 
	|							КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМАЗ)
	|									ТОГДА ""МАЗ"" 
	|							КОГДА Звонки.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеПАЗ)
	|									ТОГДА ""ПАЗ""  
	|								ИНАЧЕ ""<Нет направления>""                                            
	|							КОНЕЦ
	|					ИНАЧЕ ""<Нет направления>""
	|				КОНЕЦ
	|		ИНАЧЕ ""<Нет направления>""
	|	КОНЕЦ КАК Направление
	|ПОМЕСТИТЬ ВТ017_РеестрЦелевыхТекПериодБезСвода
	|ИЗ
	|	Справочник.Звонки КАК Звонки
	|ГДЕ
	|	Звонки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Звонки.ТочкаОформления.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ПродажаНовые)
	|	И Звонки.Собственный = ЛОЖЬ
	|	И Звонки.Статус <> ""ЗВОНОК-АВТОПРИВЯЗКА""
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗвонокОснование.Ссылка,
	|	ЗвонокОснование.Дата,
	|	ЗвонокОснование.Код,
	|	ЗвонокОснование.Входящий,
	|	ЗвонокОснование.Оператор,
	|	ЗвонокОснование.ТелОператор,
	|	ЗвонокОснование.ТочкаОформления,
	|	ЗвонокОснование.Состояние.Наименование,
	|	ЗвонокОснование.Статус,
	|	ЗвонокОснование.Основание,
	|	ВЫБОР
	|		КОГДА ЗвонокОснование.Основание ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Состояние = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийНовый)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""ОТКАЗ-НЕЦЕЛЕВОЙ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""ЗВОНОК-АВТОПРИВЯЗКА""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""ОТКАЗ-ОПЕРАТОР""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""РАБОТА-ПРИВЯЗКА""
	|				ИЛИ Собственные.Статус = ""ОТКАЗ-ВРАБОТЕ""
	|				ИЛИ Собственные.Статус = ""РАБОТА-АВТОПРИВЯЗКА""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""РАБОТА-НОВЫЙ""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА Собственные.Статус = ""РАБОТА-НОВЫЙ""
	|				ИЛИ Собственные.Статус = ""ЗВОНОК-АВТОПРИВЯЗКА""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗвонокОснование.Основание ЕСТЬ NULL
	|			ТОГДА ""<Нет направления>""
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ""
	|			ТОГДА ""ГАЗ""
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ УАЗ""
	|			ТОГДА ""УАЗ""
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ ФОРД""
	|			ТОГДА ""Ford""
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ ВАЗ""
	|			ТОГДА ""ВАЗ""
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ CHERY""
	|			ТОГДА ""CHERY""  
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ КАМАЗ""
	|			ТОГДА ""КАМАЗ""  
    |		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ KANGAROO""
	|			ТОГДА ""KangarooElectro""    
	|		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ МТЗ""
	|			ТОГДА ""МТЗ""  
    |		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ МАЗ""
	|			ТОГДА ""МАЗ""  
    |		КОГДА Собственные.Статус = ""ОТКАЗ-КЛИЕНТ ПАЗ""
	|			ТОГДА ""ПАЗ""  	
	|		КОГДА Собственные.Статус = ""ОТКАЗ-НЕЦЕЛЕВОЙ""
	|			ТОГДА ""<Нет направления>""
	|		КОГДА Собственные.Статус = ""ОТКАЗ-ОПЕРАТОР""
	|			ТОГДА ""<Нет направления>""
	|		КОГДА Собственные.Статус = ""РАБОТА-ПРИВЯЗКА""
	|				ИЛИ Собственные.Статус = ""ОТКАЗ-ВРАБОТЕ""
	|				ИЛИ Собственные.Статус = ""РАБОТА-АВТОПРИВЯЗКА""
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Собственные.Основание) = ТИП(Документ.СделкаРеализации)
	|						ТОГДА ВЫБОР
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеГАЗ)
	|									ТОГДА ""ГАЗ""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеУАЗ)
	|									ТОГДА ""УАЗ""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеFORD)
	|									ТОГДА ""Ford""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеВАЗ)
	|									ТОГДА ""ВАЗ""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY)
	|									ТОГДА ""Chery""      
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеКАМАЗ)
	|									ТОГДА ""КАМАЗ""      
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеKangarooElectro)
	|									ТОГДА ""Kangaroo Electro""      
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМТЗ)
	|									ТОГДА ""МТЗ""  
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМАЗ)
	|									ТОГДА ""МАЗ""     
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеПАЗ)
	|									ТОГДА ""ПАЗ""     	
	|								ИНАЧЕ ""<Нет направления>""
	|							КОНЕЦ
	|					ИНАЧЕ ""<Нет направления>""
	|				КОНЕЦ
	|		КОГДА Собственные.Статус = ""РАБОТА-НОВЫЙ""
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Собственные.Основание) = ТИП(Документ.СделкаРеализации)
	|						ТОГДА ВЫБОР
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеГАЗ)
	|									ТОГДА ""ГАЗ""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеУАЗ)
	|									ТОГДА ""УАЗ""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеFORD)
	|									ТОГДА ""Ford""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеВАЗ)
	|									ТОГДА ""ВАЗ""
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеCHERY)
	|									ТОГДА ""Chery""   
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеКАМАЗ)
	|									ТОГДА ""КАМАЗ""   
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеKangarooElectro)
	|									ТОГДА ""Kangaroo Electro"" 
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМТЗ)
	|									ТОГДА ""МТЗ"" 
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеМАЗ)
	|									ТОГДА ""МАЗ""      
	|								КОГДА Собственные.Основание.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.НовыеПАЗ)
	|									ТОГДА ""ПАЗ""      
	|								ИНАЧЕ ""<Нет направления>""
	|							КОНЕЦ
	|					ИНАЧЕ ""<Нет направления>""
	|				КОНЕЦ
	|		ИНАЧЕ ""<Нет направления>""
	|	КОНЕЦ
	|ИЗ
	|	Справочник.Звонки КАК ЗвонокОснование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Звонки КАК Собственные
	|		ПО ((ВЫРАЗИТЬ(ЗвонокОснование.Основание КАК Справочник.Звонки)) = Собственные.Ссылка)
	|			И (Собственные.Собственный = ИСТИНА)
	|ГДЕ
	|	ЗвонокОснование.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗвонокОснование.Статус = ""ЗВОНОК-АВТОПРИВЯЗКА""
	|	И Собственные.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗвонокОснование.ТочкаОформления.ВидДеятельности = ЗНАЧЕНИЕ(Справочник.ВидыДеятельности.ПродажаНовые)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ017.Ссылка КАК Ссылка,
	|	ВТ017.ДатаЗвонка КАК ДатаЗвонка,
	|	ВТ017.Сигнатура КАК Сигнатура,
	|	ВТ017.Входящий КАК Входящий,
	|	ВТ017.СотрудникСсылка КАК СотрудникСсылка,
	|	ВТ017.СотрудникСсылка.Наименование КАК СотрудникПредставление,
	|	ВТ017.НомерВнутреннегоТелефона КАК НомерВнутреннегоТелефона,
	|	ВТ017.ТочкаОформленияcСсылка КАК ТочкаОформленияСсылка,
	|	ВТ017.ТочкаОформленияcСсылка.Наименование КАК ТочкаОформленияПредставление,
	|	ВТ017.Состояние КАК Состояние,
	|	ВТ017.Статус КАК Статус,
	|	ВТ017.ОснованиеДля.Код КАК ОснованиеДля,
	|	ВТ017.Количество1 КАК Количество1,
	|	ВТ017.Количество2 КАК Количество2,
	|	ВТ017.Количество3 КАК Количество3,
	|	ВТ017.Количество4 КАК Количество4,
	|	ВТ017.Количество5 КАК Количество5,
	|	ВТ017.Количество6 КАК Количество6,
	|	ВТ017.Количество7 КАК Количество7,
	|	ВТ017.Количество8 КАК Количество8,
	|	ВТ017.Количество1 + ВТ017.Количество2 + ВТ017.Количество3 + ВТ017.Количество4 + ВТ017.Количество5 + ВТ017.Количество6 + ВТ017.Количество7 + ВТ017.Количество8 КАК КоличествоИтогоПоСтатусам,
	|	ВТ017.КоличествоОбщееБезПочты КАК КоличествоОбщееБезПочты,
	|	ВТ017.КоличествоЦелевыхБезПочты КАК КоличествоЦелевыхБезПочты,
	|	ВТ017.Направление КАК Направление
	|ИЗ
	|	ВТ017_РеестрЦелевыхТекПериодБезСвода КАК ВТ017";
	Возврат  ТекстЗапроса;
КонецФункции

Функция ПолучитьИерархиюПоИмени(ИмяИерархии) Экспорт
	//Прочитать иерархию из учетной политики вида СуперГруппа, Группа, Сайт(Канал)
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("Супергруппа", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(64)));
	тз.Колонки.Добавить("Группа", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(64)));
	тз.Колонки.Добавить("Сайт", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(64)));
                    
	Если Не ЗначениеЗаполнено(ИмяИерархии) Тогда
		Возврат тз
	КонецЕсли;	
	
	Парам = Новый Структура();
	Парам.Вставить(ИмяИерархии);
	
	//Возвращает заполненную структуру Парам
	РегистрыСведений.УчетнаяПолитика.Получи(Парам);
	Если Не ЗначениеЗаполнено(Парам[ИмяИерархии]) Тогда
		Возврат тз
	КонецЕсли;
	
	Чт = Новый ЧтениеXML();
	Чт.УстановитьСтроку(Парам[ИмяИерархии]);
	Постр = Новый ПостроительDOM();
	Попытка
		Док = Постр.Прочитать(Чт);
	
		Корень = Док.ДочерниеУзлы[0];
		Для Каждого Ряд Из Корень.ДочерниеУзлы Цикл
			Новая = тз.Добавить();
			Новая.Группа 		= Ряд.ДочерниеУзлы[0].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Новая.Сайт 			= Ряд.ДочерниеУзлы[1].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Новая.СуперГруппа 	= Ряд.ДочерниеУзлы[2].ДочерниеУзлы[0].ТекстовоеСодержимое; 
		КонецЦикла;
	Исключение
			ЗаписьЖурналаРегистрации("ПрочитатьИерархию", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("ИмяИерархии=%1", ИмяИерархии), ОписаниеОшибки());
		   Возврат тз
	КонецПопытки;
	   
	Возврат тз;
КонецФункции
#КонецОбласти