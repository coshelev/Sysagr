Функция НазначьИсполнителя(Роль, Подразделение, ДопРеквизитАдресации = "") Экспорт
	//Возвращает пользователя-исполнителя по роли и подразделению
		
	ИсполнительПоУмолчанию = Справочники.Пользователи.НайтиПоНаименованию("Лодякова Татьяна Викторовна");
	
	Доступно = 		ТипЗнч(Роль)			 = Тип("СправочникСсылка.Роли")
				И	ТипЗнч(Подразделение) 	= Тип("СправочникСсылка.Предприятие") ;

	Если Не Доступно Тогда
		Возврат ИсполнительПоУмолчанию;	
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Исполнитель ИЗ РегистрСведений.АдресацияЗадач ГДЕ Роль = &Роль И Подразделение = &Подразделение И ДопРеквизитАдресации = &ДопРеквизитАдресации");
	Запрос.УстановитьПараметр("Роль", 			Роль);
	Запрос.УстановитьПараметр("Подразделение",	Подразделение);
	Запрос.УстановитьПараметр("ДопРеквизитАдресации",  ДопРеквизитАдресации);
	РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ИсполнительПоУмолчанию;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();	
	
	Исполнитель = Выборка.Исполнитель;
	
	Если Исполнитель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка") Тогда
		Исполнитель = ИсполнительПоУмолчанию;
	КонецЕсли;
	
	Возврат Исполнитель;
	
КонецФункции

Функция ПриОткрытииПоказыватьЗадачи(Пользователь) Экспорт
	// Возвращает свойство пользователя показывать при открытии список задач
	// Вызов из: МодульУправляемогоПриложения.ПриНачалеРаботыСистемы()

	Доступно = 		ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи")
				И 	ЗначениеЗаполнено(Пользователь);
	Если Не Доступно Тогда
		Возврат Ложь
	КонецЕсли;
	
	Возврат Пользователь.ПриОткрытииПоказыватьЗадачи	
КонецФункции

#Область Задачи

Функция ЗадачаЗаписать(Задача, Комментарий="") Экспорт
	
	Доступно = 		ТипЗнч(Задача) = Тип("ЗадачаСсылка.ЗадачаОбратнаяСвязь")
				И 	ЗначениеЗаполнено(Задача);
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Зад = Задача.ПолучитьОбъект();
	Зад.Комментарий = Комментарий;
	
	Попытка
		Зад.Записать();
	Исключение  
		ЗаписьЖурналаРегистрации("ЗадачаЗаписать()", УровеньЖурналаРегистрации.Ошибка, , СтрШаблон("Задача = %1; Комментарий = %2", Задача, Комментарий), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
  КонецФункции

Функция ЗадачаВыполнить(Задача, ИсполнительФакт = Неопределено, ДатаВыполнения = '00010101', Комментарий = "", ОценкаВыполненияПредшествующейЗадачи = 0) Экспорт
	//Параметр ОценкаВыполненияПредшествующейЗадачи используется для задач проверки	

	
	ЗначениеПоУмолчанию = Ложь;
	
	Доступно = 		ТипЗнч(Задача) = Тип("ЗадачаСсылка.ЗадачаОбратнаяСвязь")
				И 	ЗначениеЗаполнено(Задача);	
	Если Не Доступно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Зад = Задача.ПолучитьОбъект();
	Зад.Комментарий 							= Комментарий;
	Зад.ИсполнительФакт 						= ПараметрыСеанса.ТекущийПользователь;
	Зад.ОценкаВыполненияПредшествующейЗадачи 	= ОценкаВыполненияПредшествующейЗадачи;    	
	Зад.ДатаВыполнения 							= ?(ДатаВыполнения = '00010101', ТекущаяДата(), ДатаВыполнения);
	Зад.ИсполнительФакт 						= ?(ИсполнительФакт = Неопределено, ПараметрыСеанса.ТекущийПользователь, ИсполнительФакт); 
		
	Попытка
		Зад.ВыполнитьЗадачу();
	Исключение
		ОбслуживаниеСервер.ЗарегистрироватьСобытие("ЗадачаВыполнить()", УровеньЖурналаРегистрации.Ошибка, , СтрШаблон("Задача = %1, ИсполнительФакт = %2, ДатаВыполнения = %3, Комментарий = %4", Задача, ИсполнительФакт, ДатаВыполнения, Комментарий), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат ЗначениеПоУмолчанию;
	КонецПопытки;
	
	Возврат Истина;

КонецФункции
#КонецОбласти
