Функция JivositeEvent(event) Экспорт
	//Обрабатывает сообщения от  jivosite
	//Пример сообщения: {"event_name":"chat_finished","chat_id":15,"widget_id":"bhe4tVifbW","visitor":{"name":null,"email":null,"phone":null,"description":null,"number":5,"chats_count":1},"agents":[{"id":4,"email":"luidornn@mail.ru","name":"Тест"}],"chat":{"messages":[{"timestamp":1590065522,"message":"Привет из самоизоляции","type":"visitor"},{"timestamp":1590065550,"message":"Привет, привет!","agent_id":4,"type":"agent"}],"rate":null},"plain_messages":"[Visitor ] - 2020-05-21 15:52:02 - Привет из самоизоляции\n[Agent Тест] - 2020-05-21 15:52:30 - Привет, привет!","html_messages":"<p><strong>Visitor </strong><br>2020-05-21 15:52:02<br>Привет из самоизоляции</p><br><p><strong>Agent Тест</strong><br>2020-05-21 15:52:30<br>Привет, привет!</p>","session":{"geoip":{"region_code":"51","country_code":"RU","country":"Russian Federation","region":"Nizhegorod","city":"Bor","isp":"","latitude":"56.3567","longitude":"44.0669","organization":"ER-Telecom"},"utm":"campaign=(direct)|source=(direct)","utm_json":{"campaign":"(direct)","source":"(direct)"},"ip_addr":"5.164.194.191","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36"},"user_token":null,"page":{"url":"http://tech.luidorauto.ru/","title":"Моторный центр Луидор"},"analytics":{},"department":{"id":2,"name":"Автосалон ГАЗ МКАД, 19-й км."}}
	
	Доступно = 		ТипЗнч(event) = Тип("Строка")
				И 	ЗначениеЗаполнено(event);
				
	Если Не Доступно Тогда
		Возврат "error: empty event";
	КонецЕсли;
	
	Чт = Новый ЧтениеJSON();
	Чт.УстановитьСтроку(event);	
	Попытка
		f = ПрочитатьJSON(Чт);	
	Исключение
		ЗаписьЖурналаРегистрации("JivositeEvent: ошибка чтения json в фабрику", УровеньЖурналаРегистрации.Ошибка, , event, ОписаниеОшибки());
		Возврат "error: can not read json to fabric";
	КонецПопытки;
	Чт.Закрыть();
	
	Если f.event_name <> "chat_finished" Тогда
		Возврат "ок";
	КонецЕсли;
	
	//Пример сообщения, которое не было принято в работу и клиент закрыл беседу, в нем нет поля "email" в объекте "agents"
	//{"event_name":"chat_finished","chat_id":2240,"widget_id":"u7qhH2wkfC","user_token":null,"visitor":{"name":null,"email":null,"phone":null,"description":null,"number":1909,"chats_count":1},"agents":[{}],"chat":{"messages":[{"message":"Скажите Валдай Некст промтоварный фургон в наличии есть? Можно в живую посмотреть? ","timestamp":1617286288,"type":"visitor"}],"rate":null},"session":{"geoip":{"region_code":"51","country_code":"RU","country":"Russian Federation","region":"Nizhegorod","city":"Nizhniy Novgorod","isp":"","latitude":"56.32870102","longitude":"44.00199890","organization":"LLC GAZ-ITService"},"utm":"campaign=(direct)|source=(direct)","utm_json":{"campaign":"(direct)","source":"(direct)"},"ip_addr":"178.170.208.62","user_agent":"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"},"page":{"url":"https://www.luidorauto.ru/gaz/valday-nekst","title":"Валдай Некст - Официальный дилер ГАЗ Луидор в Нижнем Новгороде"},"analytics":{"ga":"213454250.1617286219","ym":"1617286288770818622"},"plain_messages":"[Visitor ] - 2021-04-01 17:11:28 - Скажите Валдай Некст промтоварный фургон в наличии есть? Можно в живую посмотреть? ","html_messages":"<p><strong>Visitor </strong><br>2021-04-01 17:11:28<br>Скажите Валдай Некст промтоварный фургон в наличии есть? Можно в живую посмотреть? </p>"}
	Попытка
		email = f.agents[0].email;		
	Исключение
		ЗаписьЖурналаРегистрации("JivositeEvent: нет поля email в сообщении", УровеньЖурналаРегистрации.Ошибка, , event);
		Возврат "error: email field is empty"
	КонецПопытки;
	
	//Поле "email" в "agents" есть, но оно не заполнено
	Если Не ЗначениеЗаполнено(email) Тогда
		ЗаписьЖурналаРегистрации("JivositeEvent: не заполнен email сотрудника", УровеньЖурналаРегистрации.Ошибка, , event);
		Возврат "error: empty agent email";
	КонецЕсли;
	
	ПервоеСообщение		= f.chat.messages[0].timestamp;
	Сч 					= f.chat.messages.Количество();  //Всего сообщений
	ПоследнееСообщение	= f.chat.messages[Сч-1].timestamp;
	chat_id				= f.chat_id;
	Сигнатура 			= email+"#"+chat_id+"#"+Формат(ПервоеСообщение,"ЧГ=0");
	
	
	//Зафиксировать событие в регистре сведений
	//-----------------------------------------
	Зап = РегистрыСведений.JivoSite.СоздатьМенеджерЗаписи();
	Зап.Сигнатура = Сигнатура;
	Зап.Прочитать();;
	Если Зап.Выбран() Тогда
		Возврат "error: such record already exist";
	КонецЕсли;
	
	Зап.Сигнатура	= Сигнатура;
	Зап.json 		= event;
	Зап.email 		= email;
	Зап.Начало		= UnixTimestamp_2_Дата(ПервоеСообщение);
	Зап.Окончание 	= UnixTimestamp_2_Дата(ПоследнееСообщение);
	
	Попытка
		Зап.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("JivositeEvent: ошибка записи в регистр", УровеньЖурналаРегистрации.Ошибка, ,event, ОписаниеОшибки());
		Возврат "error: can not write to register";	
	КонецПопытки;
	
	htmlСодержание = "<html>"+f.html_messages+"</html>";
	
	//Передать на обработку в ОУ
	//--------------------------
	СтрОчередь		= "MatrixJivosite";
	СтрМетка 		= "Регистрация чата";
	СтрСообщение 	= "";
	
	// Сформируем XML-файл сообщения
	//-------------------------------------------------------------------------------------------------
	//Тело сообщения (XML)			– передается в элементе Документ:
	//ЧатИД 		(строка) 		- сигнатура чата
	//Дата 			(дата и время) 	- дата и время пропущенного звонка
	//Оператор		(строка)		- email оператора
	//Абонент 		(строка)		- внешний номер телефона (телефон внешнего абонента), пока пустой, в будущем можно получать через форму пречата (пока не настроено на сайте)
	//Комментарий 	(строка)		- текст беседы
	
	Приемник = Новый ЗаписьXML;
	Приемник.УстановитьСтроку("UTF-8");
	Приемник.ЗаписатьОбъявлениеXML();
	Приемник.ЗаписатьНачалоЭлемента("Документ");
	
	// Запись шапки документа
	//-------------------------------------------------------------------------------------------------
	Приемник.ЗаписатьАтрибут("ЧатИД",				Зап.Сигнатура);
	Приемник.ЗаписатьАтрибут("Дата",				СокрЛП(Формат(Зап.Начало,"ДФ=yyyyMMddHHmmss")));
	Приемник.ЗаписатьАтрибут("ЭлПочтаОператора",	Зап.email);
	Приемник.ЗаписатьАтрибут("Абонент",				"");
	Приемник.ЗаписатьАтрибут("Сообщения",			htmlСодержание);
	Приемник.ЗаписатьКонецЭлемента();
	СтрСообщение = Приемник.Закрыть();
	
	Рез = ОУ_Взаимодействие.ОчередьСообщениеОтправить(СтрОчередь, СтрМетка, СтрСообщение);
	Если ЗначениеЗаполнено(Рез) Тогда
		ЗаписьЖурналаРегистрации("JivositeEvent: ошибка добавления в очередь сообщений", УровеньЖурналаРегистрации.Ошибка, , СтрСообщение, Рез);
		Возврат "warning: event is not transferrd to matrix";
	КонецЕсли;

	Возврат "ok"
КонецФункции

Функция UnixTimestamp_2_Дата(Timestamp)
	//Преобразовывает число - отметку времени Unix в дату
	//Параметры:
	//	Timestamp(число) - отметка времени Unix
	
	Результат = '00010101';
	
	Доступно = Истина;
	Доступно = Доступно И ТипЗнч(Timestamp) = Тип("Число");
	Если Не Доступно Тогда
		Возврат Результат;
	КонецЕсли;
	
    Результат =  МестноеВремя('19700101' + Timestamp);
	Возврат Результат; 	
КонецФункции

#Область ИнтернентЗаявки_в_тч_Автозвонки
Функция ИнтернетЗаявка(PhoneNum, Site, Extra = "", СигнатураПочтовогоСообщения = "") Экспорт
	//Регистрирует интернет-заявку и возможно создает задачу на звонок/автозвонок
	//PhoneNum 	- телефон абонента
	//Site		- имя сайта
	//Extra 	- дополнительные данные (имена и значения параметров заявки в любом формате)
	//СигнатураПочтовогоСообщения - если заявка прочитана с почтового ящика, то сигнатура этого почтового сообщения
	
	Если Не ЗначениеЗаполнено(PhoneNum) Тогда
		Возврат "error 01";
	КонецЕсли;
		
	//Сформируй ИД интернет-заявки
	Сигнатура = xmlСтрока(Новый УникальныйИдентификатор());
	
	//Преобразуй доп. параметры в соответствии с шаблоном
	Коммент = ИнтернетЗаявкиПараметры_Добавить(Сигнатура, Site, Extra); 
		
	//Добавь интернет-заявку
	Выполнено = РегистрыСведений.ИнтернетЗаявки.Добавить(Сигнатура, ТекущаяДата(), Site, PhoneNum, Коммент, СигнатураПочтовогоСообщения);
	Если Не Выполнено Тогда
		Возврат "error 011"
	КонецЕсли;        
	
	//Только для отладки
	//Если СтрНайти(PhoneNum, "9506080027")>0 Тогда
		//Возврат "error 9506080027";
	//КонецЕсли;
	
	//Если заявка с сайтов газа следующих имен и содержит следующие имена форм тогда - только регистрируем интернет-заявку
	Доступно = СтрНайти("luidorauto.ru, luidor-ufa.ru, luidor-chel.ru, luidor-kazan.ru, azimut.ru, luidor-cheb.ru, luidor-rm.ru, vladavto.com, gaz.luidor-ufa.ru, gaz.luidor-chel.ru, gaz.luidor-kazan.ru, gaz.azimut.ru, gaz.luidor-cheb.ru, gaz.luidor-rm.ru, gaz.vladavto.com, luidor-nn.ru, gaz.avtogaz68.ru, avtogaz68.ru", Site)>0
			И ( 		СтрНайти(Extra, "Макет формы ""Онлайн презентация""")>0 
					ИЛИ СтрНайти(Extra, "TEST-TRUCK")>0 
					ИЛИ СтрНайти(Extra, "Макет формы ""Забронировать автомобиль в наличии""")>0
					ИЛИ СтрНайти(Extra, "Макет формы ""Получить счёт"""))>0;				
	Если Доступно Тогда
		Возврат "error 012";				
	КонецЕсли;				

	// Заполни свойства интернет-заявки
	Результат = "";
	Если Лев(Extra, 1)="{" Тогда
		Результат = РегистрыСведений.ИнтернетЗаявкиСвойства.Добавить(Сигнатура, Extra);
	КонецЕсли; 
		
	//По интернет-заявкам со свойством "form type" = "Заказать выездную презентацию" не создаем задач, отправляем письмо менеджеру
	Если Результат = "Выполнено. Заказать выездную презентацию" Тогда
		Если ЗадачиСервер.ЭтоИнтенетЗаявкаФормы_ЗаказатьВыезднуюПрезентацию(Сигнатура) Тогда
			Возврат "error 012";
		КонецЕсли;	
	КонецЕсли;
	
	//Сконвертируй номер телефона
	Телефон = Конвертация.ТелефонВнешнийНормализовать(PhoneNum);
	
	//Если после конвертации в номере остались не цифры - задачу не создаем
	Если Не Конвертация.ЭтоТолькоЦифры(Телефон) Тогда
		Возврат "";
	КонецЕсли;
	
	//Добавить префикс выхода на международную линию, если телефонный номер зарубежный
	Если СтрДлина(Телефон)>=10 Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 Страна ИЗ РегистрСведений.ТелНомерныеПланы ГДЕ НачДиапазона >= &Телефон И КонДиапазона <= &Телефон И Страна.Наименование <> &Наименование");
		Запрос.УстановитьПараметр("Телефон", 		Число(Телефон));
		Запрос.УстановитьПараметр("Наименование", 	"Российская Федерация");
		РезультатЗапроса = ОбщегоНазначения.ВыполнитьЗапрос(Запрос);
		Если Не РезультатЗапроса.Пустой() Тогда
			Телефон = "810"+Телефон;
		КонецЕсли;
	КонецЕсли;
	
	ЗакройЗадачу = Ложь;
	
	//Если свойство form_type = "Регистрация" или  form_type = "Диалог в чает" нужно и создать задачу и сразу ее закрыть
	Если Результат = "Выполнено. Регистрация" Тогда
		ЗакройЗадачу = Истина;
	КонецЕсли;
	
	ЗадачиСервер.СоздайЗадачуКакЗаявкуИлиКакАвтозвонок(Телефон, Site, Сигнатура, ЗакройЗадачу);
		
	Возврат "accepted"
КонецФункции
#КонецОбласти

Функция LeadGenic(Стр) Экспорт
	Доступно = Истина;
	Доступно = Доступно И Лев(Стр, 1)="{";
	Доступно = Доступно И Прав(Стр,1)="}";
	Доступно = Доступно И СтрДлина(Стр)>9;
	Если Не Доступно Тогда
		Возврат "bad json";
	КонецЕсли;
	
	Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(Стр);	
	Попытка
		f = ПрочитатьJSON(Чтение);	
		phone = f.phone;
		site  = f.siteName;
	Исключение
		ЗаписьЖурналаРегистрации("JivositeEvent: ошибка чтения json в фабрику", УровеньЖурналаРегистрации.Ошибка, , Стр, ОписаниеОшибки());
		Возврат "error: can not read json to fabric";
	КонецПопытки;
	Чтение.Закрыть();
	ИнтернетЗаявка(phone, site);
КонецФункции

Функция Anketa(linkedId) Экспорт
	//Возвращает анкету ЕКЦ по linkedId звонка
	//Вызывается из вэбСервиса Anketa
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("Вопрос", 	Новый ОписаниеТипов("Строка"));
	тз.Колонки.Добавить("Ответ",	Новый ОписаниеТипов("Строка"));
	
	Доступно = 		ТипЗнч(linkedId) = Тип("Строка")
				И	ЗначениеЗаполнено(linkedId);
	Если Не Доступно Тогда
		Возврат ЗначениеВСтрокуВнутр(тз)
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	Т.Вопрос.Наименование КАК Вопрос,
	|	Т.Ответ.ПолнаяСтрока КАК Ответ
	|ИЗ
	|	РегистрСведений.АнкетыРасширенные.СрезПоследних КАК Т
	|ГДЕ
	|	Т.Сигнатура В (&СигнатураВх, &СигнатураИсх)";
	Запрос.УстановитьПараметр("СигнатураВх", 	СтрШаблон("%1%2%3", "1#", linkedId, "#000000001"));
	Запрос.УстановитьПараметр("СигнатураИсх",	СтрШаблон("%1%2%3", "0#", linkedId, "#000000001"));
	РезультатЗапроса = Запрос.Выполнить(); 
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат ЗначениеВСтрокуВнутр(тз)
	КонецЕсли;  
	
	Возврат ЗначениеВСтрокуВнутр(РезультатЗапроса.Выгрузить())
КонецФункции  

Функция CallbackWebForm(linkedId) Экспорт 
	//Возвращает данные вэбформы по linkedId звонка
	//Вызывается из вэбСервиса CallbackWebForm

	txt = "<!DOCTYPE html><html lang=""en""></html>"; 
	
	Доступно = 		ТипЗнч(linkedId) = Тип("Строка")
				И	ЗначениеЗаполнено(linkedId);
	Если Не Доступно Тогда
		Возврат txt;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Заявки.Комментарий КАК Комментарий
	|ИЗ
	|	РегистрСведений.ЗадачиИнтернетЗаявки КАК Задачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИнтернетЗаявки КАК Заявки
	|		ПО Задачи.Сигнатура = Заявки.Сигнатура
	|ГДЕ
	|	Задачи.ЗвонокЗакрытия В (&ЗвонокЗакрытияИсх, &ЗвонокЗакрытияВх)
	|	И СТРНАЙТИ(Заявки.Комментарий, &ПризнакHTML) > 0"; 
	Запрос.УстановитьПараметр("ЗвонокЗакрытияИсх", 	СтрШаблон("%1%2%3", "0#", linkedId, "#000000001"));
	Запрос.УстановитьПараметр("ЗвонокЗакрытияВх",	СтрШаблон("%1%2%3", "1#", linkedId, "#000000001"));     
	Запрос.УстановитьПараметр("ПризнакHTML", 		"<!DOCTYPE html>");   
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат txt;
	КонецЕсли;
	Возврат РезультатЗапроса.Выгрузить()[0][0];
КонецФункции

Функция ПроизвольныеДанныеPost(ТелоЗапроса) Экспорт 
	
	Чт = Новый ЧтениеJSON();
	Чт.УстановитьСтроку(ТелоЗапроса);
	Попытка
		Фабрика = ПрочитатьJSON(Чт);
		ТипОбращения = Фабрика.type;
	Исключение
		ЗаписьЖурналаРегистрации("ПроизвольныеДанныеPost", УровеньЖурналаРегистрации.Ошибка, , ТелоЗапроса, "Вызов http-сервиса http://mainappl.main.luidorauto.ru/sys_agr/hs/webhooks/anypost/v1");	
		//"error: can not read json to fabric";
		Ответ = Новый HTTPСервисОтвет(200);
	КонецПопытки;
	
	Если ТипОбращения = "autobroker mail message" Тогда  
		
		//Для сообщения Autobroker
		//------------------------
		
		//Вариант1. Создать задачу руководителю телемаркетингового центра
		//Соединение 	= Новый HTTPСоединение("/mainappl/asc_oper/hs/chats");
		//Заголовок 	= Новый Соответствие();
		//Заголовок.Вставить("Accept", "application/json");
		//Запрос 		= Новый HTTPЗапрос("/Autobroker/" , Заголовок); 
		//Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
		//Попытка
		//	Соединение.ВызватьHTTPМетод("POST",Запрос);
		//Исключение
		//	ЗаписьЖурналаРегистрации("ШаблонДляПроизвольныхДанныхPOST", УровеньЖурналаРегистрации.Ошибка, , ТелоЗапроса, "Вызов http-сервиса http://mainappl/asс_oper/hs/chats/Autobroker");	
		//КонецПопытки;     
		
		//Вариант 2. Создать интернет-заявку на обратный звонок, если из тела письма удалось определить номер телефона
		messageType = "";	
		messageID	= "";
		messageBody = "";
	
		Чт = Новый ЧтениеJSON();
		Чт.УстановитьСтроку(ТелоЗапроса);	
		Попытка
			Об = ПрочитатьJSON(Чт);	
		Исключение
			ЗаписьЖурналаРегистрации("ПроизвольныеДанныеPost. autobroker mail message", УровеньЖурналаРегистрации.Ошибка, , ТелоЗапроса, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Ответ = Новый HTTPСервисОтвет(200);
			Возврат Ответ;
  		КонецПопытки;
		Чт.Закрыть();	
	
		Попытка
			messageType = Об.type;
			messageID	= Об.messageID;
			messageBody	= Об.messageBody;
		Исключение
			ЗаписьЖурналаРегистрации("ПроизвольныеДанныеPost. autobroker mail message", УровеньЖурналаРегистрации.Ошибка, , ТелоЗапроса, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Ответ = Новый HTTPСервисОтвет(200);
			Возврат Ответ;
		КонецПопытки;
	
		Если messageType <> "autobroker mail message" Тогда
			ЗаписьЖурналаРегистрации("ПроизвольныеДанныеPost. autobroker mail message. error: not a autobroker massage", УровеньЖурналаРегистрации.Ошибка, , ТелоЗапроса, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
			Ответ = Новый HTTPСервисОтвет(200);
			Возврат Ответ;
		КонецЕсли;
		
		//Если оказались здесь, значит тело сообщения имеет корректный формат
		ЭлПочта.Автоброкер_СоздайИнтернетЗаявку(messageBody	, messageID);
		Ответ = Новый HTTPСервисОтвет(200);
		Возврат Ответ;
	КонецЕсли; 
		
	Если ТипОбращения = "Telemarketing outcoming operators calls report for Matrix" Тогда
		//Для отчета из Матрицы из рабочего стола операторов и администратора ТМЦ, исходящие звонки длительностью более 30 секунд
		//-------------------------------------------------------------------------------------------------------------------------
		Запрос = Новый Запрос();
		Запрос.Текст =  
		"ВЫБРАТЬ З.Сигнатура КАК Сигнатура, З.Инициатор.Код КАК Оператор, НАЧАЛОПЕРИОДА(З.Дата, ДЕНЬ) КАК Период
		|ИЗ		РегистрСведений.Звонки КАК З ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК C ПО З.Сигнатура = C.Сигнатура
		|ГДЕ	З.Дата МЕЖДУ &Начало И &Окончание И НЕ З.ЭтоВходящий И З.Инициатор.Код В(&ТелефоныТМЦ) И C.ОПРазговор >= 30";         
		
		ТелефоныТМЦ = СтрРазделить(Фабрика.phones,","); 		//ТелефоныТМЦ = СтрРазделить("3023,3024,3025,3026,3027,3028,3029,3041,3046,3048,5900",","); 		
	    Запрос.УстановитьПараметр("ТелефоныТМЦ", 	ТелефоныТМЦ);  
		Запрос.УстановитьПараметр("Начало",			НачалоДня(Дата(Фабрика.start)));
		Запрос.УстановитьПараметр("Окончание",		КонецДня(Дата(Фабрика.end)));
		
		тз = Новый ТаблицаЗначений();
		тз.Колонки.Добавить("Сигнатура", 	Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(30))); 
		тз.Колонки.Добавить("Оператор",		Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4))); 
		тз.Колонки.Добавить("Период",		Новый ОписаниеТипов("Дата"));
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			тз = РезультатЗапроса.Выгрузить();
		КонецЕсли;   
		
		РезультатСтрокой = ЗначениеВСтрокуВнутр(тз);
		
		Ответ = Новый HTTPСервисОтвет(200); 
		Ответ.УстановитьТелоИзСтроки(РезультатСтрокой);
		Возврат Ответ; 
	КонецЕсли; 
	
	Если ТипОбращения = "Website calls" Тогда 
		//Исходящие звонки по интернет-заявкам. Для отчетов Матрицы
		//Для отчета из Матрицы исходящие по интернет заявкам. Они попадают на ЕКЦ, переводятся на ТМЦ 
		//----------------------------------------------------------------------------------------------
		Запрос = Новый Запрос();
		Запрос.Текст =  
		"ВЫБРАТЬ 	З.Сигнатура КАК Сигнатура, НАЧАЛОПЕРИОДА(З.Дата, ДЕНЬ) КАК Период
		|ИЗ 		РегистрСведений.Звонки КАК З ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗвонкиСтатОбщая КАК C ПО З.Сигнатура = C.Сигнатура
		|ГДЕ 		З.Дата МЕЖДУ &Начало И &Окончание И НЕ З.ЭтоВходящий И C.Основание ПОДОБНО &Основание";         
		
		Запрос.УстановитьПараметр("Начало",			НачалоДня(Дата(Фабрика.start)));
		Запрос.УстановитьПараметр("Окончание",		КонецДня(Дата(Фабрика.end))); 
		Запрос.УстановитьПараметр("Основание",		"iq_%" );
		
		тз = Новый ТаблицаЗначений();  
		тз.Колонки.Добавить("Сигнатура", 	Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(30))); 
		тз.Колонки.Добавить("Период",		Новый ОписаниеТипов("Дата"));   
		
		РезультатЗапроса = Запрос.Выполнить();  
		
		тз = ?(РезультатЗапроса.Пустой(), тз, РезультатЗапроса.Выгрузить());	
		РезультатСтрокой = ЗначениеВСтрокуВнутр(тз);
		
		Ответ = Новый HTTPСервисОтвет(200); 
		Ответ.УстановитьТелоИзСтроки(РезультатСтрокой);
		Возврат Ответ;
	КонецЕсли;
	
	Если ТипОбращения = "stokomservice" Тогда 
		//Заявка СТО от коммерческой службы, отправленная с url https://motor-luidor.ru/leads/stokomservice/
		//--------------------------------------------------------------------------------------------------
		
		Соединение 	= Новый HTTPСоединение("/mainappl/asc_oper/hs/chats");
		Заголовок 	= Новый Соответствие();
		Заголовок.Вставить("Accept", "application/json");
		Запрос 		= Новый HTTPЗапрос("/autoanswer/v1/" , Заголовок); 
		Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
		Попытка
			ОтветОУ = Соединение.ВызватьHTTPМетод("POST",Запрос);
		Исключение
			ЗаписьЖурналаРегистрации("ШаблонДляПроизвольныхДанныхPOST", УровеньЖурналаРегистрации.Ошибка, , ТелоЗапроса, "Вызов http-сервиса http://mainappl/asс_oper/hs/chats/Autoanswer");	
		КонецПопытки;
		
		
		Ответ = Новый HTTPСервисОтвет(200); 
		Ответ.УстановитьТелоИзСтроки(ОтветОУ.ПолучитьТелоКакСтроку());
		Возврат Ответ;
	КонецЕсли;

    Если ТипОбращения = "report" Тогда 
		//Отчет
		//--------------------------------------------------------------------------------------------------
		
		Отч = Отчеты.ИнтернетЗаявкиЗвонкиИДругиеСпособыЗакрытия.Создать();
		Отч.Период.ДатаНачала 		= НачалоМесяца(ТекущаяДата());
		Отч.Период.ДатаОкончания 	= КонецМесяца(ТекущаяДата());
		Отч.ТекВариант 				= "ЗвонкиВсеПоИнтернетЗаявкам";
		
		ТабДок = Новый ТабличныйДокумент();
		Отч.СкомпоноватьРезультат(ТабДок);
		
		ИмяВремФайла = ПолучитьИмяВременногоФайла("htm");
		ТабДок.Записать(ИмяВремФайла, ТипФайлаТабличногоДокумента.HTML);
		
		Поток = ФайловыеПотоки.Открыть(ИмяВремФайла, РежимОткрытияФайла.Открыть, ДоступКФайлу.Чтение);
		
		Ответ = Новый HTTPСервисОтвет(200); 
		Тело = Ответ.ПолучитьТелоКакПоток(); 
		
		Поток.КопироватьВ(Тело);
		
		Тело.СброситьБуферы();
		Тело.Закрыть();
		Поток.Закрыть();
		
		Возврат Ответ;
		
	КонецЕсли;

КонецФункции      

Функция ИнтернетЗаявкиПараметры_Добавить(Сигнатура, Site, Extra) Экспорт      
	
	Доступно = ТипЗнч(Extra)=Тип("Строка") И ЗначениеЗаполнено(Extra);  
	Если Не Доступно Тогда
		Возврат "";
	КонецЕсли;

	Начало = СтрНайти(Extra,"<extra>");
	Если Начало = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Окончание = СтрНайти(Extra, "</extra>",, Начало + 7);
	Если Окончание = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	рез = Сред(Extra, Начало+7, Окончание - Начало-7);
		
	Парамс = Авито.ПрочитатьЗначениеJsonВСоответствие(рез);
	Если Парамс.Количество()=0 Тогда
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ Параметр, НаименованиеПараметра, Порядок, ЕКЦ ИЗ РегистрСведений.ИнтернетЗаявкиШаблоныПараметров ГДЕ Сайт = &Сайт И Форма = &Форма УПОРЯДОЧИТЬ ПО Порядок");
	Запрос.УстановитьПараметр("Сайт", Site); 
	Запрос.УстановитьПараметр("Форма", "");
	РЗ = Запрос.Выполнить();
	Если РЗ.Пустой() Тогда
		Возврат "";
		ЗаписьЖурналаРегистрации("ИнтернетЗаявкиПараметры_Добавить", УровеньЖурналаРегистрации.Ошибка,, СтрШаблон("Сигнатура = %1; Extra = %2", Сигнатура, Extra));
	КонецЕсли;   
	
	ТЗ = РЗ.Выгрузить(); 
	
	ОУ 	= Новый Массив();
	ЕКЦ = Новый Массив(); 
	Для Каждого i Из Парамс Цикл
		Найдено = ТЗ.НайтиСтроки(Новый Структура("Параметр", i.Ключ));
		Если Найдено.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Стр = Новый Соответствие();
		Стр.Вставить(Найдено[0].НаименованиеПараметра,i.Значение);
		ОУ.Добавить(Стр);
		
		//Если есть признак отображать для ЕКЦ
		Если Найдено[0].ЕКЦ Тогда
			ЕКЦ.Добавить(Стр);		
		КонецЕсли;
	КонецЦикла; 

	json = "";
	Если ОУ.Количество() <> 0 Тогда
		Общ = Новый Структура("ОУ, ЕКЦ", ОУ, ЕКЦ);
		json = Авито.ЗаписатьЗначениеJSON(Общ);  
	КонецЕсли;  
	
	Возврат json;
		
КонецФункции